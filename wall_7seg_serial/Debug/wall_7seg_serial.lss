
wall_7seg_serial.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00001560  000015f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001560  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  0080012a  0080012a  0000161e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000161e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000167c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  000016bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013ef  00000000  00000000  00001784  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c9a  00000000  00000000  00002b73  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000075f  00000000  00000000  0000380d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000300  00000000  00000000  00003f6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000079a  00000000  00000000  0000426c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ca  00000000  00000000  00004a06  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  000053d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_1>
       8:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__vector_7>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 9b 01 	jmp	0x336	; 0x336 <__vector_14>
      3c:	0c 94 c4 01 	jmp	0x388	; 0x388 <__vector_15>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 5b 02 	jmp	0x4b6	; 0x4b6 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 e6       	ldi	r30, 0x60	; 96
      7c:	f5 e1       	ldi	r31, 0x15	; 21
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	aa 32       	cpi	r26, 0x2A	; 42
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	aa e2       	ldi	r26, 0x2A	; 42
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a7 33       	cpi	r26, 0x37	; 55
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 96 02 	call	0x52c	; 0x52c <main>
      9e:	0c 94 ae 0a 	jmp	0x155c	; 0x155c <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_1>:

/**********************************************************************************************/
/*                                      INT 0 Interrupts                                      */
/**********************************************************************************************/
ISR(INT0_vect)
{
      a6:	1f 92       	push	r1
      a8:	0f 92       	push	r0
      aa:	0f b6       	in	r0, 0x3f	; 63
      ac:	0f 92       	push	r0
      ae:	11 24       	eor	r1, r1
	TCNT0 = 0;
      b0:	16 bc       	out	0x26, r1	; 38
}
      b2:	0f 90       	pop	r0
      b4:	0f be       	out	0x3f, r0	; 63
      b6:	0f 90       	pop	r0
      b8:	1f 90       	pop	r1
      ba:	18 95       	reti

000000bc <__vector_2>:

ISR(INT1_vect)
{
      bc:	1f 92       	push	r1
      be:	0f 92       	push	r0
      c0:	0f b6       	in	r0, 0x3f	; 63
      c2:	0f 92       	push	r0
      c4:	11 24       	eor	r1, r1
      c6:	4f 92       	push	r4
      c8:	5f 92       	push	r5
      ca:	6f 92       	push	r6
      cc:	7f 92       	push	r7
      ce:	8f 92       	push	r8
      d0:	9f 92       	push	r9
      d2:	af 92       	push	r10
      d4:	bf 92       	push	r11
      d6:	cf 92       	push	r12
      d8:	df 92       	push	r13
      da:	ef 92       	push	r14
      dc:	ff 92       	push	r15
      de:	0f 93       	push	r16
      e0:	2f 93       	push	r18
      e2:	3f 93       	push	r19
      e4:	4f 93       	push	r20
      e6:	5f 93       	push	r21
      e8:	6f 93       	push	r22
      ea:	7f 93       	push	r23
      ec:	8f 93       	push	r24
      ee:	9f 93       	push	r25
      f0:	af 93       	push	r26
      f2:	bf 93       	push	r27
      f4:	ef 93       	push	r30
      f6:	ff 93       	push	r31
	auto const cnt = TCNT0;
      f8:	e6 b5       	in	r30, 0x26	; 38
	static uint64_t raw_read = 0;
	raw_read <<= 8 * sizeof(cnt);
	raw_read |= cnt;
      fa:	20 91 2b 01 	lds	r18, 0x012B	; 0x80012b <_ZZ10__vector_2E8raw_read>
      fe:	30 91 2c 01 	lds	r19, 0x012C	; 0x80012c <_ZZ10__vector_2E8raw_read+0x1>
     102:	40 91 2d 01 	lds	r20, 0x012D	; 0x80012d <_ZZ10__vector_2E8raw_read+0x2>
     106:	50 91 2e 01 	lds	r21, 0x012E	; 0x80012e <_ZZ10__vector_2E8raw_read+0x3>
     10a:	60 91 2f 01 	lds	r22, 0x012F	; 0x80012f <_ZZ10__vector_2E8raw_read+0x4>
     10e:	70 91 30 01 	lds	r23, 0x0130	; 0x800130 <_ZZ10__vector_2E8raw_read+0x5>
     112:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <_ZZ10__vector_2E8raw_read+0x6>
     116:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <_ZZ10__vector_2E8raw_read+0x7>
     11a:	08 e0       	ldi	r16, 0x08	; 8
     11c:	0e 94 2c 06 	call	0xc58	; 0xc58 <__ashldi3>
     120:	83 2e       	mov	r8, r19
     122:	94 2e       	mov	r9, r20
     124:	a5 2e       	mov	r10, r21
     126:	b6 2e       	mov	r11, r22
     128:	c7 2e       	mov	r12, r23
     12a:	d8 2e       	mov	r13, r24
     12c:	e9 2e       	mov	r14, r25
     12e:	f2 2e       	mov	r15, r18
     130:	fe 2a       	or	r15, r30
     132:	f0 92 2b 01 	sts	0x012B, r15	; 0x80012b <_ZZ10__vector_2E8raw_read>
     136:	30 93 2c 01 	sts	0x012C, r19	; 0x80012c <_ZZ10__vector_2E8raw_read+0x1>
     13a:	40 93 2d 01 	sts	0x012D, r20	; 0x80012d <_ZZ10__vector_2E8raw_read+0x2>
     13e:	50 93 2e 01 	sts	0x012E, r21	; 0x80012e <_ZZ10__vector_2E8raw_read+0x3>
     142:	60 93 2f 01 	sts	0x012F, r22	; 0x80012f <_ZZ10__vector_2E8raw_read+0x4>
     146:	70 93 30 01 	sts	0x0130, r23	; 0x800130 <_ZZ10__vector_2E8raw_read+0x5>
     14a:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <_ZZ10__vector_2E8raw_read+0x6>
     14e:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <_ZZ10__vector_2E8raw_read+0x7>
	//Serial::sendf("0x%08x\t",raw_read);
	auto const avg_cnt = []{
		float count = 0;
		for(uint8_t i = 0; i < sizeof(raw_read); i++)
		{
			count += (uint8_t)(raw_read >> (i*8));
     152:	6f 2d       	mov	r22, r15
     154:	70 e0       	ldi	r23, 0x00	; 0
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	0e 94 c0 04 	call	0x980	; 0x980 <__floatsisf>
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	a9 01       	movw	r20, r18
     164:	0e 94 aa 03 	call	0x754	; 0x754 <__addsf3>
     168:	2b 01       	movw	r4, r22
     16a:	3c 01       	movw	r6, r24
     16c:	2f 2d       	mov	r18, r15
     16e:	38 2d       	mov	r19, r8
     170:	49 2d       	mov	r20, r9
     172:	5a 2d       	mov	r21, r10
     174:	6b 2d       	mov	r22, r11
     176:	7c 2d       	mov	r23, r12
     178:	8d 2d       	mov	r24, r13
     17a:	9e 2d       	mov	r25, r14
     17c:	0e 94 47 06 	call	0xc8e	; 0xc8e <__lshrdi3>
     180:	62 2f       	mov	r22, r18
     182:	70 e0       	ldi	r23, 0x00	; 0
     184:	80 e0       	ldi	r24, 0x00	; 0
     186:	90 e0       	ldi	r25, 0x00	; 0
     188:	0e 94 c0 04 	call	0x980	; 0x980 <__floatsisf>
     18c:	a3 01       	movw	r20, r6
     18e:	92 01       	movw	r18, r4
     190:	0e 94 aa 03 	call	0x754	; 0x754 <__addsf3>
     194:	2b 01       	movw	r4, r22
     196:	3c 01       	movw	r6, r24
     198:	2f 2d       	mov	r18, r15
     19a:	38 2d       	mov	r19, r8
     19c:	49 2d       	mov	r20, r9
     19e:	5a 2d       	mov	r21, r10
     1a0:	6b 2d       	mov	r22, r11
     1a2:	7c 2d       	mov	r23, r12
     1a4:	8d 2d       	mov	r24, r13
     1a6:	9e 2d       	mov	r25, r14
     1a8:	00 e1       	ldi	r16, 0x10	; 16
     1aa:	0e 94 47 06 	call	0xc8e	; 0xc8e <__lshrdi3>
     1ae:	62 2f       	mov	r22, r18
     1b0:	70 e0       	ldi	r23, 0x00	; 0
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	0e 94 c0 04 	call	0x980	; 0x980 <__floatsisf>
     1ba:	a3 01       	movw	r20, r6
     1bc:	92 01       	movw	r18, r4
     1be:	0e 94 aa 03 	call	0x754	; 0x754 <__addsf3>
     1c2:	2b 01       	movw	r4, r22
     1c4:	3c 01       	movw	r6, r24
     1c6:	2f 2d       	mov	r18, r15
     1c8:	38 2d       	mov	r19, r8
     1ca:	49 2d       	mov	r20, r9
     1cc:	5a 2d       	mov	r21, r10
     1ce:	6b 2d       	mov	r22, r11
     1d0:	7c 2d       	mov	r23, r12
     1d2:	8d 2d       	mov	r24, r13
     1d4:	9e 2d       	mov	r25, r14
     1d6:	08 e1       	ldi	r16, 0x18	; 24
     1d8:	0e 94 47 06 	call	0xc8e	; 0xc8e <__lshrdi3>
     1dc:	62 2f       	mov	r22, r18
     1de:	70 e0       	ldi	r23, 0x00	; 0
     1e0:	80 e0       	ldi	r24, 0x00	; 0
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	0e 94 c0 04 	call	0x980	; 0x980 <__floatsisf>
     1e8:	a3 01       	movw	r20, r6
     1ea:	92 01       	movw	r18, r4
     1ec:	0e 94 aa 03 	call	0x754	; 0x754 <__addsf3>
     1f0:	2b 01       	movw	r4, r22
     1f2:	3c 01       	movw	r6, r24
     1f4:	2f 2d       	mov	r18, r15
     1f6:	38 2d       	mov	r19, r8
     1f8:	49 2d       	mov	r20, r9
     1fa:	5a 2d       	mov	r21, r10
     1fc:	6b 2d       	mov	r22, r11
     1fe:	7c 2d       	mov	r23, r12
     200:	8d 2d       	mov	r24, r13
     202:	9e 2d       	mov	r25, r14
     204:	00 e2       	ldi	r16, 0x20	; 32
     206:	0e 94 47 06 	call	0xc8e	; 0xc8e <__lshrdi3>
     20a:	62 2f       	mov	r22, r18
     20c:	70 e0       	ldi	r23, 0x00	; 0
     20e:	80 e0       	ldi	r24, 0x00	; 0
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	0e 94 c0 04 	call	0x980	; 0x980 <__floatsisf>
     216:	a3 01       	movw	r20, r6
     218:	92 01       	movw	r18, r4
     21a:	0e 94 aa 03 	call	0x754	; 0x754 <__addsf3>
     21e:	2b 01       	movw	r4, r22
     220:	3c 01       	movw	r6, r24
     222:	2f 2d       	mov	r18, r15
     224:	38 2d       	mov	r19, r8
     226:	49 2d       	mov	r20, r9
     228:	5a 2d       	mov	r21, r10
     22a:	6b 2d       	mov	r22, r11
     22c:	7c 2d       	mov	r23, r12
     22e:	8d 2d       	mov	r24, r13
     230:	9e 2d       	mov	r25, r14
     232:	08 e2       	ldi	r16, 0x28	; 40
     234:	0e 94 47 06 	call	0xc8e	; 0xc8e <__lshrdi3>
     238:	62 2f       	mov	r22, r18
     23a:	70 e0       	ldi	r23, 0x00	; 0
     23c:	80 e0       	ldi	r24, 0x00	; 0
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	0e 94 c0 04 	call	0x980	; 0x980 <__floatsisf>
     244:	a3 01       	movw	r20, r6
     246:	92 01       	movw	r18, r4
     248:	0e 94 aa 03 	call	0x754	; 0x754 <__addsf3>
     24c:	2b 01       	movw	r4, r22
     24e:	3c 01       	movw	r6, r24
     250:	2f 2d       	mov	r18, r15
     252:	38 2d       	mov	r19, r8
     254:	49 2d       	mov	r20, r9
     256:	5a 2d       	mov	r21, r10
     258:	6b 2d       	mov	r22, r11
     25a:	7c 2d       	mov	r23, r12
     25c:	8d 2d       	mov	r24, r13
     25e:	9e 2d       	mov	r25, r14
     260:	00 e3       	ldi	r16, 0x30	; 48
     262:	0e 94 47 06 	call	0xc8e	; 0xc8e <__lshrdi3>
     266:	62 2f       	mov	r22, r18
     268:	70 e0       	ldi	r23, 0x00	; 0
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	0e 94 c0 04 	call	0x980	; 0x980 <__floatsisf>
     272:	a3 01       	movw	r20, r6
     274:	92 01       	movw	r18, r4
     276:	0e 94 aa 03 	call	0x754	; 0x754 <__addsf3>
     27a:	2b 01       	movw	r4, r22
     27c:	3c 01       	movw	r6, r24
			//Serial::sendf("%i\t",(uint8_t)(raw_read >> (i*8)));
		}
		return count / sizeof(raw_read);
     27e:	2f 2d       	mov	r18, r15
     280:	38 2d       	mov	r19, r8
     282:	49 2d       	mov	r20, r9
     284:	5a 2d       	mov	r21, r10
     286:	6b 2d       	mov	r22, r11
     288:	7c 2d       	mov	r23, r12
     28a:	8d 2d       	mov	r24, r13
     28c:	9e 2d       	mov	r25, r14
     28e:	08 e3       	ldi	r16, 0x38	; 56
     290:	0e 94 47 06 	call	0xc8e	; 0xc8e <__lshrdi3>
     294:	b9 01       	movw	r22, r18
     296:	33 0f       	add	r19, r19
     298:	88 0b       	sbc	r24, r24
     29a:	99 0b       	sbc	r25, r25
     29c:	0e 94 c0 04 	call	0x980	; 0x980 <__floatsisf>
     2a0:	a3 01       	movw	r20, r6
     2a2:	92 01       	movw	r18, r4
     2a4:	0e 94 aa 03 	call	0x754	; 0x754 <__addsf3>
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	40 e0       	ldi	r20, 0x00	; 0
     2ae:	5e e3       	ldi	r21, 0x3E	; 62
     2b0:	0e 94 4c 05 	call	0xa98	; 0xa98 <__mulsf3>
     2b4:	6b 01       	movw	r12, r22
     2b6:	7c 01       	movw	r14, r24
	}();
	auto const dist = avg_cnt *343.0f / (2000000.0f / 256) * 1/0.0254f; 
	digit = dist;
     2b8:	20 e0       	ldi	r18, 0x00	; 0
     2ba:	30 e8       	ldi	r19, 0x80	; 128
     2bc:	4b ea       	ldi	r20, 0xAB	; 171
     2be:	53 e4       	ldi	r21, 0x43	; 67
     2c0:	0e 94 4c 05 	call	0xa98	; 0xa98 <__mulsf3>
     2c4:	20 e0       	ldi	r18, 0x00	; 0
     2c6:	34 e2       	ldi	r19, 0x24	; 36
     2c8:	44 ef       	ldi	r20, 0xF4	; 244
     2ca:	55 e4       	ldi	r21, 0x45	; 69
     2cc:	0e 94 16 04 	call	0x82c	; 0x82c <__divsf3>
     2d0:	29 ea       	ldi	r18, 0xA9	; 169
     2d2:	33 e1       	ldi	r19, 0x13	; 19
     2d4:	40 ed       	ldi	r20, 0xD0	; 208
     2d6:	5c e3       	ldi	r21, 0x3C	; 60
     2d8:	0e 94 16 04 	call	0x82c	; 0x82c <__divsf3>
     2dc:	0e 94 88 04 	call	0x910	; 0x910 <__fixsfsi>
     2e0:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <digit+0x1>
     2e4:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <digit>
	OCR0B = 2*avg_cnt;
     2e8:	a7 01       	movw	r20, r14
     2ea:	96 01       	movw	r18, r12
     2ec:	c7 01       	movw	r24, r14
     2ee:	b6 01       	movw	r22, r12
     2f0:	0e 94 aa 03 	call	0x754	; 0x754 <__addsf3>
     2f4:	0e 94 8f 04 	call	0x91e	; 0x91e <__fixunssfsi>
     2f8:	68 bd       	out	0x28, r22	; 40
	//Serial::sendf("dist: %i\n", (uint32_t)(avg_cnt));
}
     2fa:	ff 91       	pop	r31
     2fc:	ef 91       	pop	r30
     2fe:	bf 91       	pop	r27
     300:	af 91       	pop	r26
     302:	9f 91       	pop	r25
     304:	8f 91       	pop	r24
     306:	7f 91       	pop	r23
     308:	6f 91       	pop	r22
     30a:	5f 91       	pop	r21
     30c:	4f 91       	pop	r20
     30e:	3f 91       	pop	r19
     310:	2f 91       	pop	r18
     312:	0f 91       	pop	r16
     314:	ff 90       	pop	r15
     316:	ef 90       	pop	r14
     318:	df 90       	pop	r13
     31a:	cf 90       	pop	r12
     31c:	bf 90       	pop	r11
     31e:	af 90       	pop	r10
     320:	9f 90       	pop	r9
     322:	8f 90       	pop	r8
     324:	7f 90       	pop	r7
     326:	6f 90       	pop	r6
     328:	5f 90       	pop	r5
     32a:	4f 90       	pop	r4
     32c:	0f 90       	pop	r0
     32e:	0f be       	out	0x3f, r0	; 63
     330:	0f 90       	pop	r0
     332:	1f 90       	pop	r1
     334:	18 95       	reti

00000336 <__vector_14>:
/**********************************************************************************************/
/*                                     Timer 0 Interrupts                                     */
/**********************************************************************************************/

ISR(TIMER0_COMPA_vect)
{
     336:	1f 92       	push	r1
     338:	0f 92       	push	r0
     33a:	0f b6       	in	r0, 0x3f	; 63
     33c:	0f 92       	push	r0
     33e:	11 24       	eor	r1, r1
     340:	8f 93       	push	r24
     342:	9f 93       	push	r25
     344:	cf 93       	push	r28
     346:	df 93       	push	r29
     348:	00 d0       	rcall	.+0      	; 0x34a <__vector_14+0x14>
     34a:	cd b7       	in	r28, 0x3d	; 61
     34c:	de b7       	in	r29, 0x3e	; 62
	PORTD |=  (1 << PORTD4);
     34e:	5c 9a       	sbi	0x0b, 4	; 11
	for(volatile int i = 0; i < 0; i++); // wait 13us (measured)
     350:	1a 82       	std	Y+2, r1	; 0x02
     352:	19 82       	std	Y+1, r1	; 0x01
     354:	89 81       	ldd	r24, Y+1	; 0x01
     356:	9a 81       	ldd	r25, Y+2	; 0x02
     358:	97 ff       	sbrs	r25, 7
     35a:	09 c0       	rjmp	.+18     	; 0x36e <__vector_14+0x38>
     35c:	89 81       	ldd	r24, Y+1	; 0x01
     35e:	9a 81       	ldd	r25, Y+2	; 0x02
     360:	01 96       	adiw	r24, 0x01	; 1
     362:	9a 83       	std	Y+2, r25	; 0x02
     364:	89 83       	std	Y+1, r24	; 0x01
     366:	89 81       	ldd	r24, Y+1	; 0x01
     368:	9a 81       	ldd	r25, Y+2	; 0x02
     36a:	97 fd       	sbrc	r25, 7
     36c:	f7 cf       	rjmp	.-18     	; 0x35c <__vector_14+0x26>
	PORTD &= ~(1 << PORTD4);
     36e:	5c 98       	cbi	0x0b, 4	; 11
	
	PORTD |= (1 << PORTD7);
     370:	5f 9a       	sbi	0x0b, 7	; 11
	
}
     372:	0f 90       	pop	r0
     374:	0f 90       	pop	r0
     376:	df 91       	pop	r29
     378:	cf 91       	pop	r28
     37a:	9f 91       	pop	r25
     37c:	8f 91       	pop	r24
     37e:	0f 90       	pop	r0
     380:	0f be       	out	0x3f, r0	; 63
     382:	0f 90       	pop	r0
     384:	1f 90       	pop	r1
     386:	18 95       	reti

00000388 <__vector_15>:

ISR(TIMER0_COMPB_vect)
{
     388:	1f 92       	push	r1
     38a:	0f 92       	push	r0
     38c:	0f b6       	in	r0, 0x3f	; 63
     38e:	0f 92       	push	r0
     390:	11 24       	eor	r1, r1
	PORTD &= ~(1 << PORTD7);
     392:	5f 98       	cbi	0x0b, 7	; 11
}
     394:	0f 90       	pop	r0
     396:	0f be       	out	0x3f, r0	; 63
     398:	0f 90       	pop	r0
     39a:	1f 90       	pop	r1
     39c:	18 95       	reti

0000039e <__vector_7>:
/*                                     Timer 2 Interrupts                                     */
/**********************************************************************************************/


ISR(TIMER2_COMPA_vect)
{
     39e:	1f 92       	push	r1
     3a0:	0f 92       	push	r0
     3a2:	0f b6       	in	r0, 0x3f	; 63
     3a4:	0f 92       	push	r0
     3a6:	11 24       	eor	r1, r1
     3a8:	2f 93       	push	r18
     3aa:	3f 93       	push	r19
     3ac:	4f 93       	push	r20
     3ae:	5f 93       	push	r21
     3b0:	6f 93       	push	r22
     3b2:	7f 93       	push	r23
     3b4:	8f 93       	push	r24
     3b6:	9f 93       	push	r25
     3b8:	af 93       	push	r26
     3ba:	bf 93       	push	r27
     3bc:	ef 93       	push	r30
     3be:	ff 93       	push	r31
	//Serial::send("TIMER2_OVF_vect\n");
	
	//PORTD |=  (1 << PORTD4);
	//PORTD &= ~(1 << PORTD4);
	static volatile uint8_t dig = 0;
	dig++;
     3c0:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
     3c4:	8f 5f       	subi	r24, 0xFF	; 255
     3c6:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
	dig %= 4; // toggle digit
     3ca:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
     3ce:	83 70       	andi	r24, 0x03	; 3
     3d0:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
	disp(_off);
     3d4:	81 e1       	ldi	r24, 0x11	; 17
     3d6:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <_ZN4seg74dispENS_11_7_seg_valsE>
	PORTC = 0;
     3da:	18 b8       	out	0x08, r1	; 8
	int const digit_ = digit;
     3dc:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <digit>
     3e0:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <digit+0x1>
	switch(dig)
     3e4:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <__data_end>
     3e8:	91 30       	cpi	r25, 0x01	; 1
     3ea:	09 f4       	brne	.+2      	; 0x3ee <__vector_7+0x50>
     3ec:	4d c0       	rjmp	.+154    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     3ee:	c0 f1       	brcs	.+112    	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
     3f0:	92 30       	cpi	r25, 0x02	; 2
     3f2:	31 f1       	breq	.+76     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     3f4:	93 30       	cpi	r25, 0x03	; 3
     3f6:	49 f4       	brne	.+18     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
			else if((i = digit_/10))
				disp((_7_seg_vals)absval(i%10));
			break;
		}
		case 3:
			disp((_7_seg_vals)absval(digit_%10));
     3f8:	c9 01       	movw	r24, r18
     3fa:	6a e0       	ldi	r22, 0x0A	; 10
     3fc:	70 e0       	ldi	r23, 0x00	; 0
     3fe:	0e 94 b9 05 	call	0xb72	; 0xb72 <__divmodhi4>

#include "avr/io.h"

inline uint8_t absval(int8_t val)
{
	if(val < 0) val = -val;
     402:	87 fd       	sbrc	r24, 7
     404:	56 c0       	rjmp	.+172    	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
     406:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <_ZN4seg74dispENS_11_7_seg_valsE>
			break;
	}

	PORTC = dig_enable[dig];
     40a:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <__data_end>
     40e:	f0 e0       	ldi	r31, 0x00	; 0
     410:	e8 5f       	subi	r30, 0xF8	; 248
     412:	fe 4f       	sbci	r31, 0xFE	; 254
     414:	80 81       	ld	r24, Z
     416:	88 b9       	out	0x08, r24	; 8
	TCNT2 = 100;
     418:	84 e6       	ldi	r24, 0x64	; 100
     41a:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__DATA_REGION_ORIGIN__+0x52>
	//Serial::send("/TIMER2_OVF_vect\n");
}
     41e:	ff 91       	pop	r31
     420:	ef 91       	pop	r30
     422:	bf 91       	pop	r27
     424:	af 91       	pop	r26
     426:	9f 91       	pop	r25
     428:	8f 91       	pop	r24
     42a:	7f 91       	pop	r23
     42c:	6f 91       	pop	r22
     42e:	5f 91       	pop	r21
     430:	4f 91       	pop	r20
     432:	3f 91       	pop	r19
     434:	2f 91       	pop	r18
     436:	0f 90       	pop	r0
     438:	0f be       	out	0x3f, r0	; 63
     43a:	0f 90       	pop	r0
     43c:	1f 90       	pop	r1
     43e:	18 95       	reti
				disp((_7_seg_vals)absval(i%10));
			break;
		}
		case 2: {
			int i;
			if(digit_ < 0 && !(digit_ < -9))
     440:	c9 01       	movw	r24, r18
     442:	09 96       	adiw	r24, 0x09	; 9
     444:	09 97       	sbiw	r24, 0x09	; 9
     446:	88 f1       	brcs	.+98     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
				disp(_dash); // show negative sign
			else if((i = digit_/10))
     448:	ea e0       	ldi	r30, 0x0A	; 10
     44a:	f0 e0       	ldi	r31, 0x00	; 0
     44c:	c9 01       	movw	r24, r18
     44e:	bf 01       	movw	r22, r30
     450:	0e 94 b9 05 	call	0xb72	; 0xb72 <__divmodhi4>
     454:	61 15       	cp	r22, r1
     456:	71 05       	cpc	r23, r1
     458:	c1 f2       	breq	.-80     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
				disp((_7_seg_vals)absval(i%10));
     45a:	cb 01       	movw	r24, r22
     45c:	bf 01       	movw	r22, r30
     45e:	cf cf       	rjmp	.-98     	; 0x3fe <__vector_7+0x60>
	int const digit_ = digit;
	switch(dig)
	{
		case 0: {
			int i;
			if(digit_ < -99)
     460:	2d 39       	cpi	r18, 0x9D	; 157
     462:	8f ef       	ldi	r24, 0xFF	; 255
     464:	38 07       	cpc	r19, r24
     466:	0c f1       	brlt	.+66     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
				disp(_dash); // show negative sign
			else if((i = digit_/1000))
     468:	c9 01       	movw	r24, r18
     46a:	68 ee       	ldi	r22, 0xE8	; 232
     46c:	73 e0       	ldi	r23, 0x03	; 3
     46e:	0e 94 b9 05 	call	0xb72	; 0xb72 <__divmodhi4>
     472:	61 15       	cp	r22, r1
     474:	71 05       	cpc	r23, r1
     476:	49 f2       	breq	.-110    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
				disp((_7_seg_vals)absval(i%10));
     478:	cb 01       	movw	r24, r22
     47a:	6a e0       	ldi	r22, 0x0A	; 10
     47c:	70 e0       	ldi	r23, 0x00	; 0
     47e:	0e 94 b9 05 	call	0xb72	; 0xb72 <__divmodhi4>
     482:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <_ZN4seg74dispENS_11_7_seg_valsE>
     486:	c1 cf       	rjmp	.-126    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
			//PORTB &= ~dp;
			break;
		}
		case 1: {
			int i;
			if(digit_ < -9 && !(digit_ < -99))
     488:	c9 01       	movw	r24, r18
     48a:	8d 59       	subi	r24, 0x9D	; 157
     48c:	9f 4f       	sbci	r25, 0xFF	; 255
     48e:	8a 35       	cpi	r24, 0x5A	; 90
     490:	91 05       	cpc	r25, r1
     492:	58 f0       	brcs	.+22     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
				disp(_dash); // show negative sign
			else if((i = digit_/100))
     494:	c9 01       	movw	r24, r18
     496:	64 e6       	ldi	r22, 0x64	; 100
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	0e 94 b9 05 	call	0xb72	; 0xb72 <__divmodhi4>
     49e:	61 15       	cp	r22, r1
     4a0:	71 05       	cpc	r23, r1
     4a2:	09 f4       	brne	.+2      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
     4a4:	b2 cf       	rjmp	.-156    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
				disp((_7_seg_vals)absval(i%10));
     4a6:	cb 01       	movw	r24, r22
     4a8:	a8 cf       	rjmp	.-176    	; 0x3fa <__vector_7+0x5c>
	switch(dig)
	{
		case 0: {
			int i;
			if(digit_ < -99)
				disp(_dash); // show negative sign
     4aa:	80 e1       	ldi	r24, 0x10	; 16
     4ac:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <_ZN4seg74dispENS_11_7_seg_valsE>
     4b0:	ac cf       	rjmp	.-168    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     4b2:	81 95       	neg	r24
     4b4:	a8 cf       	rjmp	.-176    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>

000004b6 <__vector_18>:
/************************************************************************/
/*                                USART                                 */
/************************************************************************/

ISR(USART_RX_vect)
{
     4b6:	1f 92       	push	r1
     4b8:	0f 92       	push	r0
     4ba:	0f b6       	in	r0, 0x3f	; 63
     4bc:	0f 92       	push	r0
     4be:	11 24       	eor	r1, r1
     4c0:	2f 93       	push	r18
     4c2:	3f 93       	push	r19
     4c4:	4f 93       	push	r20
     4c6:	5f 93       	push	r21
     4c8:	6f 93       	push	r22
     4ca:	7f 93       	push	r23
     4cc:	8f 93       	push	r24
     4ce:	9f 93       	push	r25
     4d0:	af 93       	push	r26
     4d2:	bf 93       	push	r27
     4d4:	ef 93       	push	r30
     4d6:	ff 93       	push	r31
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	1f 92       	push	r1
     4de:	cd b7       	in	r28, 0x3d	; 61
     4e0:	de b7       	in	r29, 0x3e	; 62
	const char value = Serial::read();
     4e2:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <_ZN6Serial4readEv>
     4e6:	89 83       	std	Y+1, r24	; 0x01
	digit = atoi(&value);
     4e8:	ce 01       	movw	r24, r28
     4ea:	01 96       	adiw	r24, 0x01	; 1
     4ec:	0e 94 a4 07 	call	0xf48	; 0xf48 <atoi>
     4f0:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <digit+0x1>
     4f4:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <digit>
	Serial::send(digit);
     4f8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <digit>
     4fc:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <digit+0x1>
     500:	0e 94 54 03 	call	0x6a8	; 0x6a8 <_ZN6Serial4sendEh>
}
     504:	0f 90       	pop	r0
     506:	df 91       	pop	r29
     508:	cf 91       	pop	r28
     50a:	ff 91       	pop	r31
     50c:	ef 91       	pop	r30
     50e:	bf 91       	pop	r27
     510:	af 91       	pop	r26
     512:	9f 91       	pop	r25
     514:	8f 91       	pop	r24
     516:	7f 91       	pop	r23
     518:	6f 91       	pop	r22
     51a:	5f 91       	pop	r21
     51c:	4f 91       	pop	r20
     51e:	3f 91       	pop	r19
     520:	2f 91       	pop	r18
     522:	0f 90       	pop	r0
     524:	0f be       	out	0x3f, r0	; 63
     526:	0f 90       	pop	r0
     528:	1f 90       	pop	r1
     52a:	18 95       	reti

0000052c <main>:

extern volatile float digit;

int main(void)
{
	TCCR1B = 1;
     52c:	81 e0       	ldi	r24, 0x01	; 1
     52e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
    DDRB = 0xff;
     532:	8f ef       	ldi	r24, 0xFF	; 255
     534:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xff;
     536:	87 b9       	out	0x07, r24	; 7
	DDRD =  (1 << PORTD4) | 
			(1 << PORTD7);
     538:	80 e9       	ldi	r24, 0x90	; 144
     53a:	8a b9       	out	0x0a, r24	; 10
				 prescaler |
				 (TCCR2B & 0xB0);
	}

	extern inline void setMode(Mode mode) {
		TCCR2A |=    mode & ((1 << WGM21) | (1 << WGM20));
     53c:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
     540:	82 60       	ori	r24, 0x02	; 2
     542:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
		TCCR2A &= ~(~mode & ((1 << WGM21) | (1 << WGM20)));
     546:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
     54a:	8e 7f       	andi	r24, 0xFE	; 254
     54c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
			
		TCCR2B |=    mode & (1 << WGM22);
     550:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
     554:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
		TCCR2B &= ~(~mode & (1 << WGM22));
     558:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
     55c:	87 7f       	andi	r24, 0xF7	; 247
     55e:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
	}
	
	extern inline void setPrescaler(Prescaler prescaler) {
		TCCR2B |=    prescaler & ((1 << CS22) | (1 << CS21) | (1 << CS20));
     562:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
     566:	84 60       	ori	r24, 0x04	; 4
     568:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
		TCCR2B &= ~(~prescaler & ((1 << CS22) | (1 << CS21) | (1 << CS20)));
     56c:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
     570:	8c 7f       	andi	r24, 0xFC	; 252
     572:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
    {	// Setup Timer 2
		using namespace Timer2;
		Timer2::setMode(CTC);
	    Timer2::setPrescaler(_64);
		
	    TIMSK2 = (1 <<OCIE2A);
     576:	82 e0       	ldi	r24, 0x02	; 2
     578:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__DATA_REGION_ORIGIN__+0x10>
		
		OCR2A = 203;
     57c:	8b ec       	ldi	r24, 0xCB	; 203
     57e:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
	
	extern inline void setup(Mode mode, 
							 Prescaler prescaler) 
	{	
		TCCR0A = (mode & ((1 << WGM01) | (1 << WGM00))) |
				 (TCCR0A & 0xf0);
     582:	84 b5       	in	r24, 0x24	; 36
     584:	80 7f       	andi	r24, 0xF0	; 240
     586:	82 60       	ori	r24, 0x02	; 2
     588:	84 bd       	out	0x24, r24	; 36

		TCCR0B = (mode & (1 << WGM02)) |
				 (prescaler &  ((1 << CS02) | (1 << CS01) | (1 << CS00))) |
				 (TCCR0B & 0xC0);
     58a:	85 b5       	in	r24, 0x25	; 37
     58c:	80 7c       	andi	r24, 0xC0	; 192
     58e:	84 60       	ori	r24, 0x04	; 4
     590:	85 bd       	out	0x25, r24	; 37

	{	// Setup Timer 0
		using namespace Timer0;
		Timer0::setup(CTC,_256);
		
		OCR0A = 194;
     592:	82 ec       	ldi	r24, 0xC2	; 194
     594:	87 bd       	out	0x27, r24	; 39
	
		TIMSK0 = (1 << OCIE0A) | (1 << OCIE0B);
     596:	86 e0       	ldi	r24, 0x06	; 6
     598:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	}

auto const time = TCNT1;
     59c:	c0 91 84 00 	lds	r28, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     5a0:	d0 91 85 00 	lds	r29, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
Serial::begin(4800,Serial::async);
     5a4:	61 e0       	ldi	r22, 0x01	; 1
     5a6:	80 ec       	ldi	r24, 0xC0	; 192
     5a8:	92 e1       	ldi	r25, 0x12	; 18
     5aa:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <_ZN6Serial5beginEjNS_4ModeE>
Serial::sendf("cycles: %i\n", time);
     5ae:	df 93       	push	r29
     5b0:	cf 93       	push	r28
     5b2:	8c e0       	ldi	r24, 0x0C	; 12
     5b4:	91 e0       	ldi	r25, 0x01	; 1
     5b6:	9f 93       	push	r25
     5b8:	8f 93       	push	r24
     5ba:	0e 94 62 03 	call	0x6c4	; 0x6c4 <_ZN6Serial5sendfEPKcz>

	EICRA = (1 << ISC01) | (1 << ISC11) | (1 << ISC00);
     5be:	8b e0       	ldi	r24, 0x0B	; 11
     5c0:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
	EIMSK |= (1 << INT1) | (1 << INT0);
     5c4:	8d b3       	in	r24, 0x1d	; 29
     5c6:	83 60       	ori	r24, 0x03	; 3
     5c8:	8d bb       	out	0x1d, r24	; 29
	
	sei();
     5ca:	78 94       	sei
     5cc:	0f 90       	pop	r0
     5ce:	0f 90       	pop	r0
     5d0:	0f 90       	pop	r0
     5d2:	0f 90       	pop	r0
     5d4:	ff cf       	rjmp	.-2      	; 0x5d4 <main+0xa8>

000005d6 <_ZN4seg74dispENS_11_7_seg_valsE>:
#include <avr/io.h>
using namespace seg7;

void seg7::disp(_7_seg_vals val)
{
	PORTB = ~num_map[val];
     5d6:	e8 2f       	mov	r30, r24
     5d8:	f0 e0       	ldi	r31, 0x00	; 0
     5da:	e8 5e       	subi	r30, 0xE8	; 232
     5dc:	fe 4f       	sbci	r31, 0xFE	; 254
     5de:	80 81       	ld	r24, Z
     5e0:	80 95       	com	r24
     5e2:	85 b9       	out	0x05, r24	; 5
     5e4:	08 95       	ret

000005e6 <_ZN6Serial5beginEjNS_4ModeE>:
	return UDR0;
}

void Serial::send(char const* data)
{
	while(*data)
     5e6:	af 92       	push	r10
     5e8:	bf 92       	push	r11
     5ea:	cf 92       	push	r12
     5ec:	df 92       	push	r13
     5ee:	ef 92       	push	r14
     5f0:	ff 92       	push	r15
     5f2:	0f 93       	push	r16
     5f4:	1f 93       	push	r17
     5f6:	cf 93       	push	r28
     5f8:	df 93       	push	r29
     5fa:	61 30       	cpi	r22, 0x01	; 1
     5fc:	09 f4       	brne	.+2      	; 0x600 <_ZN6Serial5beginEjNS_4ModeE+0x1a>
     5fe:	49 c0       	rjmp	.+146    	; 0x692 <_ZN6Serial5beginEjNS_4ModeE+0xac>
     600:	e8 f1       	brcs	.+122    	; 0x67c <_ZN6Serial5beginEjNS_4ModeE+0x96>
     602:	62 30       	cpi	r22, 0x02	; 2
     604:	a9 f4       	brne	.+42     	; 0x630 <_ZN6Serial5beginEjNS_4ModeE+0x4a>
     606:	5c 01       	movw	r10, r24
     608:	c1 2c       	mov	r12, r1
     60a:	d1 2c       	mov	r13, r1
     60c:	e1 2c       	mov	r14, r1
     60e:	f1 2c       	mov	r15, r1
     610:	00 e0       	ldi	r16, 0x00	; 0
     612:	10 e0       	ldi	r17, 0x00	; 0
     614:	28 e4       	ldi	r18, 0x48	; 72
     616:	38 ee       	ldi	r19, 0xE8	; 232
     618:	41 e0       	ldi	r20, 0x01	; 1
     61a:	50 e0       	ldi	r21, 0x00	; 0
     61c:	60 e0       	ldi	r22, 0x00	; 0
     61e:	70 e0       	ldi	r23, 0x00	; 0
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__udivdi3>
     628:	af ef       	ldi	r26, 0xFF	; 255
     62a:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__adddi3_s8>
     62e:	02 c0       	rjmp	.+4      	; 0x634 <_ZN6Serial5beginEjNS_4ModeE+0x4e>
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     638:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     63c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     640:	8d 7f       	andi	r24, 0xFD	; 253
     642:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     646:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     64a:	80 68       	ori	r24, 0x80	; 128
     64c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     650:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     654:	88 61       	ori	r24, 0x18	; 24
     656:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     65a:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     65e:	86 60       	ori	r24, 0x06	; 6
     660:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     664:	78 94       	sei
     666:	df 91       	pop	r29
     668:	cf 91       	pop	r28
     66a:	1f 91       	pop	r17
     66c:	0f 91       	pop	r16
     66e:	ff 90       	pop	r15
     670:	ef 90       	pop	r14
     672:	df 90       	pop	r13
     674:	cf 90       	pop	r12
     676:	bf 90       	pop	r11
     678:	af 90       	pop	r10
     67a:	08 95       	ret
     67c:	5c 01       	movw	r10, r24
     67e:	c1 2c       	mov	r12, r1
     680:	d1 2c       	mov	r13, r1
     682:	e1 2c       	mov	r14, r1
     684:	f1 2c       	mov	r15, r1
     686:	00 e0       	ldi	r16, 0x00	; 0
     688:	10 e0       	ldi	r17, 0x00	; 0
     68a:	20 e2       	ldi	r18, 0x20	; 32
     68c:	31 ea       	ldi	r19, 0xA1	; 161
     68e:	47 e0       	ldi	r20, 0x07	; 7
     690:	c4 cf       	rjmp	.-120    	; 0x61a <_ZN6Serial5beginEjNS_4ModeE+0x34>
     692:	5c 01       	movw	r10, r24
     694:	c1 2c       	mov	r12, r1
     696:	d1 2c       	mov	r13, r1
     698:	e1 2c       	mov	r14, r1
     69a:	f1 2c       	mov	r15, r1
     69c:	00 e0       	ldi	r16, 0x00	; 0
     69e:	10 e0       	ldi	r17, 0x00	; 0
     6a0:	24 e2       	ldi	r18, 0x24	; 36
     6a2:	34 ef       	ldi	r19, 0xF4	; 244
     6a4:	40 e0       	ldi	r20, 0x00	; 0
     6a6:	b9 cf       	rjmp	.-142    	; 0x61a <_ZN6Serial5beginEjNS_4ModeE+0x34>

000006a8 <_ZN6Serial4sendEh>:
     6a8:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     6ac:	95 ff       	sbrs	r25, 5
     6ae:	fc cf       	rjmp	.-8      	; 0x6a8 <_ZN6Serial4sendEh>
     6b0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     6b4:	08 95       	ret

000006b6 <_ZN6Serial4readEv>:
     6b6:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     6ba:	85 ff       	sbrs	r24, 5
     6bc:	fc cf       	rjmp	.-8      	; 0x6b6 <_ZN6Serial4readEv>
     6be:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     6c2:	08 95       	ret

000006c4 <_ZN6Serial5sendfEPKcz>:

/** 
 * Note: if the output string is greater than 50 this function calls sprintf twice
 */
void Serial::sendf(char const* format, ...)	// using va_list to minimize program size
{
     6c4:	af 92       	push	r10
     6c6:	bf 92       	push	r11
     6c8:	cf 92       	push	r12
     6ca:	df 92       	push	r13
     6cc:	ef 92       	push	r14
     6ce:	ff 92       	push	r15
     6d0:	0f 93       	push	r16
     6d2:	1f 93       	push	r17
     6d4:	cf 93       	push	r28
     6d6:	df 93       	push	r29
     6d8:	cd b7       	in	r28, 0x3d	; 61
     6da:	de b7       	in	r29, 0x3e	; 62
     6dc:	ce 01       	movw	r24, r28
     6de:	0d 96       	adiw	r24, 0x0d	; 13
     6e0:	fc 01       	movw	r30, r24
     6e2:	c1 90       	ld	r12, Z+
     6e4:	d1 90       	ld	r13, Z+
     6e6:	7f 01       	movw	r14, r30
	int size;
	va_list vl;
	va_start(vl,format);
	char *str = (char*)malloc(30);
     6e8:	8e e1       	ldi	r24, 0x1E	; 30
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	0e 94 83 06 	call	0xd06	; 0xd06 <malloc>
     6f0:	8c 01       	movw	r16, r24
	if(!((size = vsprintf(str, format, vl)) < 30))
     6f2:	a7 01       	movw	r20, r14
     6f4:	b6 01       	movw	r22, r12
     6f6:	0e 94 ca 07 	call	0xf94	; 0xf94 <vsprintf>
     6fa:	5c 01       	movw	r10, r24
     6fc:	4e 97       	sbiw	r24, 0x1e	; 30
     6fe:	ec f4       	brge	.+58     	; 0x73a <_ZN6Serial5sendfEPKcz+0x76>
	return UDR0;
}

void Serial::send(char const* data)
{
	while(*data)
     700:	f8 01       	movw	r30, r16
     702:	90 81       	ld	r25, Z
     704:	99 23       	and	r25, r25
     706:	59 f0       	breq	.+22     	; 0x71e <_ZN6Serial5sendfEPKcz+0x5a>
     708:	f8 01       	movw	r30, r16
     70a:	31 96       	adiw	r30, 0x01	; 1
	sei();
}

uint8_t Serial::send(uint8_t const data)
{
	while( !( UCSR0A & (1 << UDRE0) ) )
     70c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     710:	85 ff       	sbrs	r24, 5
     712:	fc cf       	rjmp	.-8      	; 0x70c <_ZN6Serial5sendfEPKcz+0x48>
		;
	UDR0 = data;
     714:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return UDR0;
}

void Serial::send(char const* data)
{
	while(*data)
     718:	91 91       	ld	r25, Z+
     71a:	91 11       	cpse	r25, r1
     71c:	f7 cf       	rjmp	.-18     	; 0x70c <_ZN6Serial5sendfEPKcz+0x48>
		str = (char*)malloc(size);
		vsprintf(str, format, vl);
	}
	
	send(str);
	free(str);
     71e:	c8 01       	movw	r24, r16
     720:	0e 94 1b 07 	call	0xe36	; 0xe36 <free>
     724:	df 91       	pop	r29
     726:	cf 91       	pop	r28
     728:	1f 91       	pop	r17
     72a:	0f 91       	pop	r16
     72c:	ff 90       	pop	r15
     72e:	ef 90       	pop	r14
     730:	df 90       	pop	r13
     732:	cf 90       	pop	r12
     734:	bf 90       	pop	r11
     736:	af 90       	pop	r10
     738:	08 95       	ret
	va_list vl;
	va_start(vl,format);
	char *str = (char*)malloc(30);
	if(!((size = vsprintf(str, format, vl)) < 30))
	{
		free(str);
     73a:	c8 01       	movw	r24, r16
     73c:	0e 94 1b 07 	call	0xe36	; 0xe36 <free>
		str = (char*)malloc(size);
     740:	c5 01       	movw	r24, r10
     742:	0e 94 83 06 	call	0xd06	; 0xd06 <malloc>
     746:	8c 01       	movw	r16, r24
		vsprintf(str, format, vl);
     748:	a7 01       	movw	r20, r14
     74a:	b6 01       	movw	r22, r12
     74c:	0e 94 ca 07 	call	0xf94	; 0xf94 <vsprintf>
     750:	d7 cf       	rjmp	.-82     	; 0x700 <_ZN6Serial5sendfEPKcz+0x3c>

00000752 <__subsf3>:
     752:	50 58       	subi	r21, 0x80	; 128

00000754 <__addsf3>:
     754:	bb 27       	eor	r27, r27
     756:	aa 27       	eor	r26, r26
     758:	0e 94 c1 03 	call	0x782	; 0x782 <__addsf3x>
     75c:	0c 94 12 05 	jmp	0xa24	; 0xa24 <__fp_round>
     760:	0e 94 04 05 	call	0xa08	; 0xa08 <__fp_pscA>
     764:	38 f0       	brcs	.+14     	; 0x774 <__addsf3+0x20>
     766:	0e 94 0b 05 	call	0xa16	; 0xa16 <__fp_pscB>
     76a:	20 f0       	brcs	.+8      	; 0x774 <__addsf3+0x20>
     76c:	39 f4       	brne	.+14     	; 0x77c <__addsf3+0x28>
     76e:	9f 3f       	cpi	r25, 0xFF	; 255
     770:	19 f4       	brne	.+6      	; 0x778 <__addsf3+0x24>
     772:	26 f4       	brtc	.+8      	; 0x77c <__addsf3+0x28>
     774:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__fp_nan>
     778:	0e f4       	brtc	.+2      	; 0x77c <__addsf3+0x28>
     77a:	e0 95       	com	r30
     77c:	e7 fb       	bst	r30, 7
     77e:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <__fp_inf>

00000782 <__addsf3x>:
     782:	e9 2f       	mov	r30, r25
     784:	0e 94 23 05 	call	0xa46	; 0xa46 <__fp_split3>
     788:	58 f3       	brcs	.-42     	; 0x760 <__addsf3+0xc>
     78a:	ba 17       	cp	r27, r26
     78c:	62 07       	cpc	r22, r18
     78e:	73 07       	cpc	r23, r19
     790:	84 07       	cpc	r24, r20
     792:	95 07       	cpc	r25, r21
     794:	20 f0       	brcs	.+8      	; 0x79e <__addsf3x+0x1c>
     796:	79 f4       	brne	.+30     	; 0x7b6 <__addsf3x+0x34>
     798:	a6 f5       	brtc	.+104    	; 0x802 <__addsf3x+0x80>
     79a:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <__fp_zero>
     79e:	0e f4       	brtc	.+2      	; 0x7a2 <__addsf3x+0x20>
     7a0:	e0 95       	com	r30
     7a2:	0b 2e       	mov	r0, r27
     7a4:	ba 2f       	mov	r27, r26
     7a6:	a0 2d       	mov	r26, r0
     7a8:	0b 01       	movw	r0, r22
     7aa:	b9 01       	movw	r22, r18
     7ac:	90 01       	movw	r18, r0
     7ae:	0c 01       	movw	r0, r24
     7b0:	ca 01       	movw	r24, r20
     7b2:	a0 01       	movw	r20, r0
     7b4:	11 24       	eor	r1, r1
     7b6:	ff 27       	eor	r31, r31
     7b8:	59 1b       	sub	r21, r25
     7ba:	99 f0       	breq	.+38     	; 0x7e2 <__addsf3x+0x60>
     7bc:	59 3f       	cpi	r21, 0xF9	; 249
     7be:	50 f4       	brcc	.+20     	; 0x7d4 <__addsf3x+0x52>
     7c0:	50 3e       	cpi	r21, 0xE0	; 224
     7c2:	68 f1       	brcs	.+90     	; 0x81e <__addsf3x+0x9c>
     7c4:	1a 16       	cp	r1, r26
     7c6:	f0 40       	sbci	r31, 0x00	; 0
     7c8:	a2 2f       	mov	r26, r18
     7ca:	23 2f       	mov	r18, r19
     7cc:	34 2f       	mov	r19, r20
     7ce:	44 27       	eor	r20, r20
     7d0:	58 5f       	subi	r21, 0xF8	; 248
     7d2:	f3 cf       	rjmp	.-26     	; 0x7ba <__addsf3x+0x38>
     7d4:	46 95       	lsr	r20
     7d6:	37 95       	ror	r19
     7d8:	27 95       	ror	r18
     7da:	a7 95       	ror	r26
     7dc:	f0 40       	sbci	r31, 0x00	; 0
     7de:	53 95       	inc	r21
     7e0:	c9 f7       	brne	.-14     	; 0x7d4 <__addsf3x+0x52>
     7e2:	7e f4       	brtc	.+30     	; 0x802 <__addsf3x+0x80>
     7e4:	1f 16       	cp	r1, r31
     7e6:	ba 0b       	sbc	r27, r26
     7e8:	62 0b       	sbc	r22, r18
     7ea:	73 0b       	sbc	r23, r19
     7ec:	84 0b       	sbc	r24, r20
     7ee:	ba f0       	brmi	.+46     	; 0x81e <__addsf3x+0x9c>
     7f0:	91 50       	subi	r25, 0x01	; 1
     7f2:	a1 f0       	breq	.+40     	; 0x81c <__addsf3x+0x9a>
     7f4:	ff 0f       	add	r31, r31
     7f6:	bb 1f       	adc	r27, r27
     7f8:	66 1f       	adc	r22, r22
     7fa:	77 1f       	adc	r23, r23
     7fc:	88 1f       	adc	r24, r24
     7fe:	c2 f7       	brpl	.-16     	; 0x7f0 <__addsf3x+0x6e>
     800:	0e c0       	rjmp	.+28     	; 0x81e <__addsf3x+0x9c>
     802:	ba 0f       	add	r27, r26
     804:	62 1f       	adc	r22, r18
     806:	73 1f       	adc	r23, r19
     808:	84 1f       	adc	r24, r20
     80a:	48 f4       	brcc	.+18     	; 0x81e <__addsf3x+0x9c>
     80c:	87 95       	ror	r24
     80e:	77 95       	ror	r23
     810:	67 95       	ror	r22
     812:	b7 95       	ror	r27
     814:	f7 95       	ror	r31
     816:	9e 3f       	cpi	r25, 0xFE	; 254
     818:	08 f0       	brcs	.+2      	; 0x81c <__addsf3x+0x9a>
     81a:	b0 cf       	rjmp	.-160    	; 0x77c <__addsf3+0x28>
     81c:	93 95       	inc	r25
     81e:	88 0f       	add	r24, r24
     820:	08 f0       	brcs	.+2      	; 0x824 <__addsf3x+0xa2>
     822:	99 27       	eor	r25, r25
     824:	ee 0f       	add	r30, r30
     826:	97 95       	ror	r25
     828:	87 95       	ror	r24
     82a:	08 95       	ret

0000082c <__divsf3>:
     82c:	0e 94 2a 04 	call	0x854	; 0x854 <__divsf3x>
     830:	0c 94 12 05 	jmp	0xa24	; 0xa24 <__fp_round>
     834:	0e 94 0b 05 	call	0xa16	; 0xa16 <__fp_pscB>
     838:	58 f0       	brcs	.+22     	; 0x850 <__divsf3+0x24>
     83a:	0e 94 04 05 	call	0xa08	; 0xa08 <__fp_pscA>
     83e:	40 f0       	brcs	.+16     	; 0x850 <__divsf3+0x24>
     840:	29 f4       	brne	.+10     	; 0x84c <__divsf3+0x20>
     842:	5f 3f       	cpi	r21, 0xFF	; 255
     844:	29 f0       	breq	.+10     	; 0x850 <__divsf3+0x24>
     846:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <__fp_inf>
     84a:	51 11       	cpse	r21, r1
     84c:	0c 94 46 05 	jmp	0xa8c	; 0xa8c <__fp_szero>
     850:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__fp_nan>

00000854 <__divsf3x>:
     854:	0e 94 23 05 	call	0xa46	; 0xa46 <__fp_split3>
     858:	68 f3       	brcs	.-38     	; 0x834 <__divsf3+0x8>

0000085a <__divsf3_pse>:
     85a:	99 23       	and	r25, r25
     85c:	b1 f3       	breq	.-20     	; 0x84a <__divsf3+0x1e>
     85e:	55 23       	and	r21, r21
     860:	91 f3       	breq	.-28     	; 0x846 <__divsf3+0x1a>
     862:	95 1b       	sub	r25, r21
     864:	55 0b       	sbc	r21, r21
     866:	bb 27       	eor	r27, r27
     868:	aa 27       	eor	r26, r26
     86a:	62 17       	cp	r22, r18
     86c:	73 07       	cpc	r23, r19
     86e:	84 07       	cpc	r24, r20
     870:	38 f0       	brcs	.+14     	; 0x880 <__divsf3_pse+0x26>
     872:	9f 5f       	subi	r25, 0xFF	; 255
     874:	5f 4f       	sbci	r21, 0xFF	; 255
     876:	22 0f       	add	r18, r18
     878:	33 1f       	adc	r19, r19
     87a:	44 1f       	adc	r20, r20
     87c:	aa 1f       	adc	r26, r26
     87e:	a9 f3       	breq	.-22     	; 0x86a <__divsf3_pse+0x10>
     880:	35 d0       	rcall	.+106    	; 0x8ec <__divsf3_pse+0x92>
     882:	0e 2e       	mov	r0, r30
     884:	3a f0       	brmi	.+14     	; 0x894 <__divsf3_pse+0x3a>
     886:	e0 e8       	ldi	r30, 0x80	; 128
     888:	32 d0       	rcall	.+100    	; 0x8ee <__divsf3_pse+0x94>
     88a:	91 50       	subi	r25, 0x01	; 1
     88c:	50 40       	sbci	r21, 0x00	; 0
     88e:	e6 95       	lsr	r30
     890:	00 1c       	adc	r0, r0
     892:	ca f7       	brpl	.-14     	; 0x886 <__divsf3_pse+0x2c>
     894:	2b d0       	rcall	.+86     	; 0x8ec <__divsf3_pse+0x92>
     896:	fe 2f       	mov	r31, r30
     898:	29 d0       	rcall	.+82     	; 0x8ec <__divsf3_pse+0x92>
     89a:	66 0f       	add	r22, r22
     89c:	77 1f       	adc	r23, r23
     89e:	88 1f       	adc	r24, r24
     8a0:	bb 1f       	adc	r27, r27
     8a2:	26 17       	cp	r18, r22
     8a4:	37 07       	cpc	r19, r23
     8a6:	48 07       	cpc	r20, r24
     8a8:	ab 07       	cpc	r26, r27
     8aa:	b0 e8       	ldi	r27, 0x80	; 128
     8ac:	09 f0       	breq	.+2      	; 0x8b0 <__divsf3_pse+0x56>
     8ae:	bb 0b       	sbc	r27, r27
     8b0:	80 2d       	mov	r24, r0
     8b2:	bf 01       	movw	r22, r30
     8b4:	ff 27       	eor	r31, r31
     8b6:	93 58       	subi	r25, 0x83	; 131
     8b8:	5f 4f       	sbci	r21, 0xFF	; 255
     8ba:	3a f0       	brmi	.+14     	; 0x8ca <__divsf3_pse+0x70>
     8bc:	9e 3f       	cpi	r25, 0xFE	; 254
     8be:	51 05       	cpc	r21, r1
     8c0:	78 f0       	brcs	.+30     	; 0x8e0 <__divsf3_pse+0x86>
     8c2:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <__fp_inf>
     8c6:	0c 94 46 05 	jmp	0xa8c	; 0xa8c <__fp_szero>
     8ca:	5f 3f       	cpi	r21, 0xFF	; 255
     8cc:	e4 f3       	brlt	.-8      	; 0x8c6 <__divsf3_pse+0x6c>
     8ce:	98 3e       	cpi	r25, 0xE8	; 232
     8d0:	d4 f3       	brlt	.-12     	; 0x8c6 <__divsf3_pse+0x6c>
     8d2:	86 95       	lsr	r24
     8d4:	77 95       	ror	r23
     8d6:	67 95       	ror	r22
     8d8:	b7 95       	ror	r27
     8da:	f7 95       	ror	r31
     8dc:	9f 5f       	subi	r25, 0xFF	; 255
     8de:	c9 f7       	brne	.-14     	; 0x8d2 <__divsf3_pse+0x78>
     8e0:	88 0f       	add	r24, r24
     8e2:	91 1d       	adc	r25, r1
     8e4:	96 95       	lsr	r25
     8e6:	87 95       	ror	r24
     8e8:	97 f9       	bld	r25, 7
     8ea:	08 95       	ret
     8ec:	e1 e0       	ldi	r30, 0x01	; 1
     8ee:	66 0f       	add	r22, r22
     8f0:	77 1f       	adc	r23, r23
     8f2:	88 1f       	adc	r24, r24
     8f4:	bb 1f       	adc	r27, r27
     8f6:	62 17       	cp	r22, r18
     8f8:	73 07       	cpc	r23, r19
     8fa:	84 07       	cpc	r24, r20
     8fc:	ba 07       	cpc	r27, r26
     8fe:	20 f0       	brcs	.+8      	; 0x908 <__stack+0x9>
     900:	62 1b       	sub	r22, r18
     902:	73 0b       	sbc	r23, r19
     904:	84 0b       	sbc	r24, r20
     906:	ba 0b       	sbc	r27, r26
     908:	ee 1f       	adc	r30, r30
     90a:	88 f7       	brcc	.-30     	; 0x8ee <__divsf3_pse+0x94>
     90c:	e0 95       	com	r30
     90e:	08 95       	ret

00000910 <__fixsfsi>:
     910:	0e 94 8f 04 	call	0x91e	; 0x91e <__fixunssfsi>
     914:	68 94       	set
     916:	b1 11       	cpse	r27, r1
     918:	0c 94 46 05 	jmp	0xa8c	; 0xa8c <__fp_szero>
     91c:	08 95       	ret

0000091e <__fixunssfsi>:
     91e:	0e 94 2b 05 	call	0xa56	; 0xa56 <__fp_splitA>
     922:	88 f0       	brcs	.+34     	; 0x946 <__fixunssfsi+0x28>
     924:	9f 57       	subi	r25, 0x7F	; 127
     926:	98 f0       	brcs	.+38     	; 0x94e <__fixunssfsi+0x30>
     928:	b9 2f       	mov	r27, r25
     92a:	99 27       	eor	r25, r25
     92c:	b7 51       	subi	r27, 0x17	; 23
     92e:	b0 f0       	brcs	.+44     	; 0x95c <__fixunssfsi+0x3e>
     930:	e1 f0       	breq	.+56     	; 0x96a <__fixunssfsi+0x4c>
     932:	66 0f       	add	r22, r22
     934:	77 1f       	adc	r23, r23
     936:	88 1f       	adc	r24, r24
     938:	99 1f       	adc	r25, r25
     93a:	1a f0       	brmi	.+6      	; 0x942 <__fixunssfsi+0x24>
     93c:	ba 95       	dec	r27
     93e:	c9 f7       	brne	.-14     	; 0x932 <__fixunssfsi+0x14>
     940:	14 c0       	rjmp	.+40     	; 0x96a <__fixunssfsi+0x4c>
     942:	b1 30       	cpi	r27, 0x01	; 1
     944:	91 f0       	breq	.+36     	; 0x96a <__fixunssfsi+0x4c>
     946:	0e 94 45 05 	call	0xa8a	; 0xa8a <__fp_zero>
     94a:	b1 e0       	ldi	r27, 0x01	; 1
     94c:	08 95       	ret
     94e:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <__fp_zero>
     952:	67 2f       	mov	r22, r23
     954:	78 2f       	mov	r23, r24
     956:	88 27       	eor	r24, r24
     958:	b8 5f       	subi	r27, 0xF8	; 248
     95a:	39 f0       	breq	.+14     	; 0x96a <__fixunssfsi+0x4c>
     95c:	b9 3f       	cpi	r27, 0xF9	; 249
     95e:	cc f3       	brlt	.-14     	; 0x952 <__fixunssfsi+0x34>
     960:	86 95       	lsr	r24
     962:	77 95       	ror	r23
     964:	67 95       	ror	r22
     966:	b3 95       	inc	r27
     968:	d9 f7       	brne	.-10     	; 0x960 <__fixunssfsi+0x42>
     96a:	3e f4       	brtc	.+14     	; 0x97a <__fixunssfsi+0x5c>
     96c:	90 95       	com	r25
     96e:	80 95       	com	r24
     970:	70 95       	com	r23
     972:	61 95       	neg	r22
     974:	7f 4f       	sbci	r23, 0xFF	; 255
     976:	8f 4f       	sbci	r24, 0xFF	; 255
     978:	9f 4f       	sbci	r25, 0xFF	; 255
     97a:	08 95       	ret

0000097c <__floatunsisf>:
     97c:	e8 94       	clt
     97e:	09 c0       	rjmp	.+18     	; 0x992 <__floatsisf+0x12>

00000980 <__floatsisf>:
     980:	97 fb       	bst	r25, 7
     982:	3e f4       	brtc	.+14     	; 0x992 <__floatsisf+0x12>
     984:	90 95       	com	r25
     986:	80 95       	com	r24
     988:	70 95       	com	r23
     98a:	61 95       	neg	r22
     98c:	7f 4f       	sbci	r23, 0xFF	; 255
     98e:	8f 4f       	sbci	r24, 0xFF	; 255
     990:	9f 4f       	sbci	r25, 0xFF	; 255
     992:	99 23       	and	r25, r25
     994:	a9 f0       	breq	.+42     	; 0x9c0 <__floatsisf+0x40>
     996:	f9 2f       	mov	r31, r25
     998:	96 e9       	ldi	r25, 0x96	; 150
     99a:	bb 27       	eor	r27, r27
     99c:	93 95       	inc	r25
     99e:	f6 95       	lsr	r31
     9a0:	87 95       	ror	r24
     9a2:	77 95       	ror	r23
     9a4:	67 95       	ror	r22
     9a6:	b7 95       	ror	r27
     9a8:	f1 11       	cpse	r31, r1
     9aa:	f8 cf       	rjmp	.-16     	; 0x99c <__floatsisf+0x1c>
     9ac:	fa f4       	brpl	.+62     	; 0x9ec <__floatsisf+0x6c>
     9ae:	bb 0f       	add	r27, r27
     9b0:	11 f4       	brne	.+4      	; 0x9b6 <__floatsisf+0x36>
     9b2:	60 ff       	sbrs	r22, 0
     9b4:	1b c0       	rjmp	.+54     	; 0x9ec <__floatsisf+0x6c>
     9b6:	6f 5f       	subi	r22, 0xFF	; 255
     9b8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ba:	8f 4f       	sbci	r24, 0xFF	; 255
     9bc:	9f 4f       	sbci	r25, 0xFF	; 255
     9be:	16 c0       	rjmp	.+44     	; 0x9ec <__floatsisf+0x6c>
     9c0:	88 23       	and	r24, r24
     9c2:	11 f0       	breq	.+4      	; 0x9c8 <__floatsisf+0x48>
     9c4:	96 e9       	ldi	r25, 0x96	; 150
     9c6:	11 c0       	rjmp	.+34     	; 0x9ea <__floatsisf+0x6a>
     9c8:	77 23       	and	r23, r23
     9ca:	21 f0       	breq	.+8      	; 0x9d4 <__floatsisf+0x54>
     9cc:	9e e8       	ldi	r25, 0x8E	; 142
     9ce:	87 2f       	mov	r24, r23
     9d0:	76 2f       	mov	r23, r22
     9d2:	05 c0       	rjmp	.+10     	; 0x9de <__floatsisf+0x5e>
     9d4:	66 23       	and	r22, r22
     9d6:	71 f0       	breq	.+28     	; 0x9f4 <__floatsisf+0x74>
     9d8:	96 e8       	ldi	r25, 0x86	; 134
     9da:	86 2f       	mov	r24, r22
     9dc:	70 e0       	ldi	r23, 0x00	; 0
     9de:	60 e0       	ldi	r22, 0x00	; 0
     9e0:	2a f0       	brmi	.+10     	; 0x9ec <__floatsisf+0x6c>
     9e2:	9a 95       	dec	r25
     9e4:	66 0f       	add	r22, r22
     9e6:	77 1f       	adc	r23, r23
     9e8:	88 1f       	adc	r24, r24
     9ea:	da f7       	brpl	.-10     	; 0x9e2 <__floatsisf+0x62>
     9ec:	88 0f       	add	r24, r24
     9ee:	96 95       	lsr	r25
     9f0:	87 95       	ror	r24
     9f2:	97 f9       	bld	r25, 7
     9f4:	08 95       	ret

000009f6 <__fp_inf>:
     9f6:	97 f9       	bld	r25, 7
     9f8:	9f 67       	ori	r25, 0x7F	; 127
     9fa:	80 e8       	ldi	r24, 0x80	; 128
     9fc:	70 e0       	ldi	r23, 0x00	; 0
     9fe:	60 e0       	ldi	r22, 0x00	; 0
     a00:	08 95       	ret

00000a02 <__fp_nan>:
     a02:	9f ef       	ldi	r25, 0xFF	; 255
     a04:	80 ec       	ldi	r24, 0xC0	; 192
     a06:	08 95       	ret

00000a08 <__fp_pscA>:
     a08:	00 24       	eor	r0, r0
     a0a:	0a 94       	dec	r0
     a0c:	16 16       	cp	r1, r22
     a0e:	17 06       	cpc	r1, r23
     a10:	18 06       	cpc	r1, r24
     a12:	09 06       	cpc	r0, r25
     a14:	08 95       	ret

00000a16 <__fp_pscB>:
     a16:	00 24       	eor	r0, r0
     a18:	0a 94       	dec	r0
     a1a:	12 16       	cp	r1, r18
     a1c:	13 06       	cpc	r1, r19
     a1e:	14 06       	cpc	r1, r20
     a20:	05 06       	cpc	r0, r21
     a22:	08 95       	ret

00000a24 <__fp_round>:
     a24:	09 2e       	mov	r0, r25
     a26:	03 94       	inc	r0
     a28:	00 0c       	add	r0, r0
     a2a:	11 f4       	brne	.+4      	; 0xa30 <__fp_round+0xc>
     a2c:	88 23       	and	r24, r24
     a2e:	52 f0       	brmi	.+20     	; 0xa44 <__fp_round+0x20>
     a30:	bb 0f       	add	r27, r27
     a32:	40 f4       	brcc	.+16     	; 0xa44 <__fp_round+0x20>
     a34:	bf 2b       	or	r27, r31
     a36:	11 f4       	brne	.+4      	; 0xa3c <__fp_round+0x18>
     a38:	60 ff       	sbrs	r22, 0
     a3a:	04 c0       	rjmp	.+8      	; 0xa44 <__fp_round+0x20>
     a3c:	6f 5f       	subi	r22, 0xFF	; 255
     a3e:	7f 4f       	sbci	r23, 0xFF	; 255
     a40:	8f 4f       	sbci	r24, 0xFF	; 255
     a42:	9f 4f       	sbci	r25, 0xFF	; 255
     a44:	08 95       	ret

00000a46 <__fp_split3>:
     a46:	57 fd       	sbrc	r21, 7
     a48:	90 58       	subi	r25, 0x80	; 128
     a4a:	44 0f       	add	r20, r20
     a4c:	55 1f       	adc	r21, r21
     a4e:	59 f0       	breq	.+22     	; 0xa66 <__fp_splitA+0x10>
     a50:	5f 3f       	cpi	r21, 0xFF	; 255
     a52:	71 f0       	breq	.+28     	; 0xa70 <__fp_splitA+0x1a>
     a54:	47 95       	ror	r20

00000a56 <__fp_splitA>:
     a56:	88 0f       	add	r24, r24
     a58:	97 fb       	bst	r25, 7
     a5a:	99 1f       	adc	r25, r25
     a5c:	61 f0       	breq	.+24     	; 0xa76 <__fp_splitA+0x20>
     a5e:	9f 3f       	cpi	r25, 0xFF	; 255
     a60:	79 f0       	breq	.+30     	; 0xa80 <__fp_splitA+0x2a>
     a62:	87 95       	ror	r24
     a64:	08 95       	ret
     a66:	12 16       	cp	r1, r18
     a68:	13 06       	cpc	r1, r19
     a6a:	14 06       	cpc	r1, r20
     a6c:	55 1f       	adc	r21, r21
     a6e:	f2 cf       	rjmp	.-28     	; 0xa54 <__fp_split3+0xe>
     a70:	46 95       	lsr	r20
     a72:	f1 df       	rcall	.-30     	; 0xa56 <__fp_splitA>
     a74:	08 c0       	rjmp	.+16     	; 0xa86 <__fp_splitA+0x30>
     a76:	16 16       	cp	r1, r22
     a78:	17 06       	cpc	r1, r23
     a7a:	18 06       	cpc	r1, r24
     a7c:	99 1f       	adc	r25, r25
     a7e:	f1 cf       	rjmp	.-30     	; 0xa62 <__fp_splitA+0xc>
     a80:	86 95       	lsr	r24
     a82:	71 05       	cpc	r23, r1
     a84:	61 05       	cpc	r22, r1
     a86:	08 94       	sec
     a88:	08 95       	ret

00000a8a <__fp_zero>:
     a8a:	e8 94       	clt

00000a8c <__fp_szero>:
     a8c:	bb 27       	eor	r27, r27
     a8e:	66 27       	eor	r22, r22
     a90:	77 27       	eor	r23, r23
     a92:	cb 01       	movw	r24, r22
     a94:	97 f9       	bld	r25, 7
     a96:	08 95       	ret

00000a98 <__mulsf3>:
     a98:	0e 94 5f 05 	call	0xabe	; 0xabe <__mulsf3x>
     a9c:	0c 94 12 05 	jmp	0xa24	; 0xa24 <__fp_round>
     aa0:	0e 94 04 05 	call	0xa08	; 0xa08 <__fp_pscA>
     aa4:	38 f0       	brcs	.+14     	; 0xab4 <__mulsf3+0x1c>
     aa6:	0e 94 0b 05 	call	0xa16	; 0xa16 <__fp_pscB>
     aaa:	20 f0       	brcs	.+8      	; 0xab4 <__mulsf3+0x1c>
     aac:	95 23       	and	r25, r21
     aae:	11 f0       	breq	.+4      	; 0xab4 <__mulsf3+0x1c>
     ab0:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <__fp_inf>
     ab4:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__fp_nan>
     ab8:	11 24       	eor	r1, r1
     aba:	0c 94 46 05 	jmp	0xa8c	; 0xa8c <__fp_szero>

00000abe <__mulsf3x>:
     abe:	0e 94 23 05 	call	0xa46	; 0xa46 <__fp_split3>
     ac2:	70 f3       	brcs	.-36     	; 0xaa0 <__mulsf3+0x8>

00000ac4 <__mulsf3_pse>:
     ac4:	95 9f       	mul	r25, r21
     ac6:	c1 f3       	breq	.-16     	; 0xab8 <__mulsf3+0x20>
     ac8:	95 0f       	add	r25, r21
     aca:	50 e0       	ldi	r21, 0x00	; 0
     acc:	55 1f       	adc	r21, r21
     ace:	62 9f       	mul	r22, r18
     ad0:	f0 01       	movw	r30, r0
     ad2:	72 9f       	mul	r23, r18
     ad4:	bb 27       	eor	r27, r27
     ad6:	f0 0d       	add	r31, r0
     ad8:	b1 1d       	adc	r27, r1
     ada:	63 9f       	mul	r22, r19
     adc:	aa 27       	eor	r26, r26
     ade:	f0 0d       	add	r31, r0
     ae0:	b1 1d       	adc	r27, r1
     ae2:	aa 1f       	adc	r26, r26
     ae4:	64 9f       	mul	r22, r20
     ae6:	66 27       	eor	r22, r22
     ae8:	b0 0d       	add	r27, r0
     aea:	a1 1d       	adc	r26, r1
     aec:	66 1f       	adc	r22, r22
     aee:	82 9f       	mul	r24, r18
     af0:	22 27       	eor	r18, r18
     af2:	b0 0d       	add	r27, r0
     af4:	a1 1d       	adc	r26, r1
     af6:	62 1f       	adc	r22, r18
     af8:	73 9f       	mul	r23, r19
     afa:	b0 0d       	add	r27, r0
     afc:	a1 1d       	adc	r26, r1
     afe:	62 1f       	adc	r22, r18
     b00:	83 9f       	mul	r24, r19
     b02:	a0 0d       	add	r26, r0
     b04:	61 1d       	adc	r22, r1
     b06:	22 1f       	adc	r18, r18
     b08:	74 9f       	mul	r23, r20
     b0a:	33 27       	eor	r19, r19
     b0c:	a0 0d       	add	r26, r0
     b0e:	61 1d       	adc	r22, r1
     b10:	23 1f       	adc	r18, r19
     b12:	84 9f       	mul	r24, r20
     b14:	60 0d       	add	r22, r0
     b16:	21 1d       	adc	r18, r1
     b18:	82 2f       	mov	r24, r18
     b1a:	76 2f       	mov	r23, r22
     b1c:	6a 2f       	mov	r22, r26
     b1e:	11 24       	eor	r1, r1
     b20:	9f 57       	subi	r25, 0x7F	; 127
     b22:	50 40       	sbci	r21, 0x00	; 0
     b24:	9a f0       	brmi	.+38     	; 0xb4c <__mulsf3_pse+0x88>
     b26:	f1 f0       	breq	.+60     	; 0xb64 <__mulsf3_pse+0xa0>
     b28:	88 23       	and	r24, r24
     b2a:	4a f0       	brmi	.+18     	; 0xb3e <__mulsf3_pse+0x7a>
     b2c:	ee 0f       	add	r30, r30
     b2e:	ff 1f       	adc	r31, r31
     b30:	bb 1f       	adc	r27, r27
     b32:	66 1f       	adc	r22, r22
     b34:	77 1f       	adc	r23, r23
     b36:	88 1f       	adc	r24, r24
     b38:	91 50       	subi	r25, 0x01	; 1
     b3a:	50 40       	sbci	r21, 0x00	; 0
     b3c:	a9 f7       	brne	.-22     	; 0xb28 <__mulsf3_pse+0x64>
     b3e:	9e 3f       	cpi	r25, 0xFE	; 254
     b40:	51 05       	cpc	r21, r1
     b42:	80 f0       	brcs	.+32     	; 0xb64 <__mulsf3_pse+0xa0>
     b44:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <__fp_inf>
     b48:	0c 94 46 05 	jmp	0xa8c	; 0xa8c <__fp_szero>
     b4c:	5f 3f       	cpi	r21, 0xFF	; 255
     b4e:	e4 f3       	brlt	.-8      	; 0xb48 <__mulsf3_pse+0x84>
     b50:	98 3e       	cpi	r25, 0xE8	; 232
     b52:	d4 f3       	brlt	.-12     	; 0xb48 <__mulsf3_pse+0x84>
     b54:	86 95       	lsr	r24
     b56:	77 95       	ror	r23
     b58:	67 95       	ror	r22
     b5a:	b7 95       	ror	r27
     b5c:	f7 95       	ror	r31
     b5e:	e7 95       	ror	r30
     b60:	9f 5f       	subi	r25, 0xFF	; 255
     b62:	c1 f7       	brne	.-16     	; 0xb54 <__mulsf3_pse+0x90>
     b64:	fe 2b       	or	r31, r30
     b66:	88 0f       	add	r24, r24
     b68:	91 1d       	adc	r25, r1
     b6a:	96 95       	lsr	r25
     b6c:	87 95       	ror	r24
     b6e:	97 f9       	bld	r25, 7
     b70:	08 95       	ret

00000b72 <__divmodhi4>:
     b72:	97 fb       	bst	r25, 7
     b74:	07 2e       	mov	r0, r23
     b76:	16 f4       	brtc	.+4      	; 0xb7c <__divmodhi4+0xa>
     b78:	00 94       	com	r0
     b7a:	07 d0       	rcall	.+14     	; 0xb8a <__divmodhi4_neg1>
     b7c:	77 fd       	sbrc	r23, 7
     b7e:	09 d0       	rcall	.+18     	; 0xb92 <__divmodhi4_neg2>
     b80:	0e 94 6f 06 	call	0xcde	; 0xcde <__udivmodhi4>
     b84:	07 fc       	sbrc	r0, 7
     b86:	05 d0       	rcall	.+10     	; 0xb92 <__divmodhi4_neg2>
     b88:	3e f4       	brtc	.+14     	; 0xb98 <__divmodhi4_exit>

00000b8a <__divmodhi4_neg1>:
     b8a:	90 95       	com	r25
     b8c:	81 95       	neg	r24
     b8e:	9f 4f       	sbci	r25, 0xFF	; 255
     b90:	08 95       	ret

00000b92 <__divmodhi4_neg2>:
     b92:	70 95       	com	r23
     b94:	61 95       	neg	r22
     b96:	7f 4f       	sbci	r23, 0xFF	; 255

00000b98 <__divmodhi4_exit>:
     b98:	08 95       	ret

00000b9a <__umoddi3>:
     b9a:	68 94       	set
     b9c:	01 c0       	rjmp	.+2      	; 0xba0 <__udivdi3_umoddi3>

00000b9e <__udivdi3>:
     b9e:	e8 94       	clt

00000ba0 <__udivdi3_umoddi3>:
     ba0:	8f 92       	push	r8
     ba2:	9f 92       	push	r9
     ba4:	cf 93       	push	r28
     ba6:	df 93       	push	r29
     ba8:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__udivmod64>
     bac:	df 91       	pop	r29
     bae:	cf 91       	pop	r28
     bb0:	9f 90       	pop	r9
     bb2:	8f 90       	pop	r8
     bb4:	08 95       	ret

00000bb6 <__udivmod64>:
     bb6:	88 24       	eor	r8, r8
     bb8:	99 24       	eor	r9, r9
     bba:	f4 01       	movw	r30, r8
     bbc:	e4 01       	movw	r28, r8
     bbe:	b0 e4       	ldi	r27, 0x40	; 64
     bc0:	9f 93       	push	r25
     bc2:	aa 27       	eor	r26, r26
     bc4:	9a 15       	cp	r25, r10
     bc6:	8b 04       	cpc	r8, r11
     bc8:	9c 04       	cpc	r9, r12
     bca:	ed 05       	cpc	r30, r13
     bcc:	fe 05       	cpc	r31, r14
     bce:	cf 05       	cpc	r28, r15
     bd0:	d0 07       	cpc	r29, r16
     bd2:	a1 07       	cpc	r26, r17
     bd4:	98 f4       	brcc	.+38     	; 0xbfc <__udivmod64+0x46>
     bd6:	ad 2f       	mov	r26, r29
     bd8:	dc 2f       	mov	r29, r28
     bda:	cf 2f       	mov	r28, r31
     bdc:	fe 2f       	mov	r31, r30
     bde:	e9 2d       	mov	r30, r9
     be0:	98 2c       	mov	r9, r8
     be2:	89 2e       	mov	r8, r25
     be4:	98 2f       	mov	r25, r24
     be6:	87 2f       	mov	r24, r23
     be8:	76 2f       	mov	r23, r22
     bea:	65 2f       	mov	r22, r21
     bec:	54 2f       	mov	r21, r20
     bee:	43 2f       	mov	r20, r19
     bf0:	32 2f       	mov	r19, r18
     bf2:	22 27       	eor	r18, r18
     bf4:	b8 50       	subi	r27, 0x08	; 8
     bf6:	31 f7       	brne	.-52     	; 0xbc4 <__udivmod64+0xe>
     bf8:	bf 91       	pop	r27
     bfa:	27 c0       	rjmp	.+78     	; 0xc4a <__udivmod64+0x94>
     bfc:	1b 2e       	mov	r1, r27
     bfe:	bf 91       	pop	r27
     c00:	bb 27       	eor	r27, r27
     c02:	22 0f       	add	r18, r18
     c04:	33 1f       	adc	r19, r19
     c06:	44 1f       	adc	r20, r20
     c08:	55 1f       	adc	r21, r21
     c0a:	66 1f       	adc	r22, r22
     c0c:	77 1f       	adc	r23, r23
     c0e:	88 1f       	adc	r24, r24
     c10:	99 1f       	adc	r25, r25
     c12:	88 1c       	adc	r8, r8
     c14:	99 1c       	adc	r9, r9
     c16:	ee 1f       	adc	r30, r30
     c18:	ff 1f       	adc	r31, r31
     c1a:	cc 1f       	adc	r28, r28
     c1c:	dd 1f       	adc	r29, r29
     c1e:	aa 1f       	adc	r26, r26
     c20:	bb 1f       	adc	r27, r27
     c22:	8a 14       	cp	r8, r10
     c24:	9b 04       	cpc	r9, r11
     c26:	ec 05       	cpc	r30, r12
     c28:	fd 05       	cpc	r31, r13
     c2a:	ce 05       	cpc	r28, r14
     c2c:	df 05       	cpc	r29, r15
     c2e:	a0 07       	cpc	r26, r16
     c30:	b1 07       	cpc	r27, r17
     c32:	48 f0       	brcs	.+18     	; 0xc46 <__udivmod64+0x90>
     c34:	8a 18       	sub	r8, r10
     c36:	9b 08       	sbc	r9, r11
     c38:	ec 09       	sbc	r30, r12
     c3a:	fd 09       	sbc	r31, r13
     c3c:	ce 09       	sbc	r28, r14
     c3e:	df 09       	sbc	r29, r15
     c40:	a0 0b       	sbc	r26, r16
     c42:	b1 0b       	sbc	r27, r17
     c44:	21 60       	ori	r18, 0x01	; 1
     c46:	1a 94       	dec	r1
     c48:	e1 f6       	brne	.-72     	; 0xc02 <__udivmod64+0x4c>
     c4a:	2e f4       	brtc	.+10     	; 0xc56 <__udivmod64+0xa0>
     c4c:	94 01       	movw	r18, r8
     c4e:	af 01       	movw	r20, r30
     c50:	be 01       	movw	r22, r28
     c52:	cd 01       	movw	r24, r26
     c54:	00 0c       	add	r0, r0
     c56:	08 95       	ret

00000c58 <__ashldi3>:
     c58:	0f 93       	push	r16
     c5a:	08 30       	cpi	r16, 0x08	; 8
     c5c:	90 f0       	brcs	.+36     	; 0xc82 <__ashldi3+0x2a>
     c5e:	98 2f       	mov	r25, r24
     c60:	87 2f       	mov	r24, r23
     c62:	76 2f       	mov	r23, r22
     c64:	65 2f       	mov	r22, r21
     c66:	54 2f       	mov	r21, r20
     c68:	43 2f       	mov	r20, r19
     c6a:	32 2f       	mov	r19, r18
     c6c:	22 27       	eor	r18, r18
     c6e:	08 50       	subi	r16, 0x08	; 8
     c70:	f4 cf       	rjmp	.-24     	; 0xc5a <__ashldi3+0x2>
     c72:	22 0f       	add	r18, r18
     c74:	33 1f       	adc	r19, r19
     c76:	44 1f       	adc	r20, r20
     c78:	55 1f       	adc	r21, r21
     c7a:	66 1f       	adc	r22, r22
     c7c:	77 1f       	adc	r23, r23
     c7e:	88 1f       	adc	r24, r24
     c80:	99 1f       	adc	r25, r25
     c82:	0a 95       	dec	r16
     c84:	b2 f7       	brpl	.-20     	; 0xc72 <__ashldi3+0x1a>
     c86:	0f 91       	pop	r16
     c88:	08 95       	ret

00000c8a <__ashrdi3>:
     c8a:	97 fb       	bst	r25, 7
     c8c:	10 f8       	bld	r1, 0

00000c8e <__lshrdi3>:
     c8e:	16 94       	lsr	r1
     c90:	00 08       	sbc	r0, r0
     c92:	0f 93       	push	r16
     c94:	08 30       	cpi	r16, 0x08	; 8
     c96:	98 f0       	brcs	.+38     	; 0xcbe <__lshrdi3+0x30>
     c98:	08 50       	subi	r16, 0x08	; 8
     c9a:	23 2f       	mov	r18, r19
     c9c:	34 2f       	mov	r19, r20
     c9e:	45 2f       	mov	r20, r21
     ca0:	56 2f       	mov	r21, r22
     ca2:	67 2f       	mov	r22, r23
     ca4:	78 2f       	mov	r23, r24
     ca6:	89 2f       	mov	r24, r25
     ca8:	90 2d       	mov	r25, r0
     caa:	f4 cf       	rjmp	.-24     	; 0xc94 <__lshrdi3+0x6>
     cac:	05 94       	asr	r0
     cae:	97 95       	ror	r25
     cb0:	87 95       	ror	r24
     cb2:	77 95       	ror	r23
     cb4:	67 95       	ror	r22
     cb6:	57 95       	ror	r21
     cb8:	47 95       	ror	r20
     cba:	37 95       	ror	r19
     cbc:	27 95       	ror	r18
     cbe:	0a 95       	dec	r16
     cc0:	aa f7       	brpl	.-22     	; 0xcac <__lshrdi3+0x1e>
     cc2:	0f 91       	pop	r16
     cc4:	08 95       	ret

00000cc6 <__adddi3_s8>:
     cc6:	00 24       	eor	r0, r0
     cc8:	a7 fd       	sbrc	r26, 7
     cca:	00 94       	com	r0
     ccc:	2a 0f       	add	r18, r26
     cce:	30 1d       	adc	r19, r0
     cd0:	40 1d       	adc	r20, r0
     cd2:	50 1d       	adc	r21, r0
     cd4:	60 1d       	adc	r22, r0
     cd6:	70 1d       	adc	r23, r0
     cd8:	80 1d       	adc	r24, r0
     cda:	90 1d       	adc	r25, r0
     cdc:	08 95       	ret

00000cde <__udivmodhi4>:
     cde:	aa 1b       	sub	r26, r26
     ce0:	bb 1b       	sub	r27, r27
     ce2:	51 e1       	ldi	r21, 0x11	; 17
     ce4:	07 c0       	rjmp	.+14     	; 0xcf4 <__udivmodhi4_ep>

00000ce6 <__udivmodhi4_loop>:
     ce6:	aa 1f       	adc	r26, r26
     ce8:	bb 1f       	adc	r27, r27
     cea:	a6 17       	cp	r26, r22
     cec:	b7 07       	cpc	r27, r23
     cee:	10 f0       	brcs	.+4      	; 0xcf4 <__udivmodhi4_ep>
     cf0:	a6 1b       	sub	r26, r22
     cf2:	b7 0b       	sbc	r27, r23

00000cf4 <__udivmodhi4_ep>:
     cf4:	88 1f       	adc	r24, r24
     cf6:	99 1f       	adc	r25, r25
     cf8:	5a 95       	dec	r21
     cfa:	a9 f7       	brne	.-22     	; 0xce6 <__udivmodhi4_loop>
     cfc:	80 95       	com	r24
     cfe:	90 95       	com	r25
     d00:	bc 01       	movw	r22, r24
     d02:	cd 01       	movw	r24, r26
     d04:	08 95       	ret

00000d06 <malloc>:
     d06:	0f 93       	push	r16
     d08:	1f 93       	push	r17
     d0a:	cf 93       	push	r28
     d0c:	df 93       	push	r29
     d0e:	82 30       	cpi	r24, 0x02	; 2
     d10:	91 05       	cpc	r25, r1
     d12:	10 f4       	brcc	.+4      	; 0xd18 <malloc+0x12>
     d14:	82 e0       	ldi	r24, 0x02	; 2
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	e0 91 35 01 	lds	r30, 0x0135	; 0x800135 <__flp>
     d1c:	f0 91 36 01 	lds	r31, 0x0136	; 0x800136 <__flp+0x1>
     d20:	20 e0       	ldi	r18, 0x00	; 0
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	a0 e0       	ldi	r26, 0x00	; 0
     d26:	b0 e0       	ldi	r27, 0x00	; 0
     d28:	30 97       	sbiw	r30, 0x00	; 0
     d2a:	19 f1       	breq	.+70     	; 0xd72 <malloc+0x6c>
     d2c:	40 81       	ld	r20, Z
     d2e:	51 81       	ldd	r21, Z+1	; 0x01
     d30:	02 81       	ldd	r16, Z+2	; 0x02
     d32:	13 81       	ldd	r17, Z+3	; 0x03
     d34:	48 17       	cp	r20, r24
     d36:	59 07       	cpc	r21, r25
     d38:	c8 f0       	brcs	.+50     	; 0xd6c <malloc+0x66>
     d3a:	84 17       	cp	r24, r20
     d3c:	95 07       	cpc	r25, r21
     d3e:	69 f4       	brne	.+26     	; 0xd5a <malloc+0x54>
     d40:	10 97       	sbiw	r26, 0x00	; 0
     d42:	31 f0       	breq	.+12     	; 0xd50 <malloc+0x4a>
     d44:	12 96       	adiw	r26, 0x02	; 2
     d46:	0c 93       	st	X, r16
     d48:	12 97       	sbiw	r26, 0x02	; 2
     d4a:	13 96       	adiw	r26, 0x03	; 3
     d4c:	1c 93       	st	X, r17
     d4e:	27 c0       	rjmp	.+78     	; 0xd9e <malloc+0x98>
     d50:	00 93 35 01 	sts	0x0135, r16	; 0x800135 <__flp>
     d54:	10 93 36 01 	sts	0x0136, r17	; 0x800136 <__flp+0x1>
     d58:	22 c0       	rjmp	.+68     	; 0xd9e <malloc+0x98>
     d5a:	21 15       	cp	r18, r1
     d5c:	31 05       	cpc	r19, r1
     d5e:	19 f0       	breq	.+6      	; 0xd66 <malloc+0x60>
     d60:	42 17       	cp	r20, r18
     d62:	53 07       	cpc	r21, r19
     d64:	18 f4       	brcc	.+6      	; 0xd6c <malloc+0x66>
     d66:	9a 01       	movw	r18, r20
     d68:	bd 01       	movw	r22, r26
     d6a:	ef 01       	movw	r28, r30
     d6c:	df 01       	movw	r26, r30
     d6e:	f8 01       	movw	r30, r16
     d70:	db cf       	rjmp	.-74     	; 0xd28 <malloc+0x22>
     d72:	21 15       	cp	r18, r1
     d74:	31 05       	cpc	r19, r1
     d76:	f9 f0       	breq	.+62     	; 0xdb6 <malloc+0xb0>
     d78:	28 1b       	sub	r18, r24
     d7a:	39 0b       	sbc	r19, r25
     d7c:	24 30       	cpi	r18, 0x04	; 4
     d7e:	31 05       	cpc	r19, r1
     d80:	80 f4       	brcc	.+32     	; 0xda2 <malloc+0x9c>
     d82:	8a 81       	ldd	r24, Y+2	; 0x02
     d84:	9b 81       	ldd	r25, Y+3	; 0x03
     d86:	61 15       	cp	r22, r1
     d88:	71 05       	cpc	r23, r1
     d8a:	21 f0       	breq	.+8      	; 0xd94 <malloc+0x8e>
     d8c:	fb 01       	movw	r30, r22
     d8e:	93 83       	std	Z+3, r25	; 0x03
     d90:	82 83       	std	Z+2, r24	; 0x02
     d92:	04 c0       	rjmp	.+8      	; 0xd9c <malloc+0x96>
     d94:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <__flp+0x1>
     d98:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <__flp>
     d9c:	fe 01       	movw	r30, r28
     d9e:	32 96       	adiw	r30, 0x02	; 2
     da0:	44 c0       	rjmp	.+136    	; 0xe2a <malloc+0x124>
     da2:	fe 01       	movw	r30, r28
     da4:	e2 0f       	add	r30, r18
     da6:	f3 1f       	adc	r31, r19
     da8:	81 93       	st	Z+, r24
     daa:	91 93       	st	Z+, r25
     dac:	22 50       	subi	r18, 0x02	; 2
     dae:	31 09       	sbc	r19, r1
     db0:	39 83       	std	Y+1, r19	; 0x01
     db2:	28 83       	st	Y, r18
     db4:	3a c0       	rjmp	.+116    	; 0xe2a <malloc+0x124>
     db6:	20 91 33 01 	lds	r18, 0x0133	; 0x800133 <__brkval>
     dba:	30 91 34 01 	lds	r19, 0x0134	; 0x800134 <__brkval+0x1>
     dbe:	23 2b       	or	r18, r19
     dc0:	41 f4       	brne	.+16     	; 0xdd2 <malloc+0xcc>
     dc2:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     dc6:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     dca:	30 93 34 01 	sts	0x0134, r19	; 0x800134 <__brkval+0x1>
     dce:	20 93 33 01 	sts	0x0133, r18	; 0x800133 <__brkval>
     dd2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     dd6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     dda:	21 15       	cp	r18, r1
     ddc:	31 05       	cpc	r19, r1
     dde:	41 f4       	brne	.+16     	; 0xdf0 <malloc+0xea>
     de0:	2d b7       	in	r18, 0x3d	; 61
     de2:	3e b7       	in	r19, 0x3e	; 62
     de4:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     de8:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     dec:	24 1b       	sub	r18, r20
     dee:	35 0b       	sbc	r19, r21
     df0:	e0 91 33 01 	lds	r30, 0x0133	; 0x800133 <__brkval>
     df4:	f0 91 34 01 	lds	r31, 0x0134	; 0x800134 <__brkval+0x1>
     df8:	e2 17       	cp	r30, r18
     dfa:	f3 07       	cpc	r31, r19
     dfc:	a0 f4       	brcc	.+40     	; 0xe26 <malloc+0x120>
     dfe:	2e 1b       	sub	r18, r30
     e00:	3f 0b       	sbc	r19, r31
     e02:	28 17       	cp	r18, r24
     e04:	39 07       	cpc	r19, r25
     e06:	78 f0       	brcs	.+30     	; 0xe26 <malloc+0x120>
     e08:	ac 01       	movw	r20, r24
     e0a:	4e 5f       	subi	r20, 0xFE	; 254
     e0c:	5f 4f       	sbci	r21, 0xFF	; 255
     e0e:	24 17       	cp	r18, r20
     e10:	35 07       	cpc	r19, r21
     e12:	48 f0       	brcs	.+18     	; 0xe26 <malloc+0x120>
     e14:	4e 0f       	add	r20, r30
     e16:	5f 1f       	adc	r21, r31
     e18:	50 93 34 01 	sts	0x0134, r21	; 0x800134 <__brkval+0x1>
     e1c:	40 93 33 01 	sts	0x0133, r20	; 0x800133 <__brkval>
     e20:	81 93       	st	Z+, r24
     e22:	91 93       	st	Z+, r25
     e24:	02 c0       	rjmp	.+4      	; 0xe2a <malloc+0x124>
     e26:	e0 e0       	ldi	r30, 0x00	; 0
     e28:	f0 e0       	ldi	r31, 0x00	; 0
     e2a:	cf 01       	movw	r24, r30
     e2c:	df 91       	pop	r29
     e2e:	cf 91       	pop	r28
     e30:	1f 91       	pop	r17
     e32:	0f 91       	pop	r16
     e34:	08 95       	ret

00000e36 <free>:
     e36:	cf 93       	push	r28
     e38:	df 93       	push	r29
     e3a:	00 97       	sbiw	r24, 0x00	; 0
     e3c:	09 f4       	brne	.+2      	; 0xe40 <free+0xa>
     e3e:	81 c0       	rjmp	.+258    	; 0xf42 <free+0x10c>
     e40:	fc 01       	movw	r30, r24
     e42:	32 97       	sbiw	r30, 0x02	; 2
     e44:	13 82       	std	Z+3, r1	; 0x03
     e46:	12 82       	std	Z+2, r1	; 0x02
     e48:	a0 91 35 01 	lds	r26, 0x0135	; 0x800135 <__flp>
     e4c:	b0 91 36 01 	lds	r27, 0x0136	; 0x800136 <__flp+0x1>
     e50:	10 97       	sbiw	r26, 0x00	; 0
     e52:	81 f4       	brne	.+32     	; 0xe74 <free+0x3e>
     e54:	20 81       	ld	r18, Z
     e56:	31 81       	ldd	r19, Z+1	; 0x01
     e58:	82 0f       	add	r24, r18
     e5a:	93 1f       	adc	r25, r19
     e5c:	20 91 33 01 	lds	r18, 0x0133	; 0x800133 <__brkval>
     e60:	30 91 34 01 	lds	r19, 0x0134	; 0x800134 <__brkval+0x1>
     e64:	28 17       	cp	r18, r24
     e66:	39 07       	cpc	r19, r25
     e68:	51 f5       	brne	.+84     	; 0xebe <free+0x88>
     e6a:	f0 93 34 01 	sts	0x0134, r31	; 0x800134 <__brkval+0x1>
     e6e:	e0 93 33 01 	sts	0x0133, r30	; 0x800133 <__brkval>
     e72:	67 c0       	rjmp	.+206    	; 0xf42 <free+0x10c>
     e74:	ed 01       	movw	r28, r26
     e76:	20 e0       	ldi	r18, 0x00	; 0
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	ce 17       	cp	r28, r30
     e7c:	df 07       	cpc	r29, r31
     e7e:	40 f4       	brcc	.+16     	; 0xe90 <free+0x5a>
     e80:	4a 81       	ldd	r20, Y+2	; 0x02
     e82:	5b 81       	ldd	r21, Y+3	; 0x03
     e84:	9e 01       	movw	r18, r28
     e86:	41 15       	cp	r20, r1
     e88:	51 05       	cpc	r21, r1
     e8a:	f1 f0       	breq	.+60     	; 0xec8 <free+0x92>
     e8c:	ea 01       	movw	r28, r20
     e8e:	f5 cf       	rjmp	.-22     	; 0xe7a <free+0x44>
     e90:	d3 83       	std	Z+3, r29	; 0x03
     e92:	c2 83       	std	Z+2, r28	; 0x02
     e94:	40 81       	ld	r20, Z
     e96:	51 81       	ldd	r21, Z+1	; 0x01
     e98:	84 0f       	add	r24, r20
     e9a:	95 1f       	adc	r25, r21
     e9c:	c8 17       	cp	r28, r24
     e9e:	d9 07       	cpc	r29, r25
     ea0:	59 f4       	brne	.+22     	; 0xeb8 <free+0x82>
     ea2:	88 81       	ld	r24, Y
     ea4:	99 81       	ldd	r25, Y+1	; 0x01
     ea6:	84 0f       	add	r24, r20
     ea8:	95 1f       	adc	r25, r21
     eaa:	02 96       	adiw	r24, 0x02	; 2
     eac:	91 83       	std	Z+1, r25	; 0x01
     eae:	80 83       	st	Z, r24
     eb0:	8a 81       	ldd	r24, Y+2	; 0x02
     eb2:	9b 81       	ldd	r25, Y+3	; 0x03
     eb4:	93 83       	std	Z+3, r25	; 0x03
     eb6:	82 83       	std	Z+2, r24	; 0x02
     eb8:	21 15       	cp	r18, r1
     eba:	31 05       	cpc	r19, r1
     ebc:	29 f4       	brne	.+10     	; 0xec8 <free+0x92>
     ebe:	f0 93 36 01 	sts	0x0136, r31	; 0x800136 <__flp+0x1>
     ec2:	e0 93 35 01 	sts	0x0135, r30	; 0x800135 <__flp>
     ec6:	3d c0       	rjmp	.+122    	; 0xf42 <free+0x10c>
     ec8:	e9 01       	movw	r28, r18
     eca:	fb 83       	std	Y+3, r31	; 0x03
     ecc:	ea 83       	std	Y+2, r30	; 0x02
     ece:	49 91       	ld	r20, Y+
     ed0:	59 91       	ld	r21, Y+
     ed2:	c4 0f       	add	r28, r20
     ed4:	d5 1f       	adc	r29, r21
     ed6:	ec 17       	cp	r30, r28
     ed8:	fd 07       	cpc	r31, r29
     eda:	61 f4       	brne	.+24     	; 0xef4 <free+0xbe>
     edc:	80 81       	ld	r24, Z
     ede:	91 81       	ldd	r25, Z+1	; 0x01
     ee0:	84 0f       	add	r24, r20
     ee2:	95 1f       	adc	r25, r21
     ee4:	02 96       	adiw	r24, 0x02	; 2
     ee6:	e9 01       	movw	r28, r18
     ee8:	99 83       	std	Y+1, r25	; 0x01
     eea:	88 83       	st	Y, r24
     eec:	82 81       	ldd	r24, Z+2	; 0x02
     eee:	93 81       	ldd	r25, Z+3	; 0x03
     ef0:	9b 83       	std	Y+3, r25	; 0x03
     ef2:	8a 83       	std	Y+2, r24	; 0x02
     ef4:	e0 e0       	ldi	r30, 0x00	; 0
     ef6:	f0 e0       	ldi	r31, 0x00	; 0
     ef8:	12 96       	adiw	r26, 0x02	; 2
     efa:	8d 91       	ld	r24, X+
     efc:	9c 91       	ld	r25, X
     efe:	13 97       	sbiw	r26, 0x03	; 3
     f00:	00 97       	sbiw	r24, 0x00	; 0
     f02:	19 f0       	breq	.+6      	; 0xf0a <free+0xd4>
     f04:	fd 01       	movw	r30, r26
     f06:	dc 01       	movw	r26, r24
     f08:	f7 cf       	rjmp	.-18     	; 0xef8 <free+0xc2>
     f0a:	8d 91       	ld	r24, X+
     f0c:	9c 91       	ld	r25, X
     f0e:	11 97       	sbiw	r26, 0x01	; 1
     f10:	9d 01       	movw	r18, r26
     f12:	2e 5f       	subi	r18, 0xFE	; 254
     f14:	3f 4f       	sbci	r19, 0xFF	; 255
     f16:	82 0f       	add	r24, r18
     f18:	93 1f       	adc	r25, r19
     f1a:	20 91 33 01 	lds	r18, 0x0133	; 0x800133 <__brkval>
     f1e:	30 91 34 01 	lds	r19, 0x0134	; 0x800134 <__brkval+0x1>
     f22:	28 17       	cp	r18, r24
     f24:	39 07       	cpc	r19, r25
     f26:	69 f4       	brne	.+26     	; 0xf42 <free+0x10c>
     f28:	30 97       	sbiw	r30, 0x00	; 0
     f2a:	29 f4       	brne	.+10     	; 0xf36 <free+0x100>
     f2c:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <__flp+0x1>
     f30:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <__flp>
     f34:	02 c0       	rjmp	.+4      	; 0xf3a <free+0x104>
     f36:	13 82       	std	Z+3, r1	; 0x03
     f38:	12 82       	std	Z+2, r1	; 0x02
     f3a:	b0 93 34 01 	sts	0x0134, r27	; 0x800134 <__brkval+0x1>
     f3e:	a0 93 33 01 	sts	0x0133, r26	; 0x800133 <__brkval>
     f42:	df 91       	pop	r29
     f44:	cf 91       	pop	r28
     f46:	08 95       	ret

00000f48 <atoi>:
     f48:	fc 01       	movw	r30, r24
     f4a:	88 27       	eor	r24, r24
     f4c:	99 27       	eor	r25, r25
     f4e:	e8 94       	clt
     f50:	21 91       	ld	r18, Z+
     f52:	20 32       	cpi	r18, 0x20	; 32
     f54:	e9 f3       	breq	.-6      	; 0xf50 <atoi+0x8>
     f56:	29 30       	cpi	r18, 0x09	; 9
     f58:	10 f0       	brcs	.+4      	; 0xf5e <atoi+0x16>
     f5a:	2e 30       	cpi	r18, 0x0E	; 14
     f5c:	c8 f3       	brcs	.-14     	; 0xf50 <atoi+0x8>
     f5e:	2b 32       	cpi	r18, 0x2B	; 43
     f60:	41 f0       	breq	.+16     	; 0xf72 <atoi+0x2a>
     f62:	2d 32       	cpi	r18, 0x2D	; 45
     f64:	39 f4       	brne	.+14     	; 0xf74 <atoi+0x2c>
     f66:	68 94       	set
     f68:	04 c0       	rjmp	.+8      	; 0xf72 <atoi+0x2a>
     f6a:	0e 94 c2 07 	call	0xf84	; 0xf84 <__mulhi_const_10>
     f6e:	82 0f       	add	r24, r18
     f70:	91 1d       	adc	r25, r1
     f72:	21 91       	ld	r18, Z+
     f74:	20 53       	subi	r18, 0x30	; 48
     f76:	2a 30       	cpi	r18, 0x0A	; 10
     f78:	c0 f3       	brcs	.-16     	; 0xf6a <atoi+0x22>
     f7a:	1e f4       	brtc	.+6      	; 0xf82 <atoi+0x3a>
     f7c:	90 95       	com	r25
     f7e:	81 95       	neg	r24
     f80:	9f 4f       	sbci	r25, 0xFF	; 255
     f82:	08 95       	ret

00000f84 <__mulhi_const_10>:
     f84:	7a e0       	ldi	r23, 0x0A	; 10
     f86:	97 9f       	mul	r25, r23
     f88:	90 2d       	mov	r25, r0
     f8a:	87 9f       	mul	r24, r23
     f8c:	80 2d       	mov	r24, r0
     f8e:	91 0d       	add	r25, r1
     f90:	11 24       	eor	r1, r1
     f92:	08 95       	ret

00000f94 <vsprintf>:
     f94:	ae e0       	ldi	r26, 0x0E	; 14
     f96:	b0 e0       	ldi	r27, 0x00	; 0
     f98:	e0 ed       	ldi	r30, 0xD0	; 208
     f9a:	f7 e0       	ldi	r31, 0x07	; 7
     f9c:	0c 94 85 0a 	jmp	0x150a	; 0x150a <__prologue_saves__+0x1c>
     fa0:	8c 01       	movw	r16, r24
     fa2:	86 e0       	ldi	r24, 0x06	; 6
     fa4:	8c 83       	std	Y+4, r24	; 0x04
     fa6:	1a 83       	std	Y+2, r17	; 0x02
     fa8:	09 83       	std	Y+1, r16	; 0x01
     faa:	8f ef       	ldi	r24, 0xFF	; 255
     fac:	9f e7       	ldi	r25, 0x7F	; 127
     fae:	9e 83       	std	Y+6, r25	; 0x06
     fb0:	8d 83       	std	Y+5, r24	; 0x05
     fb2:	ce 01       	movw	r24, r28
     fb4:	01 96       	adiw	r24, 0x01	; 1
     fb6:	0e 94 e6 07 	call	0xfcc	; 0xfcc <vfprintf>
     fba:	ef 81       	ldd	r30, Y+7	; 0x07
     fbc:	f8 85       	ldd	r31, Y+8	; 0x08
     fbe:	e0 0f       	add	r30, r16
     fc0:	f1 1f       	adc	r31, r17
     fc2:	10 82       	st	Z, r1
     fc4:	2e 96       	adiw	r28, 0x0e	; 14
     fc6:	e4 e0       	ldi	r30, 0x04	; 4
     fc8:	0c 94 a1 0a 	jmp	0x1542	; 0x1542 <__epilogue_restores__+0x1c>

00000fcc <vfprintf>:
     fcc:	ab e0       	ldi	r26, 0x0B	; 11
     fce:	b0 e0       	ldi	r27, 0x00	; 0
     fd0:	ec ee       	ldi	r30, 0xEC	; 236
     fd2:	f7 e0       	ldi	r31, 0x07	; 7
     fd4:	0c 94 77 0a 	jmp	0x14ee	; 0x14ee <__prologue_saves__>
     fd8:	6c 01       	movw	r12, r24
     fda:	7b 01       	movw	r14, r22
     fdc:	8a 01       	movw	r16, r20
     fde:	fc 01       	movw	r30, r24
     fe0:	17 82       	std	Z+7, r1	; 0x07
     fe2:	16 82       	std	Z+6, r1	; 0x06
     fe4:	83 81       	ldd	r24, Z+3	; 0x03
     fe6:	81 ff       	sbrs	r24, 1
     fe8:	cc c1       	rjmp	.+920    	; 0x1382 <vfprintf+0x3b6>
     fea:	ce 01       	movw	r24, r28
     fec:	01 96       	adiw	r24, 0x01	; 1
     fee:	3c 01       	movw	r6, r24
     ff0:	f6 01       	movw	r30, r12
     ff2:	93 81       	ldd	r25, Z+3	; 0x03
     ff4:	f7 01       	movw	r30, r14
     ff6:	93 fd       	sbrc	r25, 3
     ff8:	85 91       	lpm	r24, Z+
     ffa:	93 ff       	sbrs	r25, 3
     ffc:	81 91       	ld	r24, Z+
     ffe:	7f 01       	movw	r14, r30
    1000:	88 23       	and	r24, r24
    1002:	09 f4       	brne	.+2      	; 0x1006 <vfprintf+0x3a>
    1004:	ba c1       	rjmp	.+884    	; 0x137a <vfprintf+0x3ae>
    1006:	85 32       	cpi	r24, 0x25	; 37
    1008:	39 f4       	brne	.+14     	; 0x1018 <vfprintf+0x4c>
    100a:	93 fd       	sbrc	r25, 3
    100c:	85 91       	lpm	r24, Z+
    100e:	93 ff       	sbrs	r25, 3
    1010:	81 91       	ld	r24, Z+
    1012:	7f 01       	movw	r14, r30
    1014:	85 32       	cpi	r24, 0x25	; 37
    1016:	29 f4       	brne	.+10     	; 0x1022 <vfprintf+0x56>
    1018:	b6 01       	movw	r22, r12
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	0e 94 dd 09 	call	0x13ba	; 0x13ba <fputc>
    1020:	e7 cf       	rjmp	.-50     	; 0xff0 <vfprintf+0x24>
    1022:	91 2c       	mov	r9, r1
    1024:	21 2c       	mov	r2, r1
    1026:	31 2c       	mov	r3, r1
    1028:	ff e1       	ldi	r31, 0x1F	; 31
    102a:	f3 15       	cp	r31, r3
    102c:	d8 f0       	brcs	.+54     	; 0x1064 <vfprintf+0x98>
    102e:	8b 32       	cpi	r24, 0x2B	; 43
    1030:	79 f0       	breq	.+30     	; 0x1050 <vfprintf+0x84>
    1032:	38 f4       	brcc	.+14     	; 0x1042 <vfprintf+0x76>
    1034:	80 32       	cpi	r24, 0x20	; 32
    1036:	79 f0       	breq	.+30     	; 0x1056 <vfprintf+0x8a>
    1038:	83 32       	cpi	r24, 0x23	; 35
    103a:	a1 f4       	brne	.+40     	; 0x1064 <vfprintf+0x98>
    103c:	23 2d       	mov	r18, r3
    103e:	20 61       	ori	r18, 0x10	; 16
    1040:	1d c0       	rjmp	.+58     	; 0x107c <vfprintf+0xb0>
    1042:	8d 32       	cpi	r24, 0x2D	; 45
    1044:	61 f0       	breq	.+24     	; 0x105e <vfprintf+0x92>
    1046:	80 33       	cpi	r24, 0x30	; 48
    1048:	69 f4       	brne	.+26     	; 0x1064 <vfprintf+0x98>
    104a:	23 2d       	mov	r18, r3
    104c:	21 60       	ori	r18, 0x01	; 1
    104e:	16 c0       	rjmp	.+44     	; 0x107c <vfprintf+0xb0>
    1050:	83 2d       	mov	r24, r3
    1052:	82 60       	ori	r24, 0x02	; 2
    1054:	38 2e       	mov	r3, r24
    1056:	e3 2d       	mov	r30, r3
    1058:	e4 60       	ori	r30, 0x04	; 4
    105a:	3e 2e       	mov	r3, r30
    105c:	2a c0       	rjmp	.+84     	; 0x10b2 <vfprintf+0xe6>
    105e:	f3 2d       	mov	r31, r3
    1060:	f8 60       	ori	r31, 0x08	; 8
    1062:	1d c0       	rjmp	.+58     	; 0x109e <vfprintf+0xd2>
    1064:	37 fc       	sbrc	r3, 7
    1066:	2d c0       	rjmp	.+90     	; 0x10c2 <vfprintf+0xf6>
    1068:	20 ed       	ldi	r18, 0xD0	; 208
    106a:	28 0f       	add	r18, r24
    106c:	2a 30       	cpi	r18, 0x0A	; 10
    106e:	40 f0       	brcs	.+16     	; 0x1080 <vfprintf+0xb4>
    1070:	8e 32       	cpi	r24, 0x2E	; 46
    1072:	b9 f4       	brne	.+46     	; 0x10a2 <vfprintf+0xd6>
    1074:	36 fc       	sbrc	r3, 6
    1076:	81 c1       	rjmp	.+770    	; 0x137a <vfprintf+0x3ae>
    1078:	23 2d       	mov	r18, r3
    107a:	20 64       	ori	r18, 0x40	; 64
    107c:	32 2e       	mov	r3, r18
    107e:	19 c0       	rjmp	.+50     	; 0x10b2 <vfprintf+0xe6>
    1080:	36 fe       	sbrs	r3, 6
    1082:	06 c0       	rjmp	.+12     	; 0x1090 <vfprintf+0xc4>
    1084:	8a e0       	ldi	r24, 0x0A	; 10
    1086:	98 9e       	mul	r9, r24
    1088:	20 0d       	add	r18, r0
    108a:	11 24       	eor	r1, r1
    108c:	92 2e       	mov	r9, r18
    108e:	11 c0       	rjmp	.+34     	; 0x10b2 <vfprintf+0xe6>
    1090:	ea e0       	ldi	r30, 0x0A	; 10
    1092:	2e 9e       	mul	r2, r30
    1094:	20 0d       	add	r18, r0
    1096:	11 24       	eor	r1, r1
    1098:	22 2e       	mov	r2, r18
    109a:	f3 2d       	mov	r31, r3
    109c:	f0 62       	ori	r31, 0x20	; 32
    109e:	3f 2e       	mov	r3, r31
    10a0:	08 c0       	rjmp	.+16     	; 0x10b2 <vfprintf+0xe6>
    10a2:	8c 36       	cpi	r24, 0x6C	; 108
    10a4:	21 f4       	brne	.+8      	; 0x10ae <vfprintf+0xe2>
    10a6:	83 2d       	mov	r24, r3
    10a8:	80 68       	ori	r24, 0x80	; 128
    10aa:	38 2e       	mov	r3, r24
    10ac:	02 c0       	rjmp	.+4      	; 0x10b2 <vfprintf+0xe6>
    10ae:	88 36       	cpi	r24, 0x68	; 104
    10b0:	41 f4       	brne	.+16     	; 0x10c2 <vfprintf+0xf6>
    10b2:	f7 01       	movw	r30, r14
    10b4:	93 fd       	sbrc	r25, 3
    10b6:	85 91       	lpm	r24, Z+
    10b8:	93 ff       	sbrs	r25, 3
    10ba:	81 91       	ld	r24, Z+
    10bc:	7f 01       	movw	r14, r30
    10be:	81 11       	cpse	r24, r1
    10c0:	b3 cf       	rjmp	.-154    	; 0x1028 <vfprintf+0x5c>
    10c2:	98 2f       	mov	r25, r24
    10c4:	9f 7d       	andi	r25, 0xDF	; 223
    10c6:	95 54       	subi	r25, 0x45	; 69
    10c8:	93 30       	cpi	r25, 0x03	; 3
    10ca:	28 f4       	brcc	.+10     	; 0x10d6 <vfprintf+0x10a>
    10cc:	0c 5f       	subi	r16, 0xFC	; 252
    10ce:	1f 4f       	sbci	r17, 0xFF	; 255
    10d0:	9f e3       	ldi	r25, 0x3F	; 63
    10d2:	99 83       	std	Y+1, r25	; 0x01
    10d4:	0d c0       	rjmp	.+26     	; 0x10f0 <vfprintf+0x124>
    10d6:	83 36       	cpi	r24, 0x63	; 99
    10d8:	31 f0       	breq	.+12     	; 0x10e6 <vfprintf+0x11a>
    10da:	83 37       	cpi	r24, 0x73	; 115
    10dc:	71 f0       	breq	.+28     	; 0x10fa <vfprintf+0x12e>
    10de:	83 35       	cpi	r24, 0x53	; 83
    10e0:	09 f0       	breq	.+2      	; 0x10e4 <vfprintf+0x118>
    10e2:	59 c0       	rjmp	.+178    	; 0x1196 <vfprintf+0x1ca>
    10e4:	21 c0       	rjmp	.+66     	; 0x1128 <vfprintf+0x15c>
    10e6:	f8 01       	movw	r30, r16
    10e8:	80 81       	ld	r24, Z
    10ea:	89 83       	std	Y+1, r24	; 0x01
    10ec:	0e 5f       	subi	r16, 0xFE	; 254
    10ee:	1f 4f       	sbci	r17, 0xFF	; 255
    10f0:	88 24       	eor	r8, r8
    10f2:	83 94       	inc	r8
    10f4:	91 2c       	mov	r9, r1
    10f6:	53 01       	movw	r10, r6
    10f8:	13 c0       	rjmp	.+38     	; 0x1120 <vfprintf+0x154>
    10fa:	28 01       	movw	r4, r16
    10fc:	f2 e0       	ldi	r31, 0x02	; 2
    10fe:	4f 0e       	add	r4, r31
    1100:	51 1c       	adc	r5, r1
    1102:	f8 01       	movw	r30, r16
    1104:	a0 80       	ld	r10, Z
    1106:	b1 80       	ldd	r11, Z+1	; 0x01
    1108:	36 fe       	sbrs	r3, 6
    110a:	03 c0       	rjmp	.+6      	; 0x1112 <vfprintf+0x146>
    110c:	69 2d       	mov	r22, r9
    110e:	70 e0       	ldi	r23, 0x00	; 0
    1110:	02 c0       	rjmp	.+4      	; 0x1116 <vfprintf+0x14a>
    1112:	6f ef       	ldi	r22, 0xFF	; 255
    1114:	7f ef       	ldi	r23, 0xFF	; 255
    1116:	c5 01       	movw	r24, r10
    1118:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <strnlen>
    111c:	4c 01       	movw	r8, r24
    111e:	82 01       	movw	r16, r4
    1120:	f3 2d       	mov	r31, r3
    1122:	ff 77       	andi	r31, 0x7F	; 127
    1124:	3f 2e       	mov	r3, r31
    1126:	16 c0       	rjmp	.+44     	; 0x1154 <vfprintf+0x188>
    1128:	28 01       	movw	r4, r16
    112a:	22 e0       	ldi	r18, 0x02	; 2
    112c:	42 0e       	add	r4, r18
    112e:	51 1c       	adc	r5, r1
    1130:	f8 01       	movw	r30, r16
    1132:	a0 80       	ld	r10, Z
    1134:	b1 80       	ldd	r11, Z+1	; 0x01
    1136:	36 fe       	sbrs	r3, 6
    1138:	03 c0       	rjmp	.+6      	; 0x1140 <vfprintf+0x174>
    113a:	69 2d       	mov	r22, r9
    113c:	70 e0       	ldi	r23, 0x00	; 0
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <vfprintf+0x178>
    1140:	6f ef       	ldi	r22, 0xFF	; 255
    1142:	7f ef       	ldi	r23, 0xFF	; 255
    1144:	c5 01       	movw	r24, r10
    1146:	0e 94 c7 09 	call	0x138e	; 0x138e <strnlen_P>
    114a:	4c 01       	movw	r8, r24
    114c:	f3 2d       	mov	r31, r3
    114e:	f0 68       	ori	r31, 0x80	; 128
    1150:	3f 2e       	mov	r3, r31
    1152:	82 01       	movw	r16, r4
    1154:	33 fc       	sbrc	r3, 3
    1156:	1b c0       	rjmp	.+54     	; 0x118e <vfprintf+0x1c2>
    1158:	82 2d       	mov	r24, r2
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	88 16       	cp	r8, r24
    115e:	99 06       	cpc	r9, r25
    1160:	b0 f4       	brcc	.+44     	; 0x118e <vfprintf+0x1c2>
    1162:	b6 01       	movw	r22, r12
    1164:	80 e2       	ldi	r24, 0x20	; 32
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	0e 94 dd 09 	call	0x13ba	; 0x13ba <fputc>
    116c:	2a 94       	dec	r2
    116e:	f4 cf       	rjmp	.-24     	; 0x1158 <vfprintf+0x18c>
    1170:	f5 01       	movw	r30, r10
    1172:	37 fc       	sbrc	r3, 7
    1174:	85 91       	lpm	r24, Z+
    1176:	37 fe       	sbrs	r3, 7
    1178:	81 91       	ld	r24, Z+
    117a:	5f 01       	movw	r10, r30
    117c:	b6 01       	movw	r22, r12
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	0e 94 dd 09 	call	0x13ba	; 0x13ba <fputc>
    1184:	21 10       	cpse	r2, r1
    1186:	2a 94       	dec	r2
    1188:	21 e0       	ldi	r18, 0x01	; 1
    118a:	82 1a       	sub	r8, r18
    118c:	91 08       	sbc	r9, r1
    118e:	81 14       	cp	r8, r1
    1190:	91 04       	cpc	r9, r1
    1192:	71 f7       	brne	.-36     	; 0x1170 <vfprintf+0x1a4>
    1194:	e8 c0       	rjmp	.+464    	; 0x1366 <vfprintf+0x39a>
    1196:	84 36       	cpi	r24, 0x64	; 100
    1198:	11 f0       	breq	.+4      	; 0x119e <vfprintf+0x1d2>
    119a:	89 36       	cpi	r24, 0x69	; 105
    119c:	41 f5       	brne	.+80     	; 0x11ee <vfprintf+0x222>
    119e:	f8 01       	movw	r30, r16
    11a0:	37 fe       	sbrs	r3, 7
    11a2:	07 c0       	rjmp	.+14     	; 0x11b2 <vfprintf+0x1e6>
    11a4:	60 81       	ld	r22, Z
    11a6:	71 81       	ldd	r23, Z+1	; 0x01
    11a8:	82 81       	ldd	r24, Z+2	; 0x02
    11aa:	93 81       	ldd	r25, Z+3	; 0x03
    11ac:	0c 5f       	subi	r16, 0xFC	; 252
    11ae:	1f 4f       	sbci	r17, 0xFF	; 255
    11b0:	08 c0       	rjmp	.+16     	; 0x11c2 <vfprintf+0x1f6>
    11b2:	60 81       	ld	r22, Z
    11b4:	71 81       	ldd	r23, Z+1	; 0x01
    11b6:	07 2e       	mov	r0, r23
    11b8:	00 0c       	add	r0, r0
    11ba:	88 0b       	sbc	r24, r24
    11bc:	99 0b       	sbc	r25, r25
    11be:	0e 5f       	subi	r16, 0xFE	; 254
    11c0:	1f 4f       	sbci	r17, 0xFF	; 255
    11c2:	f3 2d       	mov	r31, r3
    11c4:	ff 76       	andi	r31, 0x6F	; 111
    11c6:	3f 2e       	mov	r3, r31
    11c8:	97 ff       	sbrs	r25, 7
    11ca:	09 c0       	rjmp	.+18     	; 0x11de <vfprintf+0x212>
    11cc:	90 95       	com	r25
    11ce:	80 95       	com	r24
    11d0:	70 95       	com	r23
    11d2:	61 95       	neg	r22
    11d4:	7f 4f       	sbci	r23, 0xFF	; 255
    11d6:	8f 4f       	sbci	r24, 0xFF	; 255
    11d8:	9f 4f       	sbci	r25, 0xFF	; 255
    11da:	f0 68       	ori	r31, 0x80	; 128
    11dc:	3f 2e       	mov	r3, r31
    11de:	2a e0       	ldi	r18, 0x0A	; 10
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	a3 01       	movw	r20, r6
    11e4:	0e 94 19 0a 	call	0x1432	; 0x1432 <__ultoa_invert>
    11e8:	88 2e       	mov	r8, r24
    11ea:	86 18       	sub	r8, r6
    11ec:	45 c0       	rjmp	.+138    	; 0x1278 <vfprintf+0x2ac>
    11ee:	85 37       	cpi	r24, 0x75	; 117
    11f0:	31 f4       	brne	.+12     	; 0x11fe <vfprintf+0x232>
    11f2:	23 2d       	mov	r18, r3
    11f4:	2f 7e       	andi	r18, 0xEF	; 239
    11f6:	b2 2e       	mov	r11, r18
    11f8:	2a e0       	ldi	r18, 0x0A	; 10
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	25 c0       	rjmp	.+74     	; 0x1248 <vfprintf+0x27c>
    11fe:	93 2d       	mov	r25, r3
    1200:	99 7f       	andi	r25, 0xF9	; 249
    1202:	b9 2e       	mov	r11, r25
    1204:	8f 36       	cpi	r24, 0x6F	; 111
    1206:	c1 f0       	breq	.+48     	; 0x1238 <vfprintf+0x26c>
    1208:	18 f4       	brcc	.+6      	; 0x1210 <vfprintf+0x244>
    120a:	88 35       	cpi	r24, 0x58	; 88
    120c:	79 f0       	breq	.+30     	; 0x122c <vfprintf+0x260>
    120e:	b5 c0       	rjmp	.+362    	; 0x137a <vfprintf+0x3ae>
    1210:	80 37       	cpi	r24, 0x70	; 112
    1212:	19 f0       	breq	.+6      	; 0x121a <vfprintf+0x24e>
    1214:	88 37       	cpi	r24, 0x78	; 120
    1216:	21 f0       	breq	.+8      	; 0x1220 <vfprintf+0x254>
    1218:	b0 c0       	rjmp	.+352    	; 0x137a <vfprintf+0x3ae>
    121a:	e9 2f       	mov	r30, r25
    121c:	e0 61       	ori	r30, 0x10	; 16
    121e:	be 2e       	mov	r11, r30
    1220:	b4 fe       	sbrs	r11, 4
    1222:	0d c0       	rjmp	.+26     	; 0x123e <vfprintf+0x272>
    1224:	fb 2d       	mov	r31, r11
    1226:	f4 60       	ori	r31, 0x04	; 4
    1228:	bf 2e       	mov	r11, r31
    122a:	09 c0       	rjmp	.+18     	; 0x123e <vfprintf+0x272>
    122c:	34 fe       	sbrs	r3, 4
    122e:	0a c0       	rjmp	.+20     	; 0x1244 <vfprintf+0x278>
    1230:	29 2f       	mov	r18, r25
    1232:	26 60       	ori	r18, 0x06	; 6
    1234:	b2 2e       	mov	r11, r18
    1236:	06 c0       	rjmp	.+12     	; 0x1244 <vfprintf+0x278>
    1238:	28 e0       	ldi	r18, 0x08	; 8
    123a:	30 e0       	ldi	r19, 0x00	; 0
    123c:	05 c0       	rjmp	.+10     	; 0x1248 <vfprintf+0x27c>
    123e:	20 e1       	ldi	r18, 0x10	; 16
    1240:	30 e0       	ldi	r19, 0x00	; 0
    1242:	02 c0       	rjmp	.+4      	; 0x1248 <vfprintf+0x27c>
    1244:	20 e1       	ldi	r18, 0x10	; 16
    1246:	32 e0       	ldi	r19, 0x02	; 2
    1248:	f8 01       	movw	r30, r16
    124a:	b7 fe       	sbrs	r11, 7
    124c:	07 c0       	rjmp	.+14     	; 0x125c <vfprintf+0x290>
    124e:	60 81       	ld	r22, Z
    1250:	71 81       	ldd	r23, Z+1	; 0x01
    1252:	82 81       	ldd	r24, Z+2	; 0x02
    1254:	93 81       	ldd	r25, Z+3	; 0x03
    1256:	0c 5f       	subi	r16, 0xFC	; 252
    1258:	1f 4f       	sbci	r17, 0xFF	; 255
    125a:	06 c0       	rjmp	.+12     	; 0x1268 <vfprintf+0x29c>
    125c:	60 81       	ld	r22, Z
    125e:	71 81       	ldd	r23, Z+1	; 0x01
    1260:	80 e0       	ldi	r24, 0x00	; 0
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	0e 5f       	subi	r16, 0xFE	; 254
    1266:	1f 4f       	sbci	r17, 0xFF	; 255
    1268:	a3 01       	movw	r20, r6
    126a:	0e 94 19 0a 	call	0x1432	; 0x1432 <__ultoa_invert>
    126e:	88 2e       	mov	r8, r24
    1270:	86 18       	sub	r8, r6
    1272:	fb 2d       	mov	r31, r11
    1274:	ff 77       	andi	r31, 0x7F	; 127
    1276:	3f 2e       	mov	r3, r31
    1278:	36 fe       	sbrs	r3, 6
    127a:	0d c0       	rjmp	.+26     	; 0x1296 <vfprintf+0x2ca>
    127c:	23 2d       	mov	r18, r3
    127e:	2e 7f       	andi	r18, 0xFE	; 254
    1280:	a2 2e       	mov	r10, r18
    1282:	89 14       	cp	r8, r9
    1284:	58 f4       	brcc	.+22     	; 0x129c <vfprintf+0x2d0>
    1286:	34 fe       	sbrs	r3, 4
    1288:	0b c0       	rjmp	.+22     	; 0x12a0 <vfprintf+0x2d4>
    128a:	32 fc       	sbrc	r3, 2
    128c:	09 c0       	rjmp	.+18     	; 0x12a0 <vfprintf+0x2d4>
    128e:	83 2d       	mov	r24, r3
    1290:	8e 7e       	andi	r24, 0xEE	; 238
    1292:	a8 2e       	mov	r10, r24
    1294:	05 c0       	rjmp	.+10     	; 0x12a0 <vfprintf+0x2d4>
    1296:	b8 2c       	mov	r11, r8
    1298:	a3 2c       	mov	r10, r3
    129a:	03 c0       	rjmp	.+6      	; 0x12a2 <vfprintf+0x2d6>
    129c:	b8 2c       	mov	r11, r8
    129e:	01 c0       	rjmp	.+2      	; 0x12a2 <vfprintf+0x2d6>
    12a0:	b9 2c       	mov	r11, r9
    12a2:	a4 fe       	sbrs	r10, 4
    12a4:	0f c0       	rjmp	.+30     	; 0x12c4 <vfprintf+0x2f8>
    12a6:	fe 01       	movw	r30, r28
    12a8:	e8 0d       	add	r30, r8
    12aa:	f1 1d       	adc	r31, r1
    12ac:	80 81       	ld	r24, Z
    12ae:	80 33       	cpi	r24, 0x30	; 48
    12b0:	21 f4       	brne	.+8      	; 0x12ba <vfprintf+0x2ee>
    12b2:	9a 2d       	mov	r25, r10
    12b4:	99 7e       	andi	r25, 0xE9	; 233
    12b6:	a9 2e       	mov	r10, r25
    12b8:	09 c0       	rjmp	.+18     	; 0x12cc <vfprintf+0x300>
    12ba:	a2 fe       	sbrs	r10, 2
    12bc:	06 c0       	rjmp	.+12     	; 0x12ca <vfprintf+0x2fe>
    12be:	b3 94       	inc	r11
    12c0:	b3 94       	inc	r11
    12c2:	04 c0       	rjmp	.+8      	; 0x12cc <vfprintf+0x300>
    12c4:	8a 2d       	mov	r24, r10
    12c6:	86 78       	andi	r24, 0x86	; 134
    12c8:	09 f0       	breq	.+2      	; 0x12cc <vfprintf+0x300>
    12ca:	b3 94       	inc	r11
    12cc:	a3 fc       	sbrc	r10, 3
    12ce:	11 c0       	rjmp	.+34     	; 0x12f2 <vfprintf+0x326>
    12d0:	a0 fe       	sbrs	r10, 0
    12d2:	06 c0       	rjmp	.+12     	; 0x12e0 <vfprintf+0x314>
    12d4:	b2 14       	cp	r11, r2
    12d6:	88 f4       	brcc	.+34     	; 0x12fa <vfprintf+0x32e>
    12d8:	28 0c       	add	r2, r8
    12da:	92 2c       	mov	r9, r2
    12dc:	9b 18       	sub	r9, r11
    12de:	0e c0       	rjmp	.+28     	; 0x12fc <vfprintf+0x330>
    12e0:	b2 14       	cp	r11, r2
    12e2:	60 f4       	brcc	.+24     	; 0x12fc <vfprintf+0x330>
    12e4:	b6 01       	movw	r22, r12
    12e6:	80 e2       	ldi	r24, 0x20	; 32
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	0e 94 dd 09 	call	0x13ba	; 0x13ba <fputc>
    12ee:	b3 94       	inc	r11
    12f0:	f7 cf       	rjmp	.-18     	; 0x12e0 <vfprintf+0x314>
    12f2:	b2 14       	cp	r11, r2
    12f4:	18 f4       	brcc	.+6      	; 0x12fc <vfprintf+0x330>
    12f6:	2b 18       	sub	r2, r11
    12f8:	02 c0       	rjmp	.+4      	; 0x12fe <vfprintf+0x332>
    12fa:	98 2c       	mov	r9, r8
    12fc:	21 2c       	mov	r2, r1
    12fe:	a4 fe       	sbrs	r10, 4
    1300:	10 c0       	rjmp	.+32     	; 0x1322 <vfprintf+0x356>
    1302:	b6 01       	movw	r22, r12
    1304:	80 e3       	ldi	r24, 0x30	; 48
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	0e 94 dd 09 	call	0x13ba	; 0x13ba <fputc>
    130c:	a2 fe       	sbrs	r10, 2
    130e:	17 c0       	rjmp	.+46     	; 0x133e <vfprintf+0x372>
    1310:	a1 fc       	sbrc	r10, 1
    1312:	03 c0       	rjmp	.+6      	; 0x131a <vfprintf+0x34e>
    1314:	88 e7       	ldi	r24, 0x78	; 120
    1316:	90 e0       	ldi	r25, 0x00	; 0
    1318:	02 c0       	rjmp	.+4      	; 0x131e <vfprintf+0x352>
    131a:	88 e5       	ldi	r24, 0x58	; 88
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	b6 01       	movw	r22, r12
    1320:	0c c0       	rjmp	.+24     	; 0x133a <vfprintf+0x36e>
    1322:	8a 2d       	mov	r24, r10
    1324:	86 78       	andi	r24, 0x86	; 134
    1326:	59 f0       	breq	.+22     	; 0x133e <vfprintf+0x372>
    1328:	a1 fe       	sbrs	r10, 1
    132a:	02 c0       	rjmp	.+4      	; 0x1330 <vfprintf+0x364>
    132c:	8b e2       	ldi	r24, 0x2B	; 43
    132e:	01 c0       	rjmp	.+2      	; 0x1332 <vfprintf+0x366>
    1330:	80 e2       	ldi	r24, 0x20	; 32
    1332:	a7 fc       	sbrc	r10, 7
    1334:	8d e2       	ldi	r24, 0x2D	; 45
    1336:	b6 01       	movw	r22, r12
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	0e 94 dd 09 	call	0x13ba	; 0x13ba <fputc>
    133e:	89 14       	cp	r8, r9
    1340:	38 f4       	brcc	.+14     	; 0x1350 <vfprintf+0x384>
    1342:	b6 01       	movw	r22, r12
    1344:	80 e3       	ldi	r24, 0x30	; 48
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	0e 94 dd 09 	call	0x13ba	; 0x13ba <fputc>
    134c:	9a 94       	dec	r9
    134e:	f7 cf       	rjmp	.-18     	; 0x133e <vfprintf+0x372>
    1350:	8a 94       	dec	r8
    1352:	f3 01       	movw	r30, r6
    1354:	e8 0d       	add	r30, r8
    1356:	f1 1d       	adc	r31, r1
    1358:	80 81       	ld	r24, Z
    135a:	b6 01       	movw	r22, r12
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	0e 94 dd 09 	call	0x13ba	; 0x13ba <fputc>
    1362:	81 10       	cpse	r8, r1
    1364:	f5 cf       	rjmp	.-22     	; 0x1350 <vfprintf+0x384>
    1366:	22 20       	and	r2, r2
    1368:	09 f4       	brne	.+2      	; 0x136c <vfprintf+0x3a0>
    136a:	42 ce       	rjmp	.-892    	; 0xff0 <vfprintf+0x24>
    136c:	b6 01       	movw	r22, r12
    136e:	80 e2       	ldi	r24, 0x20	; 32
    1370:	90 e0       	ldi	r25, 0x00	; 0
    1372:	0e 94 dd 09 	call	0x13ba	; 0x13ba <fputc>
    1376:	2a 94       	dec	r2
    1378:	f6 cf       	rjmp	.-20     	; 0x1366 <vfprintf+0x39a>
    137a:	f6 01       	movw	r30, r12
    137c:	86 81       	ldd	r24, Z+6	; 0x06
    137e:	97 81       	ldd	r25, Z+7	; 0x07
    1380:	02 c0       	rjmp	.+4      	; 0x1386 <vfprintf+0x3ba>
    1382:	8f ef       	ldi	r24, 0xFF	; 255
    1384:	9f ef       	ldi	r25, 0xFF	; 255
    1386:	2b 96       	adiw	r28, 0x0b	; 11
    1388:	e2 e1       	ldi	r30, 0x12	; 18
    138a:	0c 94 93 0a 	jmp	0x1526	; 0x1526 <__epilogue_restores__>

0000138e <strnlen_P>:
    138e:	fc 01       	movw	r30, r24
    1390:	05 90       	lpm	r0, Z+
    1392:	61 50       	subi	r22, 0x01	; 1
    1394:	70 40       	sbci	r23, 0x00	; 0
    1396:	01 10       	cpse	r0, r1
    1398:	d8 f7       	brcc	.-10     	; 0x1390 <strnlen_P+0x2>
    139a:	80 95       	com	r24
    139c:	90 95       	com	r25
    139e:	8e 0f       	add	r24, r30
    13a0:	9f 1f       	adc	r25, r31
    13a2:	08 95       	ret

000013a4 <strnlen>:
    13a4:	fc 01       	movw	r30, r24
    13a6:	61 50       	subi	r22, 0x01	; 1
    13a8:	70 40       	sbci	r23, 0x00	; 0
    13aa:	01 90       	ld	r0, Z+
    13ac:	01 10       	cpse	r0, r1
    13ae:	d8 f7       	brcc	.-10     	; 0x13a6 <strnlen+0x2>
    13b0:	80 95       	com	r24
    13b2:	90 95       	com	r25
    13b4:	8e 0f       	add	r24, r30
    13b6:	9f 1f       	adc	r25, r31
    13b8:	08 95       	ret

000013ba <fputc>:
    13ba:	0f 93       	push	r16
    13bc:	1f 93       	push	r17
    13be:	cf 93       	push	r28
    13c0:	df 93       	push	r29
    13c2:	fb 01       	movw	r30, r22
    13c4:	23 81       	ldd	r18, Z+3	; 0x03
    13c6:	21 fd       	sbrc	r18, 1
    13c8:	03 c0       	rjmp	.+6      	; 0x13d0 <fputc+0x16>
    13ca:	8f ef       	ldi	r24, 0xFF	; 255
    13cc:	9f ef       	ldi	r25, 0xFF	; 255
    13ce:	2c c0       	rjmp	.+88     	; 0x1428 <fputc+0x6e>
    13d0:	22 ff       	sbrs	r18, 2
    13d2:	16 c0       	rjmp	.+44     	; 0x1400 <fputc+0x46>
    13d4:	46 81       	ldd	r20, Z+6	; 0x06
    13d6:	57 81       	ldd	r21, Z+7	; 0x07
    13d8:	24 81       	ldd	r18, Z+4	; 0x04
    13da:	35 81       	ldd	r19, Z+5	; 0x05
    13dc:	42 17       	cp	r20, r18
    13de:	53 07       	cpc	r21, r19
    13e0:	44 f4       	brge	.+16     	; 0x13f2 <fputc+0x38>
    13e2:	a0 81       	ld	r26, Z
    13e4:	b1 81       	ldd	r27, Z+1	; 0x01
    13e6:	9d 01       	movw	r18, r26
    13e8:	2f 5f       	subi	r18, 0xFF	; 255
    13ea:	3f 4f       	sbci	r19, 0xFF	; 255
    13ec:	31 83       	std	Z+1, r19	; 0x01
    13ee:	20 83       	st	Z, r18
    13f0:	8c 93       	st	X, r24
    13f2:	26 81       	ldd	r18, Z+6	; 0x06
    13f4:	37 81       	ldd	r19, Z+7	; 0x07
    13f6:	2f 5f       	subi	r18, 0xFF	; 255
    13f8:	3f 4f       	sbci	r19, 0xFF	; 255
    13fa:	37 83       	std	Z+7, r19	; 0x07
    13fc:	26 83       	std	Z+6, r18	; 0x06
    13fe:	14 c0       	rjmp	.+40     	; 0x1428 <fputc+0x6e>
    1400:	8b 01       	movw	r16, r22
    1402:	ec 01       	movw	r28, r24
    1404:	fb 01       	movw	r30, r22
    1406:	00 84       	ldd	r0, Z+8	; 0x08
    1408:	f1 85       	ldd	r31, Z+9	; 0x09
    140a:	e0 2d       	mov	r30, r0
    140c:	09 95       	icall
    140e:	89 2b       	or	r24, r25
    1410:	e1 f6       	brne	.-72     	; 0x13ca <fputc+0x10>
    1412:	d8 01       	movw	r26, r16
    1414:	16 96       	adiw	r26, 0x06	; 6
    1416:	8d 91       	ld	r24, X+
    1418:	9c 91       	ld	r25, X
    141a:	17 97       	sbiw	r26, 0x07	; 7
    141c:	01 96       	adiw	r24, 0x01	; 1
    141e:	17 96       	adiw	r26, 0x07	; 7
    1420:	9c 93       	st	X, r25
    1422:	8e 93       	st	-X, r24
    1424:	16 97       	sbiw	r26, 0x06	; 6
    1426:	ce 01       	movw	r24, r28
    1428:	df 91       	pop	r29
    142a:	cf 91       	pop	r28
    142c:	1f 91       	pop	r17
    142e:	0f 91       	pop	r16
    1430:	08 95       	ret

00001432 <__ultoa_invert>:
    1432:	fa 01       	movw	r30, r20
    1434:	aa 27       	eor	r26, r26
    1436:	28 30       	cpi	r18, 0x08	; 8
    1438:	51 f1       	breq	.+84     	; 0x148e <__ultoa_invert+0x5c>
    143a:	20 31       	cpi	r18, 0x10	; 16
    143c:	81 f1       	breq	.+96     	; 0x149e <__ultoa_invert+0x6c>
    143e:	e8 94       	clt
    1440:	6f 93       	push	r22
    1442:	6e 7f       	andi	r22, 0xFE	; 254
    1444:	6e 5f       	subi	r22, 0xFE	; 254
    1446:	7f 4f       	sbci	r23, 0xFF	; 255
    1448:	8f 4f       	sbci	r24, 0xFF	; 255
    144a:	9f 4f       	sbci	r25, 0xFF	; 255
    144c:	af 4f       	sbci	r26, 0xFF	; 255
    144e:	b1 e0       	ldi	r27, 0x01	; 1
    1450:	3e d0       	rcall	.+124    	; 0x14ce <__ultoa_invert+0x9c>
    1452:	b4 e0       	ldi	r27, 0x04	; 4
    1454:	3c d0       	rcall	.+120    	; 0x14ce <__ultoa_invert+0x9c>
    1456:	67 0f       	add	r22, r23
    1458:	78 1f       	adc	r23, r24
    145a:	89 1f       	adc	r24, r25
    145c:	9a 1f       	adc	r25, r26
    145e:	a1 1d       	adc	r26, r1
    1460:	68 0f       	add	r22, r24
    1462:	79 1f       	adc	r23, r25
    1464:	8a 1f       	adc	r24, r26
    1466:	91 1d       	adc	r25, r1
    1468:	a1 1d       	adc	r26, r1
    146a:	6a 0f       	add	r22, r26
    146c:	71 1d       	adc	r23, r1
    146e:	81 1d       	adc	r24, r1
    1470:	91 1d       	adc	r25, r1
    1472:	a1 1d       	adc	r26, r1
    1474:	20 d0       	rcall	.+64     	; 0x14b6 <__ultoa_invert+0x84>
    1476:	09 f4       	brne	.+2      	; 0x147a <__ultoa_invert+0x48>
    1478:	68 94       	set
    147a:	3f 91       	pop	r19
    147c:	2a e0       	ldi	r18, 0x0A	; 10
    147e:	26 9f       	mul	r18, r22
    1480:	11 24       	eor	r1, r1
    1482:	30 19       	sub	r19, r0
    1484:	30 5d       	subi	r19, 0xD0	; 208
    1486:	31 93       	st	Z+, r19
    1488:	de f6       	brtc	.-74     	; 0x1440 <__ultoa_invert+0xe>
    148a:	cf 01       	movw	r24, r30
    148c:	08 95       	ret
    148e:	46 2f       	mov	r20, r22
    1490:	47 70       	andi	r20, 0x07	; 7
    1492:	40 5d       	subi	r20, 0xD0	; 208
    1494:	41 93       	st	Z+, r20
    1496:	b3 e0       	ldi	r27, 0x03	; 3
    1498:	0f d0       	rcall	.+30     	; 0x14b8 <__ultoa_invert+0x86>
    149a:	c9 f7       	brne	.-14     	; 0x148e <__ultoa_invert+0x5c>
    149c:	f6 cf       	rjmp	.-20     	; 0x148a <__ultoa_invert+0x58>
    149e:	46 2f       	mov	r20, r22
    14a0:	4f 70       	andi	r20, 0x0F	; 15
    14a2:	40 5d       	subi	r20, 0xD0	; 208
    14a4:	4a 33       	cpi	r20, 0x3A	; 58
    14a6:	18 f0       	brcs	.+6      	; 0x14ae <__ultoa_invert+0x7c>
    14a8:	49 5d       	subi	r20, 0xD9	; 217
    14aa:	31 fd       	sbrc	r19, 1
    14ac:	40 52       	subi	r20, 0x20	; 32
    14ae:	41 93       	st	Z+, r20
    14b0:	02 d0       	rcall	.+4      	; 0x14b6 <__ultoa_invert+0x84>
    14b2:	a9 f7       	brne	.-22     	; 0x149e <__ultoa_invert+0x6c>
    14b4:	ea cf       	rjmp	.-44     	; 0x148a <__ultoa_invert+0x58>
    14b6:	b4 e0       	ldi	r27, 0x04	; 4
    14b8:	a6 95       	lsr	r26
    14ba:	97 95       	ror	r25
    14bc:	87 95       	ror	r24
    14be:	77 95       	ror	r23
    14c0:	67 95       	ror	r22
    14c2:	ba 95       	dec	r27
    14c4:	c9 f7       	brne	.-14     	; 0x14b8 <__ultoa_invert+0x86>
    14c6:	00 97       	sbiw	r24, 0x00	; 0
    14c8:	61 05       	cpc	r22, r1
    14ca:	71 05       	cpc	r23, r1
    14cc:	08 95       	ret
    14ce:	9b 01       	movw	r18, r22
    14d0:	ac 01       	movw	r20, r24
    14d2:	0a 2e       	mov	r0, r26
    14d4:	06 94       	lsr	r0
    14d6:	57 95       	ror	r21
    14d8:	47 95       	ror	r20
    14da:	37 95       	ror	r19
    14dc:	27 95       	ror	r18
    14de:	ba 95       	dec	r27
    14e0:	c9 f7       	brne	.-14     	; 0x14d4 <__ultoa_invert+0xa2>
    14e2:	62 0f       	add	r22, r18
    14e4:	73 1f       	adc	r23, r19
    14e6:	84 1f       	adc	r24, r20
    14e8:	95 1f       	adc	r25, r21
    14ea:	a0 1d       	adc	r26, r0
    14ec:	08 95       	ret

000014ee <__prologue_saves__>:
    14ee:	2f 92       	push	r2
    14f0:	3f 92       	push	r3
    14f2:	4f 92       	push	r4
    14f4:	5f 92       	push	r5
    14f6:	6f 92       	push	r6
    14f8:	7f 92       	push	r7
    14fa:	8f 92       	push	r8
    14fc:	9f 92       	push	r9
    14fe:	af 92       	push	r10
    1500:	bf 92       	push	r11
    1502:	cf 92       	push	r12
    1504:	df 92       	push	r13
    1506:	ef 92       	push	r14
    1508:	ff 92       	push	r15
    150a:	0f 93       	push	r16
    150c:	1f 93       	push	r17
    150e:	cf 93       	push	r28
    1510:	df 93       	push	r29
    1512:	cd b7       	in	r28, 0x3d	; 61
    1514:	de b7       	in	r29, 0x3e	; 62
    1516:	ca 1b       	sub	r28, r26
    1518:	db 0b       	sbc	r29, r27
    151a:	0f b6       	in	r0, 0x3f	; 63
    151c:	f8 94       	cli
    151e:	de bf       	out	0x3e, r29	; 62
    1520:	0f be       	out	0x3f, r0	; 63
    1522:	cd bf       	out	0x3d, r28	; 61
    1524:	09 94       	ijmp

00001526 <__epilogue_restores__>:
    1526:	2a 88       	ldd	r2, Y+18	; 0x12
    1528:	39 88       	ldd	r3, Y+17	; 0x11
    152a:	48 88       	ldd	r4, Y+16	; 0x10
    152c:	5f 84       	ldd	r5, Y+15	; 0x0f
    152e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1530:	7d 84       	ldd	r7, Y+13	; 0x0d
    1532:	8c 84       	ldd	r8, Y+12	; 0x0c
    1534:	9b 84       	ldd	r9, Y+11	; 0x0b
    1536:	aa 84       	ldd	r10, Y+10	; 0x0a
    1538:	b9 84       	ldd	r11, Y+9	; 0x09
    153a:	c8 84       	ldd	r12, Y+8	; 0x08
    153c:	df 80       	ldd	r13, Y+7	; 0x07
    153e:	ee 80       	ldd	r14, Y+6	; 0x06
    1540:	fd 80       	ldd	r15, Y+5	; 0x05
    1542:	0c 81       	ldd	r16, Y+4	; 0x04
    1544:	1b 81       	ldd	r17, Y+3	; 0x03
    1546:	aa 81       	ldd	r26, Y+2	; 0x02
    1548:	b9 81       	ldd	r27, Y+1	; 0x01
    154a:	ce 0f       	add	r28, r30
    154c:	d1 1d       	adc	r29, r1
    154e:	0f b6       	in	r0, 0x3f	; 63
    1550:	f8 94       	cli
    1552:	de bf       	out	0x3e, r29	; 62
    1554:	0f be       	out	0x3f, r0	; 63
    1556:	cd bf       	out	0x3d, r28	; 61
    1558:	ed 01       	movw	r28, r26
    155a:	08 95       	ret

0000155c <_exit>:
    155c:	f8 94       	cli

0000155e <__stop_program>:
    155e:	ff cf       	rjmp	.-2      	; 0x155e <__stop_program>
