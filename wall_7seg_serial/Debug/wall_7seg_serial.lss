
wall_7seg_serial.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000086  00800100  000011d4  00001268  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800186  00800186  000012ee  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012ee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000134c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  0000138c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001410  00000000  00000000  0000144c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000beb  00000000  00000000  0000285c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000755  00000000  00000000  00003447  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c0  00000000  00000000  00003b9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000815  00000000  00000000  00003e5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000915  00000000  00000000  00004671  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00004f86  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__vector_9>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 5d 00 	jmp	0xba	; 0xba <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 ed       	ldi	r30, 0xD4	; 212
      7c:	f1 e1       	ldi	r31, 0x11	; 17
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a6 38       	cpi	r26, 0x86	; 134
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	a6 e8       	ldi	r26, 0x86	; 134
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ab 38       	cpi	r26, 0x8B	; 139
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 8b 01 	call	0x316	; 0x316 <main>
      9e:	0c 94 e8 08 	jmp	0x11d0	; 0x11d0 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_2>:
/**********************************************************************************************/
/*                                      INT 0 Interrupts                                      */
/**********************************************************************************************/

ISR(INT1_vect)
{
      a6:	1f 92       	push	r1
      a8:	0f 92       	push	r0
      aa:	0f b6       	in	r0, 0x3f	; 63
      ac:	0f 92       	push	r0
      ae:	11 24       	eor	r1, r1
	//Serial::send("INT1\n");
	
	//Serial::send("/INT1\n");
}
      b0:	0f 90       	pop	r0
      b2:	0f be       	out	0x3f, r0	; 63
      b4:	0f 90       	pop	r0
      b6:	1f 90       	pop	r1
      b8:	18 95       	reti

000000ba <__vector_14>:
/**********************************************************************************************/
/*                                     Timer 0 Interrupts                                     */
/**********************************************************************************************/

ISR(TIMER0_COMPA_vect)
{
      ba:	1f 92       	push	r1
      bc:	0f 92       	push	r0
      be:	0f b6       	in	r0, 0x3f	; 63
      c0:	0f 92       	push	r0
      c2:	11 24       	eor	r1, r1
	//Serial::send("TIMER0_COMPA_vect\n");
	
	PORTD |=  (1 << PORTD2);
      c4:	5a 9a       	sbi	0x0b, 2	; 11
	PORTD &= ~(1 << PORTD2);
      c6:	5a 98       	cbi	0x0b, 2	; 11
	
	//Serial::send("/TIMER0_COMPA_vect\n");
	
}
      c8:	0f 90       	pop	r0
      ca:	0f be       	out	0x3f, r0	; 63
      cc:	0f 90       	pop	r0
      ce:	1f 90       	pop	r1
      d0:	18 95       	reti

000000d2 <__vector_11>:
/**********************************************************************************************/
/*                                     Timer 1 Interrupts                                     */
/**********************************************************************************************/

ISR(TIMER1_COMPA_vect)
{
      d2:	1f 92       	push	r1
      d4:	0f 92       	push	r0
      d6:	0f b6       	in	r0, 0x3f	; 63
      d8:	0f 92       	push	r0
      da:	11 24       	eor	r1, r1
      dc:	2f 93       	push	r18
      de:	3f 93       	push	r19
      e0:	4f 93       	push	r20
      e2:	5f 93       	push	r21
      e4:	6f 93       	push	r22
      e6:	7f 93       	push	r23
      e8:	8f 93       	push	r24
      ea:	9f 93       	push	r25
      ec:	af 93       	push	r26
      ee:	bf 93       	push	r27
      f0:	ef 93       	push	r30
      f2:	ff 93       	push	r31
	//Serial::send('a');
	auto const num = digit;
      f4:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <digit>
      f8:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <digit+0x1>
	Serial::sendf("%d\n",((uint16_t)(num*1000)));
      fc:	28 ee       	ldi	r18, 0xE8	; 232
      fe:	33 e0       	ldi	r19, 0x03	; 3
     100:	42 9f       	mul	r20, r18
     102:	c0 01       	movw	r24, r0
     104:	43 9f       	mul	r20, r19
     106:	90 0d       	add	r25, r0
     108:	52 9f       	mul	r21, r18
     10a:	90 0d       	add	r25, r0
     10c:	11 24       	eor	r1, r1
     10e:	9f 93       	push	r25
     110:	8f 93       	push	r24
     112:	88 e0       	ldi	r24, 0x08	; 8
     114:	91 e0       	ldi	r25, 0x01	; 1
     116:	9f 93       	push	r25
     118:	8f 93       	push	r24
     11a:	0e 94 88 02 	call	0x510	; 0x510 <_ZN6Serial5sendfEPKcz>
	digit += .001;
     11e:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <digit>
     122:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <digit+0x1>
     126:	07 2e       	mov	r0, r23
     128:	00 0c       	add	r0, r0
     12a:	88 0b       	sbc	r24, r24
     12c:	99 0b       	sbc	r25, r25
     12e:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__floatsisf>
     132:	2f e6       	ldi	r18, 0x6F	; 111
     134:	32 e1       	ldi	r19, 0x12	; 18
     136:	43 e8       	ldi	r20, 0x83	; 131
     138:	5a e3       	ldi	r21, 0x3A	; 58
     13a:	0e 94 ce 02 	call	0x59c	; 0x59c <__addsf3>
     13e:	0e 94 3a 03 	call	0x674	; 0x674 <__fixsfsi>
     142:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <digit+0x1>
     146:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <digit>
	if(digit == 10000) digit = -999;
     14a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <digit>
     14e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <digit+0x1>
     152:	0f 90       	pop	r0
     154:	0f 90       	pop	r0
     156:	0f 90       	pop	r0
     158:	0f 90       	pop	r0
     15a:	80 31       	cpi	r24, 0x10	; 16
     15c:	97 42       	sbci	r25, 0x27	; 39
     15e:	31 f4       	brne	.+12     	; 0x16c <__vector_11+0x9a>
     160:	89 e1       	ldi	r24, 0x19	; 25
     162:	9c ef       	ldi	r25, 0xFC	; 252
     164:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <digit+0x1>
     168:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <digit>
}
     16c:	ff 91       	pop	r31
     16e:	ef 91       	pop	r30
     170:	bf 91       	pop	r27
     172:	af 91       	pop	r26
     174:	9f 91       	pop	r25
     176:	8f 91       	pop	r24
     178:	7f 91       	pop	r23
     17a:	6f 91       	pop	r22
     17c:	5f 91       	pop	r21
     17e:	4f 91       	pop	r20
     180:	3f 91       	pop	r19
     182:	2f 91       	pop	r18
     184:	0f 90       	pop	r0
     186:	0f be       	out	0x3f, r0	; 63
     188:	0f 90       	pop	r0
     18a:	1f 90       	pop	r1
     18c:	18 95       	reti

0000018e <__vector_9>:
/*                                     Timer 2 Interrupts                                     */
/**********************************************************************************************/


ISR(TIMER2_OVF_vect)
{
     18e:	1f 92       	push	r1
     190:	0f 92       	push	r0
     192:	0f b6       	in	r0, 0x3f	; 63
     194:	0f 92       	push	r0
     196:	11 24       	eor	r1, r1
     198:	2f 93       	push	r18
     19a:	3f 93       	push	r19
     19c:	4f 93       	push	r20
     19e:	5f 93       	push	r21
     1a0:	6f 93       	push	r22
     1a2:	7f 93       	push	r23
     1a4:	8f 93       	push	r24
     1a6:	9f 93       	push	r25
     1a8:	af 93       	push	r26
     1aa:	bf 93       	push	r27
     1ac:	ef 93       	push	r30
     1ae:	ff 93       	push	r31
	//Serial::send("TIMER2_OVF_vect\n");
	
	static volatile uint8_t dig = 0;
	dig++;
     1b0:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <__data_end>
     1b4:	8f 5f       	subi	r24, 0xFF	; 255
     1b6:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__data_end>
	dig %= 4; // toggle digit
     1ba:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <__data_end>
     1be:	83 70       	andi	r24, 0x03	; 3
     1c0:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__data_end>
	disp(_off);
     1c4:	81 e1       	ldi	r24, 0x11	; 17
     1c6:	0e 94 11 02 	call	0x422	; 0x422 <_ZN4seg74dispENS_11_7_seg_valsE>
	PORTC = 0;
     1ca:	18 b8       	out	0x08, r1	; 8
	int const digit_ = digit*1000;
     1cc:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <digit>
     1d0:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <digit+0x1>
     1d4:	48 ee       	ldi	r20, 0xE8	; 232
     1d6:	53 e0       	ldi	r21, 0x03	; 3
     1d8:	24 9f       	mul	r18, r20
     1da:	b0 01       	movw	r22, r0
     1dc:	25 9f       	mul	r18, r21
     1de:	70 0d       	add	r23, r0
     1e0:	34 9f       	mul	r19, r20
     1e2:	70 0d       	add	r23, r0
     1e4:	11 24       	eor	r1, r1
	switch(dig)
     1e6:	90 91 86 01 	lds	r25, 0x0186	; 0x800186 <__data_end>
     1ea:	91 30       	cpi	r25, 0x01	; 1
     1ec:	e9 f1       	breq	.+122    	; 0x268 <__vector_9+0xda>
     1ee:	90 f1       	brcs	.+100    	; 0x254 <__vector_9+0xc6>
     1f0:	92 30       	cpi	r25, 0x02	; 2
     1f2:	01 f1       	breq	.+64     	; 0x234 <__vector_9+0xa6>
     1f4:	93 30       	cpi	r25, 0x03	; 3
     1f6:	19 f4       	brne	.+6      	; 0x1fe <__vector_9+0x70>
			else if((i = digit_/10))
				disp((_7_seg_vals)absval(i%10));
			break;
		}
		case 3:
			disp((_7_seg_vals)absval(digit_%10));
     1f8:	80 e0       	ldi	r24, 0x00	; 0
     1fa:	0e 94 11 02 	call	0x422	; 0x422 <_ZN4seg74dispENS_11_7_seg_valsE>
			break;
	}

	PORTC = dig_enable[dig];
     1fe:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <__data_end>
     202:	f0 e0       	ldi	r31, 0x00	; 0
     204:	e4 5f       	subi	r30, 0xF4	; 244
     206:	fe 4f       	sbci	r31, 0xFE	; 254
     208:	80 81       	ld	r24, Z
     20a:	88 b9       	out	0x08, r24	; 8
	TCNT2 = 100;
     20c:	84 e6       	ldi	r24, 0x64	; 100
     20e:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__DATA_REGION_ORIGIN__+0x52>
	//Serial::send("/TIMER2_OVF_vect\n");
}
     212:	ff 91       	pop	r31
     214:	ef 91       	pop	r30
     216:	bf 91       	pop	r27
     218:	af 91       	pop	r26
     21a:	9f 91       	pop	r25
     21c:	8f 91       	pop	r24
     21e:	7f 91       	pop	r23
     220:	6f 91       	pop	r22
     222:	5f 91       	pop	r21
     224:	4f 91       	pop	r20
     226:	3f 91       	pop	r19
     228:	2f 91       	pop	r18
     22a:	0f 90       	pop	r0
     22c:	0f be       	out	0x3f, r0	; 63
     22e:	0f 90       	pop	r0
     230:	1f 90       	pop	r1
     232:	18 95       	reti
				disp((_7_seg_vals)absval(i%10));
			break;
		}
		case 2: {
			int i;
			if(digit_ < 0 && !(digit_ < -9))
     234:	cb 01       	movw	r24, r22
     236:	09 96       	adiw	r24, 0x09	; 9
     238:	09 97       	sbiw	r24, 0x09	; 9
     23a:	70 f1       	brcs	.+92     	; 0x298 <__vector_9+0x10a>
				disp(_dash); // show negative sign
			else if((i = digit_/10))
     23c:	2a e0       	ldi	r18, 0x0A	; 10
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	cb 01       	movw	r24, r22
     242:	b9 01       	movw	r22, r18
     244:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__divmodhi4>
     248:	61 15       	cp	r22, r1
     24a:	71 05       	cpc	r23, r1
     24c:	c1 f2       	breq	.-80     	; 0x1fe <__vector_9+0x70>
				disp((_7_seg_vals)absval(i%10));
     24e:	cb 01       	movw	r24, r22
     250:	b9 01       	movw	r22, r18
     252:	1c c0       	rjmp	.+56     	; 0x28c <__vector_9+0xfe>
	int const digit_ = digit*1000;
	switch(dig)
	{
		case 0: {
			int i;
			if(digit_ < -99)
     254:	6d 39       	cpi	r22, 0x9D	; 157
     256:	7f 4f       	sbci	r23, 0xFF	; 255
     258:	fc f0       	brlt	.+62     	; 0x298 <__vector_9+0x10a>
				disp(_dash); // show negative sign
			else if((i = digit_/1000))
     25a:	21 15       	cp	r18, r1
     25c:	31 05       	cpc	r19, r1
     25e:	79 f2       	breq	.-98     	; 0x1fe <__vector_9+0x70>
				disp((_7_seg_vals)absval(i%10));
     260:	c9 01       	movw	r24, r18
     262:	6a e0       	ldi	r22, 0x0A	; 10
     264:	70 e0       	ldi	r23, 0x00	; 0
     266:	12 c0       	rjmp	.+36     	; 0x28c <__vector_9+0xfe>
			//PORTB &= ~dp;
			break;
		}
		case 1: {
			int i;
			if(digit_ < -9 && !(digit_ < -99))
     268:	cb 01       	movw	r24, r22
     26a:	8d 59       	subi	r24, 0x9D	; 157
     26c:	9f 4f       	sbci	r25, 0xFF	; 255
     26e:	8a 35       	cpi	r24, 0x5A	; 90
     270:	91 05       	cpc	r25, r1
     272:	90 f0       	brcs	.+36     	; 0x298 <__vector_9+0x10a>
				disp(_dash); // show negative sign
			else if((i = digit_/100))
     274:	cb 01       	movw	r24, r22
     276:	64 e6       	ldi	r22, 0x64	; 100
     278:	70 e0       	ldi	r23, 0x00	; 0
     27a:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__divmodhi4>
     27e:	61 15       	cp	r22, r1
     280:	71 05       	cpc	r23, r1
     282:	09 f4       	brne	.+2      	; 0x286 <__vector_9+0xf8>
     284:	bc cf       	rjmp	.-136    	; 0x1fe <__vector_9+0x70>
				disp((_7_seg_vals)absval(i%10));
     286:	cb 01       	movw	r24, r22
     288:	6a e0       	ldi	r22, 0x0A	; 10
     28a:	70 e0       	ldi	r23, 0x00	; 0
		case 2: {
			int i;
			if(digit_ < 0 && !(digit_ < -9))
				disp(_dash); // show negative sign
			else if((i = digit_/10))
				disp((_7_seg_vals)absval(i%10));
     28c:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__divmodhi4>

#include "avr/io.h"

inline uint8_t absval(int8_t val)
{
	if(val < 0) val = -val;
     290:	87 ff       	sbrs	r24, 7
     292:	b3 cf       	rjmp	.-154    	; 0x1fa <__vector_9+0x6c>
     294:	81 95       	neg	r24
     296:	b1 cf       	rjmp	.-158    	; 0x1fa <__vector_9+0x6c>
	switch(dig)
	{
		case 0: {
			int i;
			if(digit_ < -99)
				disp(_dash); // show negative sign
     298:	80 e1       	ldi	r24, 0x10	; 16
     29a:	0e 94 11 02 	call	0x422	; 0x422 <_ZN4seg74dispENS_11_7_seg_valsE>
     29e:	af cf       	rjmp	.-162    	; 0x1fe <__vector_9+0x70>

000002a0 <__vector_18>:
/************************************************************************/
/*                                USART                                 */
/************************************************************************/

ISR(USART_RX_vect)
{
     2a0:	1f 92       	push	r1
     2a2:	0f 92       	push	r0
     2a4:	0f b6       	in	r0, 0x3f	; 63
     2a6:	0f 92       	push	r0
     2a8:	11 24       	eor	r1, r1
     2aa:	2f 93       	push	r18
     2ac:	3f 93       	push	r19
     2ae:	4f 93       	push	r20
     2b0:	5f 93       	push	r21
     2b2:	6f 93       	push	r22
     2b4:	7f 93       	push	r23
     2b6:	8f 93       	push	r24
     2b8:	9f 93       	push	r25
     2ba:	af 93       	push	r26
     2bc:	bf 93       	push	r27
     2be:	ef 93       	push	r30
     2c0:	ff 93       	push	r31
     2c2:	cf 93       	push	r28
     2c4:	df 93       	push	r29
     2c6:	1f 92       	push	r1
     2c8:	cd b7       	in	r28, 0x3d	; 61
     2ca:	de b7       	in	r29, 0x3e	; 62
	const char value = Serial::read();
     2cc:	0e 94 81 02 	call	0x502	; 0x502 <_ZN6Serial4readEv>
     2d0:	89 83       	std	Y+1, r24	; 0x01
	digit = atoi(&value);
     2d2:	ce 01       	movw	r24, r28
     2d4:	01 96       	adiw	r24, 0x01	; 1
     2d6:	0e 94 b2 05 	call	0xb64	; 0xb64 <atoi>
     2da:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <digit+0x1>
     2de:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <digit>
	Serial::send(digit);
     2e2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <digit>
     2e6:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <digit+0x1>
     2ea:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <_ZN6Serial4sendEh>
     2ee:	0f 90       	pop	r0
     2f0:	df 91       	pop	r29
     2f2:	cf 91       	pop	r28
     2f4:	ff 91       	pop	r31
     2f6:	ef 91       	pop	r30
     2f8:	bf 91       	pop	r27
     2fa:	af 91       	pop	r26
     2fc:	9f 91       	pop	r25
     2fe:	8f 91       	pop	r24
     300:	7f 91       	pop	r23
     302:	6f 91       	pop	r22
     304:	5f 91       	pop	r21
     306:	4f 91       	pop	r20
     308:	3f 91       	pop	r19
     30a:	2f 91       	pop	r18
     30c:	0f 90       	pop	r0
     30e:	0f be       	out	0x3f, r0	; 63
     310:	0f 90       	pop	r0
     312:	1f 90       	pop	r1
     314:	18 95       	reti

00000316 <main>:

extern volatile float digit;

int main(void)
{
    DDRB = 0xff;
     316:	8f ef       	ldi	r24, 0xFF	; 255
     318:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xff;
     31a:	87 b9       	out	0x07, r24	; 7
	DDRD = (1 << PORTD2);
     31c:	c4 e0       	ldi	r28, 0x04	; 4
     31e:	ca b9       	out	0x0a, r28	; 10

	Serial::begin(4800,Serial::async);
     320:	61 e0       	ldi	r22, 0x01	; 1
     322:	80 ec       	ldi	r24, 0xC0	; 192
     324:	92 e1       	ldi	r25, 0x12	; 18
     326:	0e 94 19 02 	call	0x432	; 0x432 <_ZN6Serial5beginEjNS_4ModeE>
		TCCR2B |=   mode & (1 << WGM22);
		TCCR2B &= ~(mode & ~(1 << WGM22));
	}
	
	inline void setPrescaler(Prescaler prescaler) {
		Serial::sendf("T2 set prescaler: %i\n", prescaler);
     32a:	1f 92       	push	r1
     32c:	d3 e0       	ldi	r29, 0x03	; 3
     32e:	df 93       	push	r29
     330:	80 e1       	ldi	r24, 0x10	; 16
     332:	91 e0       	ldi	r25, 0x01	; 1
     334:	9f 93       	push	r25
     336:	8f 93       	push	r24
     338:	0e 94 88 02 	call	0x510	; 0x510 <_ZN6Serial5sendfEPKcz>
		TCCR2B |=   prescaler &  ((1 << CS22) | (1 << CS21) | (1 << CS20));
     33c:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
     340:	83 60       	ori	r24, 0x03	; 3
     342:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
		TCCR2B &= ~(prescaler & ~((1 << CS22) | (1 << CS21) | (1 << CS20)));
     346:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
     34a:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
    {	// Setup Timer 2
		using namespace Timer2;
		//Timer2::setMode(CTC);
	    Timer2::setPrescaler(_32);
		
	    TIMSK2 |= (1 <<TOIE2);
     34e:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__DATA_REGION_ORIGIN__+0x10>
     352:	81 60       	ori	r24, 0x01	; 1
     354:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__DATA_REGION_ORIGIN__+0x10>
		
		OCR2A = 40;
     358:	88 e2       	ldi	r24, 0x28	; 40
     35a:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
		T0_fall			= 0x06,
		T0_rise			= 0x07
	} Prescaler;
	
	inline void setMode(Mode mode) {
		Serial::sendf("T1 set mode: %i\n", mode);
     35e:	1f 92       	push	r1
     360:	cf 93       	push	r28
     362:	86 e2       	ldi	r24, 0x26	; 38
     364:	91 e0       	ldi	r25, 0x01	; 1
     366:	9f 93       	push	r25
     368:	8f 93       	push	r24
     36a:	0e 94 88 02 	call	0x510	; 0x510 <_ZN6Serial5sendfEPKcz>
		TCCR1A |=   mode &  ((1 << WGM11) | (1 << WGM10));
     36e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
     372:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
		TCCR1A &= ~(mode & ~((1 << WGM11) | (1 << WGM10)));
     376:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
     37a:	8b 7f       	andi	r24, 0xFB	; 251
     37c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
		
		TCCR1B |=   mode &  ((1 << WGM13) | (1 << WGM12));
     380:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     384:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
		TCCR1B &= ~(mode & ~((1 << WGM13) | (1 << WGM12)));
     388:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     38c:	8b 7f       	andi	r24, 0xFB	; 251
     38e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
	}
	
	inline void setPrescaler(Prescaler prescaler) {
		Serial::sendf("T1 set prescaler: %i\n", prescaler);
     392:	1f 92       	push	r1
     394:	cf 93       	push	r28
     396:	87 e3       	ldi	r24, 0x37	; 55
     398:	91 e0       	ldi	r25, 0x01	; 1
     39a:	9f 93       	push	r25
     39c:	8f 93       	push	r24
     39e:	0e 94 88 02 	call	0x510	; 0x510 <_ZN6Serial5sendfEPKcz>
		TCCR0B |=   prescaler &  ((1 << CS12) | (1 << CS11) | (1 << CS10));
     3a2:	85 b5       	in	r24, 0x25	; 37
     3a4:	84 60       	ori	r24, 0x04	; 4
     3a6:	85 bd       	out	0x25, r24	; 37
		TCCR0B &= ~(prescaler & ~((1 << CS12) | (1 << CS11) | (1 << CS10)));
     3a8:	85 b5       	in	r24, 0x25	; 37
     3aa:	85 bd       	out	0x25, r24	; 37
		using namespace Timer1;
		Timer1::setMode(CTC_OCRA);
		Timer1::setPrescaler(_256);
	    	
	    //TIMSK1 |= (1 << OCIE1A);
	    OCR1A = (1 << 12) -191;
     3ac:	81 e4       	ldi	r24, 0x41	; 65
     3ae:	9f e0       	ldi	r25, 0x0F	; 15
     3b0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     3b4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
		T0_fall			= 0x06,
		T0_rise			= 0x07
	} Prescaler;
	
	inline void setMode(Mode mode) {
		Serial::sendf("T0 set mode: %i\n", mode);
     3b8:	1f 92       	push	r1
     3ba:	82 e0       	ldi	r24, 0x02	; 2
     3bc:	8f 93       	push	r24
     3be:	8d e4       	ldi	r24, 0x4D	; 77
     3c0:	91 e0       	ldi	r25, 0x01	; 1
     3c2:	9f 93       	push	r25
     3c4:	8f 93       	push	r24
     3c6:	0e 94 88 02 	call	0x510	; 0x510 <_ZN6Serial5sendfEPKcz>
		TCCR0A |=   mode &  ((1 << WGM01) | (1 << WGM00));
     3ca:	84 b5       	in	r24, 0x24	; 36
     3cc:	82 60       	ori	r24, 0x02	; 2
     3ce:	84 bd       	out	0x24, r24	; 36
		TCCR0A &= ~(mode & ~((1 << WGM01) | (1 << WGM00)));
     3d0:	84 b5       	in	r24, 0x24	; 36
     3d2:	84 bd       	out	0x24, r24	; 36
		
		TCCR0B |=   mode &  (1 << WGM02);
     3d4:	85 b5       	in	r24, 0x25	; 37
     3d6:	85 bd       	out	0x25, r24	; 37
		TCCR0B &= ~(mode & ~(1 << WGM02));
     3d8:	85 b5       	in	r24, 0x25	; 37
     3da:	8d 7f       	andi	r24, 0xFD	; 253
     3dc:	85 bd       	out	0x25, r24	; 37
	}
	
	inline void setPrescaler(Prescaler prescaler) {
		Serial::sendf("T0 set prescaler: %i\n", prescaler);
     3de:	1f 92       	push	r1
     3e0:	df 93       	push	r29
     3e2:	8e e5       	ldi	r24, 0x5E	; 94
     3e4:	91 e0       	ldi	r25, 0x01	; 1
     3e6:	9f 93       	push	r25
     3e8:	8f 93       	push	r24
     3ea:	0e 94 88 02 	call	0x510	; 0x510 <_ZN6Serial5sendfEPKcz>
		TCCR0B |=   prescaler &  ((1 << CS02) | (1 << CS01) | (1 << CS00));
     3ee:	85 b5       	in	r24, 0x25	; 37
     3f0:	83 60       	ori	r24, 0x03	; 3
     3f2:	85 bd       	out	0x25, r24	; 37
		TCCR0B &= ~(prescaler & ~((1 << CS02) | (1 << CS01) | (1 << CS00)));
     3f4:	85 b5       	in	r24, 0x25	; 37
     3f6:	85 bd       	out	0x25, r24	; 37
	{	// Setup Timer 0
		using namespace Timer0;
		Timer0::setMode(CTC);
		Timer0::setPrescaler(_64);
		
		OCR2A = 194;
     3f8:	82 ec       	ldi	r24, 0xC2	; 194
     3fa:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
	
		TIMSK0 |= (1 << OCIE0A);
     3fe:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
     402:	82 60       	ori	r24, 0x02	; 2
     404:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	}

	EICRA = 0x01 << 2;
     408:	c0 93 69 00 	sts	0x0069, r28	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
	EIMSK |= (1 << INT1);
     40c:	e9 9a       	sbi	0x1d, 1	; 29
	
	sei();
     40e:	78 94       	sei
     410:	8d b7       	in	r24, 0x3d	; 61
     412:	9e b7       	in	r25, 0x3e	; 62
     414:	44 96       	adiw	r24, 0x14	; 20
     416:	0f b6       	in	r0, 0x3f	; 63
     418:	f8 94       	cli
     41a:	9e bf       	out	0x3e, r25	; 62
     41c:	0f be       	out	0x3f, r0	; 63
     41e:	8d bf       	out	0x3d, r24	; 61
     420:	ff cf       	rjmp	.-2      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>

00000422 <_ZN4seg74dispENS_11_7_seg_valsE>:
#include <avr/io.h>
using namespace seg7;

void seg7::disp(_7_seg_vals val)
{
	PORTB = ~num_map[val];
     422:	e8 2f       	mov	r30, r24
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	ec 58       	subi	r30, 0x8C	; 140
     428:	fe 4f       	sbci	r31, 0xFE	; 254
     42a:	80 81       	ld	r24, Z
     42c:	80 95       	com	r24
     42e:	85 b9       	out	0x05, r24	; 5
     430:	08 95       	ret

00000432 <_ZN6Serial5beginEjNS_4ModeE>:
	return UDR0;
}

void Serial::send(char* data)
{
	while(*data)
     432:	af 92       	push	r10
     434:	bf 92       	push	r11
     436:	cf 92       	push	r12
     438:	df 92       	push	r13
     43a:	ef 92       	push	r14
     43c:	ff 92       	push	r15
     43e:	0f 93       	push	r16
     440:	1f 93       	push	r17
     442:	cf 93       	push	r28
     444:	df 93       	push	r29
     446:	61 30       	cpi	r22, 0x01	; 1
     448:	09 f4       	brne	.+2      	; 0x44c <_ZN6Serial5beginEjNS_4ModeE+0x1a>
     44a:	49 c0       	rjmp	.+146    	; 0x4de <_ZN6Serial5beginEjNS_4ModeE+0xac>
     44c:	e8 f1       	brcs	.+122    	; 0x4c8 <_ZN6Serial5beginEjNS_4ModeE+0x96>
     44e:	62 30       	cpi	r22, 0x02	; 2
     450:	a9 f4       	brne	.+42     	; 0x47c <_ZN6Serial5beginEjNS_4ModeE+0x4a>
     452:	5c 01       	movw	r10, r24
     454:	c1 2c       	mov	r12, r1
     456:	d1 2c       	mov	r13, r1
     458:	e1 2c       	mov	r14, r1
     45a:	f1 2c       	mov	r15, r1
     45c:	00 e0       	ldi	r16, 0x00	; 0
     45e:	10 e0       	ldi	r17, 0x00	; 0
     460:	28 e4       	ldi	r18, 0x48	; 72
     462:	38 ee       	ldi	r19, 0xE8	; 232
     464:	41 e0       	ldi	r20, 0x01	; 1
     466:	50 e0       	ldi	r21, 0x00	; 0
     468:	60 e0       	ldi	r22, 0x00	; 0
     46a:	70 e0       	ldi	r23, 0x00	; 0
     46c:	80 e0       	ldi	r24, 0x00	; 0
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	0e 94 14 04 	call	0x828	; 0x828 <__udivdi3>
     474:	af ef       	ldi	r26, 0xFF	; 255
     476:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__adddi3_s8>
     47a:	02 c0       	rjmp	.+4      	; 0x480 <_ZN6Serial5beginEjNS_4ModeE+0x4e>
     47c:	20 e0       	ldi	r18, 0x00	; 0
     47e:	30 e0       	ldi	r19, 0x00	; 0
     480:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     484:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     488:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     48c:	8d 7f       	andi	r24, 0xFD	; 253
     48e:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     492:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     496:	80 68       	ori	r24, 0x80	; 128
     498:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     49c:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     4a0:	88 61       	ori	r24, 0x18	; 24
     4a2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     4a6:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     4aa:	86 60       	ori	r24, 0x06	; 6
     4ac:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     4b0:	78 94       	sei
     4b2:	df 91       	pop	r29
     4b4:	cf 91       	pop	r28
     4b6:	1f 91       	pop	r17
     4b8:	0f 91       	pop	r16
     4ba:	ff 90       	pop	r15
     4bc:	ef 90       	pop	r14
     4be:	df 90       	pop	r13
     4c0:	cf 90       	pop	r12
     4c2:	bf 90       	pop	r11
     4c4:	af 90       	pop	r10
     4c6:	08 95       	ret
     4c8:	5c 01       	movw	r10, r24
     4ca:	c1 2c       	mov	r12, r1
     4cc:	d1 2c       	mov	r13, r1
     4ce:	e1 2c       	mov	r14, r1
     4d0:	f1 2c       	mov	r15, r1
     4d2:	00 e0       	ldi	r16, 0x00	; 0
     4d4:	10 e0       	ldi	r17, 0x00	; 0
     4d6:	20 e2       	ldi	r18, 0x20	; 32
     4d8:	31 ea       	ldi	r19, 0xA1	; 161
     4da:	47 e0       	ldi	r20, 0x07	; 7
     4dc:	c4 cf       	rjmp	.-120    	; 0x466 <_ZN6Serial5beginEjNS_4ModeE+0x34>
     4de:	5c 01       	movw	r10, r24
     4e0:	c1 2c       	mov	r12, r1
     4e2:	d1 2c       	mov	r13, r1
     4e4:	e1 2c       	mov	r14, r1
     4e6:	f1 2c       	mov	r15, r1
     4e8:	00 e0       	ldi	r16, 0x00	; 0
     4ea:	10 e0       	ldi	r17, 0x00	; 0
     4ec:	24 e2       	ldi	r18, 0x24	; 36
     4ee:	34 ef       	ldi	r19, 0xF4	; 244
     4f0:	40 e0       	ldi	r20, 0x00	; 0
     4f2:	b9 cf       	rjmp	.-142    	; 0x466 <_ZN6Serial5beginEjNS_4ModeE+0x34>

000004f4 <_ZN6Serial4sendEh>:
     4f4:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     4f8:	95 ff       	sbrs	r25, 5
     4fa:	fc cf       	rjmp	.-8      	; 0x4f4 <_ZN6Serial4sendEh>
     4fc:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     500:	08 95       	ret

00000502 <_ZN6Serial4readEv>:
     502:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     506:	85 ff       	sbrs	r24, 5
     508:	fc cf       	rjmp	.-8      	; 0x502 <_ZN6Serial4readEv>
     50a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     50e:	08 95       	ret

00000510 <_ZN6Serial5sendfEPKcz>:

/** 
 * Note: if the output string is greater than 50 this function calls sprintf twice
 */
void Serial::sendf(char const* format, ...)	// using va_list to minimize program size
{
     510:	cf 92       	push	r12
     512:	df 92       	push	r13
     514:	ef 92       	push	r14
     516:	ff 92       	push	r15
     518:	0f 93       	push	r16
     51a:	1f 93       	push	r17
     51c:	cf 93       	push	r28
     51e:	df 93       	push	r29
     520:	cd b7       	in	r28, 0x3d	; 61
     522:	de b7       	in	r29, 0x3e	; 62
     524:	ce 01       	movw	r24, r28
     526:	0b 96       	adiw	r24, 0x0b	; 11
     528:	fc 01       	movw	r30, r24
     52a:	c1 90       	ld	r12, Z+
     52c:	d1 90       	ld	r13, Z+
     52e:	7f 01       	movw	r14, r30
	int size;
	va_list vl;
	va_start(vl,format);
	char *str = (char*)malloc(30);
     530:	8e e1       	ldi	r24, 0x1E	; 30
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	0e 94 91 04 	call	0x922	; 0x922 <malloc>
     538:	8c 01       	movw	r16, r24
	if(!(size = vsnprintf(str, 30, format, vl)))
     53a:	97 01       	movw	r18, r14
     53c:	a6 01       	movw	r20, r12
     53e:	6e e1       	ldi	r22, 0x1E	; 30
     540:	70 e0       	ldi	r23, 0x00	; 0
     542:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <vsnprintf>
     546:	89 2b       	or	r24, r25
     548:	d9 f0       	breq	.+54     	; 0x580 <_ZN6Serial5sendfEPKcz+0x70>
	return UDR0;
}

void Serial::send(char* data)
{
	while(*data)
     54a:	f8 01       	movw	r30, r16
     54c:	90 81       	ld	r25, Z
     54e:	99 23       	and	r25, r25
     550:	59 f0       	breq	.+22     	; 0x568 <_ZN6Serial5sendfEPKcz+0x58>
     552:	f8 01       	movw	r30, r16
     554:	31 96       	adiw	r30, 0x01	; 1
	sei();
}

uint8_t Serial::send(uint8_t const data)
{
	while( !( UCSR0A & (1 << UDRE0) ) )
     556:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     55a:	85 ff       	sbrs	r24, 5
     55c:	fc cf       	rjmp	.-8      	; 0x556 <_ZN6Serial5sendfEPKcz+0x46>
		;
	UDR0 = data;
     55e:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return UDR0;
}

void Serial::send(char* data)
{
	while(*data)
     562:	91 91       	ld	r25, Z+
     564:	91 11       	cpse	r25, r1
     566:	f7 cf       	rjmp	.-18     	; 0x556 <_ZN6Serial5sendfEPKcz+0x46>
		free(str);
		str = (char*)malloc(size);
		vsprintf(str, format, vl);
	}
	send(str);
	free(str);
     568:	c8 01       	movw	r24, r16
     56a:	0e 94 29 05 	call	0xa52	; 0xa52 <free>
     56e:	df 91       	pop	r29
     570:	cf 91       	pop	r28
     572:	1f 91       	pop	r17
     574:	0f 91       	pop	r16
     576:	ff 90       	pop	r15
     578:	ef 90       	pop	r14
     57a:	df 90       	pop	r13
     57c:	cf 90       	pop	r12
     57e:	08 95       	ret
	va_list vl;
	va_start(vl,format);
	char *str = (char*)malloc(30);
	if(!(size = vsnprintf(str, 30, format, vl)))
	{
		free(str);
     580:	c8 01       	movw	r24, r16
     582:	0e 94 29 05 	call	0xa52	; 0xa52 <free>
		str = (char*)malloc(size);
     586:	80 e0       	ldi	r24, 0x00	; 0
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	0e 94 91 04 	call	0x922	; 0x922 <malloc>
     58e:	8c 01       	movw	r16, r24
		vsprintf(str, format, vl);
     590:	a7 01       	movw	r20, r14
     592:	b6 01       	movw	r22, r12
     594:	0e 94 04 06 	call	0xc08	; 0xc08 <vsprintf>
     598:	d8 cf       	rjmp	.-80     	; 0x54a <_ZN6Serial5sendfEPKcz+0x3a>

0000059a <__subsf3>:
     59a:	50 58       	subi	r21, 0x80	; 128

0000059c <__addsf3>:
     59c:	bb 27       	eor	r27, r27
     59e:	aa 27       	eor	r26, r26
     5a0:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__addsf3x>
     5a4:	0c 94 c4 03 	jmp	0x788	; 0x788 <__fp_round>
     5a8:	0e 94 b6 03 	call	0x76c	; 0x76c <__fp_pscA>
     5ac:	38 f0       	brcs	.+14     	; 0x5bc <__addsf3+0x20>
     5ae:	0e 94 bd 03 	call	0x77a	; 0x77a <__fp_pscB>
     5b2:	20 f0       	brcs	.+8      	; 0x5bc <__addsf3+0x20>
     5b4:	39 f4       	brne	.+14     	; 0x5c4 <__addsf3+0x28>
     5b6:	9f 3f       	cpi	r25, 0xFF	; 255
     5b8:	19 f4       	brne	.+6      	; 0x5c0 <__addsf3+0x24>
     5ba:	26 f4       	brtc	.+8      	; 0x5c4 <__addsf3+0x28>
     5bc:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_nan>
     5c0:	0e f4       	brtc	.+2      	; 0x5c4 <__addsf3+0x28>
     5c2:	e0 95       	com	r30
     5c4:	e7 fb       	bst	r30, 7
     5c6:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>

000005ca <__addsf3x>:
     5ca:	e9 2f       	mov	r30, r25
     5cc:	0e 94 d5 03 	call	0x7aa	; 0x7aa <__fp_split3>
     5d0:	58 f3       	brcs	.-42     	; 0x5a8 <__addsf3+0xc>
     5d2:	ba 17       	cp	r27, r26
     5d4:	62 07       	cpc	r22, r18
     5d6:	73 07       	cpc	r23, r19
     5d8:	84 07       	cpc	r24, r20
     5da:	95 07       	cpc	r25, r21
     5dc:	20 f0       	brcs	.+8      	; 0x5e6 <__addsf3x+0x1c>
     5de:	79 f4       	brne	.+30     	; 0x5fe <__addsf3x+0x34>
     5e0:	a6 f5       	brtc	.+104    	; 0x64a <__addsf3x+0x80>
     5e2:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <__fp_zero>
     5e6:	0e f4       	brtc	.+2      	; 0x5ea <__addsf3x+0x20>
     5e8:	e0 95       	com	r30
     5ea:	0b 2e       	mov	r0, r27
     5ec:	ba 2f       	mov	r27, r26
     5ee:	a0 2d       	mov	r26, r0
     5f0:	0b 01       	movw	r0, r22
     5f2:	b9 01       	movw	r22, r18
     5f4:	90 01       	movw	r18, r0
     5f6:	0c 01       	movw	r0, r24
     5f8:	ca 01       	movw	r24, r20
     5fa:	a0 01       	movw	r20, r0
     5fc:	11 24       	eor	r1, r1
     5fe:	ff 27       	eor	r31, r31
     600:	59 1b       	sub	r21, r25
     602:	99 f0       	breq	.+38     	; 0x62a <__addsf3x+0x60>
     604:	59 3f       	cpi	r21, 0xF9	; 249
     606:	50 f4       	brcc	.+20     	; 0x61c <__addsf3x+0x52>
     608:	50 3e       	cpi	r21, 0xE0	; 224
     60a:	68 f1       	brcs	.+90     	; 0x666 <__addsf3x+0x9c>
     60c:	1a 16       	cp	r1, r26
     60e:	f0 40       	sbci	r31, 0x00	; 0
     610:	a2 2f       	mov	r26, r18
     612:	23 2f       	mov	r18, r19
     614:	34 2f       	mov	r19, r20
     616:	44 27       	eor	r20, r20
     618:	58 5f       	subi	r21, 0xF8	; 248
     61a:	f3 cf       	rjmp	.-26     	; 0x602 <__addsf3x+0x38>
     61c:	46 95       	lsr	r20
     61e:	37 95       	ror	r19
     620:	27 95       	ror	r18
     622:	a7 95       	ror	r26
     624:	f0 40       	sbci	r31, 0x00	; 0
     626:	53 95       	inc	r21
     628:	c9 f7       	brne	.-14     	; 0x61c <__addsf3x+0x52>
     62a:	7e f4       	brtc	.+30     	; 0x64a <__addsf3x+0x80>
     62c:	1f 16       	cp	r1, r31
     62e:	ba 0b       	sbc	r27, r26
     630:	62 0b       	sbc	r22, r18
     632:	73 0b       	sbc	r23, r19
     634:	84 0b       	sbc	r24, r20
     636:	ba f0       	brmi	.+46     	; 0x666 <__addsf3x+0x9c>
     638:	91 50       	subi	r25, 0x01	; 1
     63a:	a1 f0       	breq	.+40     	; 0x664 <__addsf3x+0x9a>
     63c:	ff 0f       	add	r31, r31
     63e:	bb 1f       	adc	r27, r27
     640:	66 1f       	adc	r22, r22
     642:	77 1f       	adc	r23, r23
     644:	88 1f       	adc	r24, r24
     646:	c2 f7       	brpl	.-16     	; 0x638 <__addsf3x+0x6e>
     648:	0e c0       	rjmp	.+28     	; 0x666 <__addsf3x+0x9c>
     64a:	ba 0f       	add	r27, r26
     64c:	62 1f       	adc	r22, r18
     64e:	73 1f       	adc	r23, r19
     650:	84 1f       	adc	r24, r20
     652:	48 f4       	brcc	.+18     	; 0x666 <__addsf3x+0x9c>
     654:	87 95       	ror	r24
     656:	77 95       	ror	r23
     658:	67 95       	ror	r22
     65a:	b7 95       	ror	r27
     65c:	f7 95       	ror	r31
     65e:	9e 3f       	cpi	r25, 0xFE	; 254
     660:	08 f0       	brcs	.+2      	; 0x664 <__addsf3x+0x9a>
     662:	b0 cf       	rjmp	.-160    	; 0x5c4 <__addsf3+0x28>
     664:	93 95       	inc	r25
     666:	88 0f       	add	r24, r24
     668:	08 f0       	brcs	.+2      	; 0x66c <__addsf3x+0xa2>
     66a:	99 27       	eor	r25, r25
     66c:	ee 0f       	add	r30, r30
     66e:	97 95       	ror	r25
     670:	87 95       	ror	r24
     672:	08 95       	ret

00000674 <__fixsfsi>:
     674:	0e 94 41 03 	call	0x682	; 0x682 <__fixunssfsi>
     678:	68 94       	set
     67a:	b1 11       	cpse	r27, r1
     67c:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_szero>
     680:	08 95       	ret

00000682 <__fixunssfsi>:
     682:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_splitA>
     686:	88 f0       	brcs	.+34     	; 0x6aa <__fixunssfsi+0x28>
     688:	9f 57       	subi	r25, 0x7F	; 127
     68a:	98 f0       	brcs	.+38     	; 0x6b2 <__fixunssfsi+0x30>
     68c:	b9 2f       	mov	r27, r25
     68e:	99 27       	eor	r25, r25
     690:	b7 51       	subi	r27, 0x17	; 23
     692:	b0 f0       	brcs	.+44     	; 0x6c0 <__fixunssfsi+0x3e>
     694:	e1 f0       	breq	.+56     	; 0x6ce <__fixunssfsi+0x4c>
     696:	66 0f       	add	r22, r22
     698:	77 1f       	adc	r23, r23
     69a:	88 1f       	adc	r24, r24
     69c:	99 1f       	adc	r25, r25
     69e:	1a f0       	brmi	.+6      	; 0x6a6 <__fixunssfsi+0x24>
     6a0:	ba 95       	dec	r27
     6a2:	c9 f7       	brne	.-14     	; 0x696 <__fixunssfsi+0x14>
     6a4:	14 c0       	rjmp	.+40     	; 0x6ce <__fixunssfsi+0x4c>
     6a6:	b1 30       	cpi	r27, 0x01	; 1
     6a8:	91 f0       	breq	.+36     	; 0x6ce <__fixunssfsi+0x4c>
     6aa:	0e 94 f7 03 	call	0x7ee	; 0x7ee <__fp_zero>
     6ae:	b1 e0       	ldi	r27, 0x01	; 1
     6b0:	08 95       	ret
     6b2:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <__fp_zero>
     6b6:	67 2f       	mov	r22, r23
     6b8:	78 2f       	mov	r23, r24
     6ba:	88 27       	eor	r24, r24
     6bc:	b8 5f       	subi	r27, 0xF8	; 248
     6be:	39 f0       	breq	.+14     	; 0x6ce <__fixunssfsi+0x4c>
     6c0:	b9 3f       	cpi	r27, 0xF9	; 249
     6c2:	cc f3       	brlt	.-14     	; 0x6b6 <__fixunssfsi+0x34>
     6c4:	86 95       	lsr	r24
     6c6:	77 95       	ror	r23
     6c8:	67 95       	ror	r22
     6ca:	b3 95       	inc	r27
     6cc:	d9 f7       	brne	.-10     	; 0x6c4 <__fixunssfsi+0x42>
     6ce:	3e f4       	brtc	.+14     	; 0x6de <__fixunssfsi+0x5c>
     6d0:	90 95       	com	r25
     6d2:	80 95       	com	r24
     6d4:	70 95       	com	r23
     6d6:	61 95       	neg	r22
     6d8:	7f 4f       	sbci	r23, 0xFF	; 255
     6da:	8f 4f       	sbci	r24, 0xFF	; 255
     6dc:	9f 4f       	sbci	r25, 0xFF	; 255
     6de:	08 95       	ret

000006e0 <__floatunsisf>:
     6e0:	e8 94       	clt
     6e2:	09 c0       	rjmp	.+18     	; 0x6f6 <__floatsisf+0x12>

000006e4 <__floatsisf>:
     6e4:	97 fb       	bst	r25, 7
     6e6:	3e f4       	brtc	.+14     	; 0x6f6 <__floatsisf+0x12>
     6e8:	90 95       	com	r25
     6ea:	80 95       	com	r24
     6ec:	70 95       	com	r23
     6ee:	61 95       	neg	r22
     6f0:	7f 4f       	sbci	r23, 0xFF	; 255
     6f2:	8f 4f       	sbci	r24, 0xFF	; 255
     6f4:	9f 4f       	sbci	r25, 0xFF	; 255
     6f6:	99 23       	and	r25, r25
     6f8:	a9 f0       	breq	.+42     	; 0x724 <__floatsisf+0x40>
     6fa:	f9 2f       	mov	r31, r25
     6fc:	96 e9       	ldi	r25, 0x96	; 150
     6fe:	bb 27       	eor	r27, r27
     700:	93 95       	inc	r25
     702:	f6 95       	lsr	r31
     704:	87 95       	ror	r24
     706:	77 95       	ror	r23
     708:	67 95       	ror	r22
     70a:	b7 95       	ror	r27
     70c:	f1 11       	cpse	r31, r1
     70e:	f8 cf       	rjmp	.-16     	; 0x700 <__floatsisf+0x1c>
     710:	fa f4       	brpl	.+62     	; 0x750 <__floatsisf+0x6c>
     712:	bb 0f       	add	r27, r27
     714:	11 f4       	brne	.+4      	; 0x71a <__floatsisf+0x36>
     716:	60 ff       	sbrs	r22, 0
     718:	1b c0       	rjmp	.+54     	; 0x750 <__floatsisf+0x6c>
     71a:	6f 5f       	subi	r22, 0xFF	; 255
     71c:	7f 4f       	sbci	r23, 0xFF	; 255
     71e:	8f 4f       	sbci	r24, 0xFF	; 255
     720:	9f 4f       	sbci	r25, 0xFF	; 255
     722:	16 c0       	rjmp	.+44     	; 0x750 <__floatsisf+0x6c>
     724:	88 23       	and	r24, r24
     726:	11 f0       	breq	.+4      	; 0x72c <__floatsisf+0x48>
     728:	96 e9       	ldi	r25, 0x96	; 150
     72a:	11 c0       	rjmp	.+34     	; 0x74e <__floatsisf+0x6a>
     72c:	77 23       	and	r23, r23
     72e:	21 f0       	breq	.+8      	; 0x738 <__floatsisf+0x54>
     730:	9e e8       	ldi	r25, 0x8E	; 142
     732:	87 2f       	mov	r24, r23
     734:	76 2f       	mov	r23, r22
     736:	05 c0       	rjmp	.+10     	; 0x742 <__floatsisf+0x5e>
     738:	66 23       	and	r22, r22
     73a:	71 f0       	breq	.+28     	; 0x758 <__floatsisf+0x74>
     73c:	96 e8       	ldi	r25, 0x86	; 134
     73e:	86 2f       	mov	r24, r22
     740:	70 e0       	ldi	r23, 0x00	; 0
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	2a f0       	brmi	.+10     	; 0x750 <__floatsisf+0x6c>
     746:	9a 95       	dec	r25
     748:	66 0f       	add	r22, r22
     74a:	77 1f       	adc	r23, r23
     74c:	88 1f       	adc	r24, r24
     74e:	da f7       	brpl	.-10     	; 0x746 <__floatsisf+0x62>
     750:	88 0f       	add	r24, r24
     752:	96 95       	lsr	r25
     754:	87 95       	ror	r24
     756:	97 f9       	bld	r25, 7
     758:	08 95       	ret

0000075a <__fp_inf>:
     75a:	97 f9       	bld	r25, 7
     75c:	9f 67       	ori	r25, 0x7F	; 127
     75e:	80 e8       	ldi	r24, 0x80	; 128
     760:	70 e0       	ldi	r23, 0x00	; 0
     762:	60 e0       	ldi	r22, 0x00	; 0
     764:	08 95       	ret

00000766 <__fp_nan>:
     766:	9f ef       	ldi	r25, 0xFF	; 255
     768:	80 ec       	ldi	r24, 0xC0	; 192
     76a:	08 95       	ret

0000076c <__fp_pscA>:
     76c:	00 24       	eor	r0, r0
     76e:	0a 94       	dec	r0
     770:	16 16       	cp	r1, r22
     772:	17 06       	cpc	r1, r23
     774:	18 06       	cpc	r1, r24
     776:	09 06       	cpc	r0, r25
     778:	08 95       	ret

0000077a <__fp_pscB>:
     77a:	00 24       	eor	r0, r0
     77c:	0a 94       	dec	r0
     77e:	12 16       	cp	r1, r18
     780:	13 06       	cpc	r1, r19
     782:	14 06       	cpc	r1, r20
     784:	05 06       	cpc	r0, r21
     786:	08 95       	ret

00000788 <__fp_round>:
     788:	09 2e       	mov	r0, r25
     78a:	03 94       	inc	r0
     78c:	00 0c       	add	r0, r0
     78e:	11 f4       	brne	.+4      	; 0x794 <__fp_round+0xc>
     790:	88 23       	and	r24, r24
     792:	52 f0       	brmi	.+20     	; 0x7a8 <__fp_round+0x20>
     794:	bb 0f       	add	r27, r27
     796:	40 f4       	brcc	.+16     	; 0x7a8 <__fp_round+0x20>
     798:	bf 2b       	or	r27, r31
     79a:	11 f4       	brne	.+4      	; 0x7a0 <__fp_round+0x18>
     79c:	60 ff       	sbrs	r22, 0
     79e:	04 c0       	rjmp	.+8      	; 0x7a8 <__fp_round+0x20>
     7a0:	6f 5f       	subi	r22, 0xFF	; 255
     7a2:	7f 4f       	sbci	r23, 0xFF	; 255
     7a4:	8f 4f       	sbci	r24, 0xFF	; 255
     7a6:	9f 4f       	sbci	r25, 0xFF	; 255
     7a8:	08 95       	ret

000007aa <__fp_split3>:
     7aa:	57 fd       	sbrc	r21, 7
     7ac:	90 58       	subi	r25, 0x80	; 128
     7ae:	44 0f       	add	r20, r20
     7b0:	55 1f       	adc	r21, r21
     7b2:	59 f0       	breq	.+22     	; 0x7ca <__fp_splitA+0x10>
     7b4:	5f 3f       	cpi	r21, 0xFF	; 255
     7b6:	71 f0       	breq	.+28     	; 0x7d4 <__fp_splitA+0x1a>
     7b8:	47 95       	ror	r20

000007ba <__fp_splitA>:
     7ba:	88 0f       	add	r24, r24
     7bc:	97 fb       	bst	r25, 7
     7be:	99 1f       	adc	r25, r25
     7c0:	61 f0       	breq	.+24     	; 0x7da <__fp_splitA+0x20>
     7c2:	9f 3f       	cpi	r25, 0xFF	; 255
     7c4:	79 f0       	breq	.+30     	; 0x7e4 <__fp_splitA+0x2a>
     7c6:	87 95       	ror	r24
     7c8:	08 95       	ret
     7ca:	12 16       	cp	r1, r18
     7cc:	13 06       	cpc	r1, r19
     7ce:	14 06       	cpc	r1, r20
     7d0:	55 1f       	adc	r21, r21
     7d2:	f2 cf       	rjmp	.-28     	; 0x7b8 <__fp_split3+0xe>
     7d4:	46 95       	lsr	r20
     7d6:	f1 df       	rcall	.-30     	; 0x7ba <__fp_splitA>
     7d8:	08 c0       	rjmp	.+16     	; 0x7ea <__fp_splitA+0x30>
     7da:	16 16       	cp	r1, r22
     7dc:	17 06       	cpc	r1, r23
     7de:	18 06       	cpc	r1, r24
     7e0:	99 1f       	adc	r25, r25
     7e2:	f1 cf       	rjmp	.-30     	; 0x7c6 <__fp_splitA+0xc>
     7e4:	86 95       	lsr	r24
     7e6:	71 05       	cpc	r23, r1
     7e8:	61 05       	cpc	r22, r1
     7ea:	08 94       	sec
     7ec:	08 95       	ret

000007ee <__fp_zero>:
     7ee:	e8 94       	clt

000007f0 <__fp_szero>:
     7f0:	bb 27       	eor	r27, r27
     7f2:	66 27       	eor	r22, r22
     7f4:	77 27       	eor	r23, r23
     7f6:	cb 01       	movw	r24, r22
     7f8:	97 f9       	bld	r25, 7
     7fa:	08 95       	ret

000007fc <__divmodhi4>:
     7fc:	97 fb       	bst	r25, 7
     7fe:	07 2e       	mov	r0, r23
     800:	16 f4       	brtc	.+4      	; 0x806 <__divmodhi4+0xa>
     802:	00 94       	com	r0
     804:	07 d0       	rcall	.+14     	; 0x814 <__divmodhi4_neg1>
     806:	77 fd       	sbrc	r23, 7
     808:	09 d0       	rcall	.+18     	; 0x81c <__divmodhi4_neg2>
     80a:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__udivmodhi4>
     80e:	07 fc       	sbrc	r0, 7
     810:	05 d0       	rcall	.+10     	; 0x81c <__divmodhi4_neg2>
     812:	3e f4       	brtc	.+14     	; 0x822 <__divmodhi4_exit>

00000814 <__divmodhi4_neg1>:
     814:	90 95       	com	r25
     816:	81 95       	neg	r24
     818:	9f 4f       	sbci	r25, 0xFF	; 255
     81a:	08 95       	ret

0000081c <__divmodhi4_neg2>:
     81c:	70 95       	com	r23
     81e:	61 95       	neg	r22
     820:	7f 4f       	sbci	r23, 0xFF	; 255

00000822 <__divmodhi4_exit>:
     822:	08 95       	ret

00000824 <__umoddi3>:
     824:	68 94       	set
     826:	01 c0       	rjmp	.+2      	; 0x82a <__udivdi3_umoddi3>

00000828 <__udivdi3>:
     828:	e8 94       	clt

0000082a <__udivdi3_umoddi3>:
     82a:	8f 92       	push	r8
     82c:	9f 92       	push	r9
     82e:	cf 93       	push	r28
     830:	df 93       	push	r29
     832:	0e 94 20 04 	call	0x840	; 0x840 <__udivmod64>
     836:	df 91       	pop	r29
     838:	cf 91       	pop	r28
     83a:	9f 90       	pop	r9
     83c:	8f 90       	pop	r8
     83e:	08 95       	ret

00000840 <__udivmod64>:
     840:	88 24       	eor	r8, r8
     842:	99 24       	eor	r9, r9
     844:	f4 01       	movw	r30, r8
     846:	e4 01       	movw	r28, r8
     848:	b0 e4       	ldi	r27, 0x40	; 64
     84a:	9f 93       	push	r25
     84c:	aa 27       	eor	r26, r26
     84e:	9a 15       	cp	r25, r10
     850:	8b 04       	cpc	r8, r11
     852:	9c 04       	cpc	r9, r12
     854:	ed 05       	cpc	r30, r13
     856:	fe 05       	cpc	r31, r14
     858:	cf 05       	cpc	r28, r15
     85a:	d0 07       	cpc	r29, r16
     85c:	a1 07       	cpc	r26, r17
     85e:	98 f4       	brcc	.+38     	; 0x886 <__udivmod64+0x46>
     860:	ad 2f       	mov	r26, r29
     862:	dc 2f       	mov	r29, r28
     864:	cf 2f       	mov	r28, r31
     866:	fe 2f       	mov	r31, r30
     868:	e9 2d       	mov	r30, r9
     86a:	98 2c       	mov	r9, r8
     86c:	89 2e       	mov	r8, r25
     86e:	98 2f       	mov	r25, r24
     870:	87 2f       	mov	r24, r23
     872:	76 2f       	mov	r23, r22
     874:	65 2f       	mov	r22, r21
     876:	54 2f       	mov	r21, r20
     878:	43 2f       	mov	r20, r19
     87a:	32 2f       	mov	r19, r18
     87c:	22 27       	eor	r18, r18
     87e:	b8 50       	subi	r27, 0x08	; 8
     880:	31 f7       	brne	.-52     	; 0x84e <__udivmod64+0xe>
     882:	bf 91       	pop	r27
     884:	27 c0       	rjmp	.+78     	; 0x8d4 <__udivmod64+0x94>
     886:	1b 2e       	mov	r1, r27
     888:	bf 91       	pop	r27
     88a:	bb 27       	eor	r27, r27
     88c:	22 0f       	add	r18, r18
     88e:	33 1f       	adc	r19, r19
     890:	44 1f       	adc	r20, r20
     892:	55 1f       	adc	r21, r21
     894:	66 1f       	adc	r22, r22
     896:	77 1f       	adc	r23, r23
     898:	88 1f       	adc	r24, r24
     89a:	99 1f       	adc	r25, r25
     89c:	88 1c       	adc	r8, r8
     89e:	99 1c       	adc	r9, r9
     8a0:	ee 1f       	adc	r30, r30
     8a2:	ff 1f       	adc	r31, r31
     8a4:	cc 1f       	adc	r28, r28
     8a6:	dd 1f       	adc	r29, r29
     8a8:	aa 1f       	adc	r26, r26
     8aa:	bb 1f       	adc	r27, r27
     8ac:	8a 14       	cp	r8, r10
     8ae:	9b 04       	cpc	r9, r11
     8b0:	ec 05       	cpc	r30, r12
     8b2:	fd 05       	cpc	r31, r13
     8b4:	ce 05       	cpc	r28, r14
     8b6:	df 05       	cpc	r29, r15
     8b8:	a0 07       	cpc	r26, r16
     8ba:	b1 07       	cpc	r27, r17
     8bc:	48 f0       	brcs	.+18     	; 0x8d0 <__udivmod64+0x90>
     8be:	8a 18       	sub	r8, r10
     8c0:	9b 08       	sbc	r9, r11
     8c2:	ec 09       	sbc	r30, r12
     8c4:	fd 09       	sbc	r31, r13
     8c6:	ce 09       	sbc	r28, r14
     8c8:	df 09       	sbc	r29, r15
     8ca:	a0 0b       	sbc	r26, r16
     8cc:	b1 0b       	sbc	r27, r17
     8ce:	21 60       	ori	r18, 0x01	; 1
     8d0:	1a 94       	dec	r1
     8d2:	e1 f6       	brne	.-72     	; 0x88c <__udivmod64+0x4c>
     8d4:	2e f4       	brtc	.+10     	; 0x8e0 <__udivmod64+0xa0>
     8d6:	94 01       	movw	r18, r8
     8d8:	af 01       	movw	r20, r30
     8da:	be 01       	movw	r22, r28
     8dc:	cd 01       	movw	r24, r26
     8de:	00 0c       	add	r0, r0
     8e0:	08 95       	ret

000008e2 <__adddi3_s8>:
     8e2:	00 24       	eor	r0, r0
     8e4:	a7 fd       	sbrc	r26, 7
     8e6:	00 94       	com	r0
     8e8:	2a 0f       	add	r18, r26
     8ea:	30 1d       	adc	r19, r0
     8ec:	40 1d       	adc	r20, r0
     8ee:	50 1d       	adc	r21, r0
     8f0:	60 1d       	adc	r22, r0
     8f2:	70 1d       	adc	r23, r0
     8f4:	80 1d       	adc	r24, r0
     8f6:	90 1d       	adc	r25, r0
     8f8:	08 95       	ret

000008fa <__udivmodhi4>:
     8fa:	aa 1b       	sub	r26, r26
     8fc:	bb 1b       	sub	r27, r27
     8fe:	51 e1       	ldi	r21, 0x11	; 17
     900:	07 c0       	rjmp	.+14     	; 0x910 <__udivmodhi4_ep>

00000902 <__udivmodhi4_loop>:
     902:	aa 1f       	adc	r26, r26
     904:	bb 1f       	adc	r27, r27
     906:	a6 17       	cp	r26, r22
     908:	b7 07       	cpc	r27, r23
     90a:	10 f0       	brcs	.+4      	; 0x910 <__udivmodhi4_ep>
     90c:	a6 1b       	sub	r26, r22
     90e:	b7 0b       	sbc	r27, r23

00000910 <__udivmodhi4_ep>:
     910:	88 1f       	adc	r24, r24
     912:	99 1f       	adc	r25, r25
     914:	5a 95       	dec	r21
     916:	a9 f7       	brne	.-22     	; 0x902 <__udivmodhi4_loop>
     918:	80 95       	com	r24
     91a:	90 95       	com	r25
     91c:	bc 01       	movw	r22, r24
     91e:	cd 01       	movw	r24, r26
     920:	08 95       	ret

00000922 <malloc>:
     922:	0f 93       	push	r16
     924:	1f 93       	push	r17
     926:	cf 93       	push	r28
     928:	df 93       	push	r29
     92a:	82 30       	cpi	r24, 0x02	; 2
     92c:	91 05       	cpc	r25, r1
     92e:	10 f4       	brcc	.+4      	; 0x934 <malloc+0x12>
     930:	82 e0       	ldi	r24, 0x02	; 2
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	e0 91 89 01 	lds	r30, 0x0189	; 0x800189 <__flp>
     938:	f0 91 8a 01 	lds	r31, 0x018A	; 0x80018a <__flp+0x1>
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	a0 e0       	ldi	r26, 0x00	; 0
     942:	b0 e0       	ldi	r27, 0x00	; 0
     944:	30 97       	sbiw	r30, 0x00	; 0
     946:	19 f1       	breq	.+70     	; 0x98e <malloc+0x6c>
     948:	40 81       	ld	r20, Z
     94a:	51 81       	ldd	r21, Z+1	; 0x01
     94c:	02 81       	ldd	r16, Z+2	; 0x02
     94e:	13 81       	ldd	r17, Z+3	; 0x03
     950:	48 17       	cp	r20, r24
     952:	59 07       	cpc	r21, r25
     954:	c8 f0       	brcs	.+50     	; 0x988 <malloc+0x66>
     956:	84 17       	cp	r24, r20
     958:	95 07       	cpc	r25, r21
     95a:	69 f4       	brne	.+26     	; 0x976 <malloc+0x54>
     95c:	10 97       	sbiw	r26, 0x00	; 0
     95e:	31 f0       	breq	.+12     	; 0x96c <malloc+0x4a>
     960:	12 96       	adiw	r26, 0x02	; 2
     962:	0c 93       	st	X, r16
     964:	12 97       	sbiw	r26, 0x02	; 2
     966:	13 96       	adiw	r26, 0x03	; 3
     968:	1c 93       	st	X, r17
     96a:	27 c0       	rjmp	.+78     	; 0x9ba <malloc+0x98>
     96c:	00 93 89 01 	sts	0x0189, r16	; 0x800189 <__flp>
     970:	10 93 8a 01 	sts	0x018A, r17	; 0x80018a <__flp+0x1>
     974:	22 c0       	rjmp	.+68     	; 0x9ba <malloc+0x98>
     976:	21 15       	cp	r18, r1
     978:	31 05       	cpc	r19, r1
     97a:	19 f0       	breq	.+6      	; 0x982 <malloc+0x60>
     97c:	42 17       	cp	r20, r18
     97e:	53 07       	cpc	r21, r19
     980:	18 f4       	brcc	.+6      	; 0x988 <malloc+0x66>
     982:	9a 01       	movw	r18, r20
     984:	bd 01       	movw	r22, r26
     986:	ef 01       	movw	r28, r30
     988:	df 01       	movw	r26, r30
     98a:	f8 01       	movw	r30, r16
     98c:	db cf       	rjmp	.-74     	; 0x944 <malloc+0x22>
     98e:	21 15       	cp	r18, r1
     990:	31 05       	cpc	r19, r1
     992:	f9 f0       	breq	.+62     	; 0x9d2 <malloc+0xb0>
     994:	28 1b       	sub	r18, r24
     996:	39 0b       	sbc	r19, r25
     998:	24 30       	cpi	r18, 0x04	; 4
     99a:	31 05       	cpc	r19, r1
     99c:	80 f4       	brcc	.+32     	; 0x9be <malloc+0x9c>
     99e:	8a 81       	ldd	r24, Y+2	; 0x02
     9a0:	9b 81       	ldd	r25, Y+3	; 0x03
     9a2:	61 15       	cp	r22, r1
     9a4:	71 05       	cpc	r23, r1
     9a6:	21 f0       	breq	.+8      	; 0x9b0 <malloc+0x8e>
     9a8:	fb 01       	movw	r30, r22
     9aa:	93 83       	std	Z+3, r25	; 0x03
     9ac:	82 83       	std	Z+2, r24	; 0x02
     9ae:	04 c0       	rjmp	.+8      	; 0x9b8 <malloc+0x96>
     9b0:	90 93 8a 01 	sts	0x018A, r25	; 0x80018a <__flp+0x1>
     9b4:	80 93 89 01 	sts	0x0189, r24	; 0x800189 <__flp>
     9b8:	fe 01       	movw	r30, r28
     9ba:	32 96       	adiw	r30, 0x02	; 2
     9bc:	44 c0       	rjmp	.+136    	; 0xa46 <malloc+0x124>
     9be:	fe 01       	movw	r30, r28
     9c0:	e2 0f       	add	r30, r18
     9c2:	f3 1f       	adc	r31, r19
     9c4:	81 93       	st	Z+, r24
     9c6:	91 93       	st	Z+, r25
     9c8:	22 50       	subi	r18, 0x02	; 2
     9ca:	31 09       	sbc	r19, r1
     9cc:	39 83       	std	Y+1, r19	; 0x01
     9ce:	28 83       	st	Y, r18
     9d0:	3a c0       	rjmp	.+116    	; 0xa46 <malloc+0x124>
     9d2:	20 91 87 01 	lds	r18, 0x0187	; 0x800187 <__brkval>
     9d6:	30 91 88 01 	lds	r19, 0x0188	; 0x800188 <__brkval+0x1>
     9da:	23 2b       	or	r18, r19
     9dc:	41 f4       	brne	.+16     	; 0x9ee <malloc+0xcc>
     9de:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     9e2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     9e6:	30 93 88 01 	sts	0x0188, r19	; 0x800188 <__brkval+0x1>
     9ea:	20 93 87 01 	sts	0x0187, r18	; 0x800187 <__brkval>
     9ee:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     9f2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     9f6:	21 15       	cp	r18, r1
     9f8:	31 05       	cpc	r19, r1
     9fa:	41 f4       	brne	.+16     	; 0xa0c <malloc+0xea>
     9fc:	2d b7       	in	r18, 0x3d	; 61
     9fe:	3e b7       	in	r19, 0x3e	; 62
     a00:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     a04:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     a08:	24 1b       	sub	r18, r20
     a0a:	35 0b       	sbc	r19, r21
     a0c:	e0 91 87 01 	lds	r30, 0x0187	; 0x800187 <__brkval>
     a10:	f0 91 88 01 	lds	r31, 0x0188	; 0x800188 <__brkval+0x1>
     a14:	e2 17       	cp	r30, r18
     a16:	f3 07       	cpc	r31, r19
     a18:	a0 f4       	brcc	.+40     	; 0xa42 <malloc+0x120>
     a1a:	2e 1b       	sub	r18, r30
     a1c:	3f 0b       	sbc	r19, r31
     a1e:	28 17       	cp	r18, r24
     a20:	39 07       	cpc	r19, r25
     a22:	78 f0       	brcs	.+30     	; 0xa42 <malloc+0x120>
     a24:	ac 01       	movw	r20, r24
     a26:	4e 5f       	subi	r20, 0xFE	; 254
     a28:	5f 4f       	sbci	r21, 0xFF	; 255
     a2a:	24 17       	cp	r18, r20
     a2c:	35 07       	cpc	r19, r21
     a2e:	48 f0       	brcs	.+18     	; 0xa42 <malloc+0x120>
     a30:	4e 0f       	add	r20, r30
     a32:	5f 1f       	adc	r21, r31
     a34:	50 93 88 01 	sts	0x0188, r21	; 0x800188 <__brkval+0x1>
     a38:	40 93 87 01 	sts	0x0187, r20	; 0x800187 <__brkval>
     a3c:	81 93       	st	Z+, r24
     a3e:	91 93       	st	Z+, r25
     a40:	02 c0       	rjmp	.+4      	; 0xa46 <malloc+0x124>
     a42:	e0 e0       	ldi	r30, 0x00	; 0
     a44:	f0 e0       	ldi	r31, 0x00	; 0
     a46:	cf 01       	movw	r24, r30
     a48:	df 91       	pop	r29
     a4a:	cf 91       	pop	r28
     a4c:	1f 91       	pop	r17
     a4e:	0f 91       	pop	r16
     a50:	08 95       	ret

00000a52 <free>:
     a52:	cf 93       	push	r28
     a54:	df 93       	push	r29
     a56:	00 97       	sbiw	r24, 0x00	; 0
     a58:	09 f4       	brne	.+2      	; 0xa5c <free+0xa>
     a5a:	81 c0       	rjmp	.+258    	; 0xb5e <free+0x10c>
     a5c:	fc 01       	movw	r30, r24
     a5e:	32 97       	sbiw	r30, 0x02	; 2
     a60:	13 82       	std	Z+3, r1	; 0x03
     a62:	12 82       	std	Z+2, r1	; 0x02
     a64:	a0 91 89 01 	lds	r26, 0x0189	; 0x800189 <__flp>
     a68:	b0 91 8a 01 	lds	r27, 0x018A	; 0x80018a <__flp+0x1>
     a6c:	10 97       	sbiw	r26, 0x00	; 0
     a6e:	81 f4       	brne	.+32     	; 0xa90 <free+0x3e>
     a70:	20 81       	ld	r18, Z
     a72:	31 81       	ldd	r19, Z+1	; 0x01
     a74:	82 0f       	add	r24, r18
     a76:	93 1f       	adc	r25, r19
     a78:	20 91 87 01 	lds	r18, 0x0187	; 0x800187 <__brkval>
     a7c:	30 91 88 01 	lds	r19, 0x0188	; 0x800188 <__brkval+0x1>
     a80:	28 17       	cp	r18, r24
     a82:	39 07       	cpc	r19, r25
     a84:	51 f5       	brne	.+84     	; 0xada <free+0x88>
     a86:	f0 93 88 01 	sts	0x0188, r31	; 0x800188 <__brkval+0x1>
     a8a:	e0 93 87 01 	sts	0x0187, r30	; 0x800187 <__brkval>
     a8e:	67 c0       	rjmp	.+206    	; 0xb5e <free+0x10c>
     a90:	ed 01       	movw	r28, r26
     a92:	20 e0       	ldi	r18, 0x00	; 0
     a94:	30 e0       	ldi	r19, 0x00	; 0
     a96:	ce 17       	cp	r28, r30
     a98:	df 07       	cpc	r29, r31
     a9a:	40 f4       	brcc	.+16     	; 0xaac <free+0x5a>
     a9c:	4a 81       	ldd	r20, Y+2	; 0x02
     a9e:	5b 81       	ldd	r21, Y+3	; 0x03
     aa0:	9e 01       	movw	r18, r28
     aa2:	41 15       	cp	r20, r1
     aa4:	51 05       	cpc	r21, r1
     aa6:	f1 f0       	breq	.+60     	; 0xae4 <free+0x92>
     aa8:	ea 01       	movw	r28, r20
     aaa:	f5 cf       	rjmp	.-22     	; 0xa96 <free+0x44>
     aac:	d3 83       	std	Z+3, r29	; 0x03
     aae:	c2 83       	std	Z+2, r28	; 0x02
     ab0:	40 81       	ld	r20, Z
     ab2:	51 81       	ldd	r21, Z+1	; 0x01
     ab4:	84 0f       	add	r24, r20
     ab6:	95 1f       	adc	r25, r21
     ab8:	c8 17       	cp	r28, r24
     aba:	d9 07       	cpc	r29, r25
     abc:	59 f4       	brne	.+22     	; 0xad4 <free+0x82>
     abe:	88 81       	ld	r24, Y
     ac0:	99 81       	ldd	r25, Y+1	; 0x01
     ac2:	84 0f       	add	r24, r20
     ac4:	95 1f       	adc	r25, r21
     ac6:	02 96       	adiw	r24, 0x02	; 2
     ac8:	91 83       	std	Z+1, r25	; 0x01
     aca:	80 83       	st	Z, r24
     acc:	8a 81       	ldd	r24, Y+2	; 0x02
     ace:	9b 81       	ldd	r25, Y+3	; 0x03
     ad0:	93 83       	std	Z+3, r25	; 0x03
     ad2:	82 83       	std	Z+2, r24	; 0x02
     ad4:	21 15       	cp	r18, r1
     ad6:	31 05       	cpc	r19, r1
     ad8:	29 f4       	brne	.+10     	; 0xae4 <free+0x92>
     ada:	f0 93 8a 01 	sts	0x018A, r31	; 0x80018a <__flp+0x1>
     ade:	e0 93 89 01 	sts	0x0189, r30	; 0x800189 <__flp>
     ae2:	3d c0       	rjmp	.+122    	; 0xb5e <free+0x10c>
     ae4:	e9 01       	movw	r28, r18
     ae6:	fb 83       	std	Y+3, r31	; 0x03
     ae8:	ea 83       	std	Y+2, r30	; 0x02
     aea:	49 91       	ld	r20, Y+
     aec:	59 91       	ld	r21, Y+
     aee:	c4 0f       	add	r28, r20
     af0:	d5 1f       	adc	r29, r21
     af2:	ec 17       	cp	r30, r28
     af4:	fd 07       	cpc	r31, r29
     af6:	61 f4       	brne	.+24     	; 0xb10 <free+0xbe>
     af8:	80 81       	ld	r24, Z
     afa:	91 81       	ldd	r25, Z+1	; 0x01
     afc:	84 0f       	add	r24, r20
     afe:	95 1f       	adc	r25, r21
     b00:	02 96       	adiw	r24, 0x02	; 2
     b02:	e9 01       	movw	r28, r18
     b04:	99 83       	std	Y+1, r25	; 0x01
     b06:	88 83       	st	Y, r24
     b08:	82 81       	ldd	r24, Z+2	; 0x02
     b0a:	93 81       	ldd	r25, Z+3	; 0x03
     b0c:	9b 83       	std	Y+3, r25	; 0x03
     b0e:	8a 83       	std	Y+2, r24	; 0x02
     b10:	e0 e0       	ldi	r30, 0x00	; 0
     b12:	f0 e0       	ldi	r31, 0x00	; 0
     b14:	12 96       	adiw	r26, 0x02	; 2
     b16:	8d 91       	ld	r24, X+
     b18:	9c 91       	ld	r25, X
     b1a:	13 97       	sbiw	r26, 0x03	; 3
     b1c:	00 97       	sbiw	r24, 0x00	; 0
     b1e:	19 f0       	breq	.+6      	; 0xb26 <free+0xd4>
     b20:	fd 01       	movw	r30, r26
     b22:	dc 01       	movw	r26, r24
     b24:	f7 cf       	rjmp	.-18     	; 0xb14 <free+0xc2>
     b26:	8d 91       	ld	r24, X+
     b28:	9c 91       	ld	r25, X
     b2a:	11 97       	sbiw	r26, 0x01	; 1
     b2c:	9d 01       	movw	r18, r26
     b2e:	2e 5f       	subi	r18, 0xFE	; 254
     b30:	3f 4f       	sbci	r19, 0xFF	; 255
     b32:	82 0f       	add	r24, r18
     b34:	93 1f       	adc	r25, r19
     b36:	20 91 87 01 	lds	r18, 0x0187	; 0x800187 <__brkval>
     b3a:	30 91 88 01 	lds	r19, 0x0188	; 0x800188 <__brkval+0x1>
     b3e:	28 17       	cp	r18, r24
     b40:	39 07       	cpc	r19, r25
     b42:	69 f4       	brne	.+26     	; 0xb5e <free+0x10c>
     b44:	30 97       	sbiw	r30, 0x00	; 0
     b46:	29 f4       	brne	.+10     	; 0xb52 <free+0x100>
     b48:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <__flp+0x1>
     b4c:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <__flp>
     b50:	02 c0       	rjmp	.+4      	; 0xb56 <free+0x104>
     b52:	13 82       	std	Z+3, r1	; 0x03
     b54:	12 82       	std	Z+2, r1	; 0x02
     b56:	b0 93 88 01 	sts	0x0188, r27	; 0x800188 <__brkval+0x1>
     b5a:	a0 93 87 01 	sts	0x0187, r26	; 0x800187 <__brkval>
     b5e:	df 91       	pop	r29
     b60:	cf 91       	pop	r28
     b62:	08 95       	ret

00000b64 <atoi>:
     b64:	fc 01       	movw	r30, r24
     b66:	88 27       	eor	r24, r24
     b68:	99 27       	eor	r25, r25
     b6a:	e8 94       	clt
     b6c:	21 91       	ld	r18, Z+
     b6e:	20 32       	cpi	r18, 0x20	; 32
     b70:	e9 f3       	breq	.-6      	; 0xb6c <atoi+0x8>
     b72:	29 30       	cpi	r18, 0x09	; 9
     b74:	10 f0       	brcs	.+4      	; 0xb7a <atoi+0x16>
     b76:	2e 30       	cpi	r18, 0x0E	; 14
     b78:	c8 f3       	brcs	.-14     	; 0xb6c <atoi+0x8>
     b7a:	2b 32       	cpi	r18, 0x2B	; 43
     b7c:	41 f0       	breq	.+16     	; 0xb8e <atoi+0x2a>
     b7e:	2d 32       	cpi	r18, 0x2D	; 45
     b80:	39 f4       	brne	.+14     	; 0xb90 <atoi+0x2c>
     b82:	68 94       	set
     b84:	04 c0       	rjmp	.+8      	; 0xb8e <atoi+0x2a>
     b86:	0e 94 d0 05 	call	0xba0	; 0xba0 <__mulhi_const_10>
     b8a:	82 0f       	add	r24, r18
     b8c:	91 1d       	adc	r25, r1
     b8e:	21 91       	ld	r18, Z+
     b90:	20 53       	subi	r18, 0x30	; 48
     b92:	2a 30       	cpi	r18, 0x0A	; 10
     b94:	c0 f3       	brcs	.-16     	; 0xb86 <atoi+0x22>
     b96:	1e f4       	brtc	.+6      	; 0xb9e <atoi+0x3a>
     b98:	90 95       	com	r25
     b9a:	81 95       	neg	r24
     b9c:	9f 4f       	sbci	r25, 0xFF	; 255
     b9e:	08 95       	ret

00000ba0 <__mulhi_const_10>:
     ba0:	7a e0       	ldi	r23, 0x0A	; 10
     ba2:	97 9f       	mul	r25, r23
     ba4:	90 2d       	mov	r25, r0
     ba6:	87 9f       	mul	r24, r23
     ba8:	80 2d       	mov	r24, r0
     baa:	91 0d       	add	r25, r1
     bac:	11 24       	eor	r1, r1
     bae:	08 95       	ret

00000bb0 <vsnprintf>:
     bb0:	ae e0       	ldi	r26, 0x0E	; 14
     bb2:	b0 e0       	ldi	r27, 0x00	; 0
     bb4:	ee ed       	ldi	r30, 0xDE	; 222
     bb6:	f5 e0       	ldi	r31, 0x05	; 5
     bb8:	0c 94 bf 08 	jmp	0x117e	; 0x117e <__prologue_saves__+0x1c>
     bbc:	8c 01       	movw	r16, r24
     bbe:	fa 01       	movw	r30, r20
     bc0:	86 e0       	ldi	r24, 0x06	; 6
     bc2:	8c 83       	std	Y+4, r24	; 0x04
     bc4:	1a 83       	std	Y+2, r17	; 0x02
     bc6:	09 83       	std	Y+1, r16	; 0x01
     bc8:	77 ff       	sbrs	r23, 7
     bca:	02 c0       	rjmp	.+4      	; 0xbd0 <vsnprintf+0x20>
     bcc:	60 e0       	ldi	r22, 0x00	; 0
     bce:	70 e8       	ldi	r23, 0x80	; 128
     bd0:	cb 01       	movw	r24, r22
     bd2:	01 97       	sbiw	r24, 0x01	; 1
     bd4:	9e 83       	std	Y+6, r25	; 0x06
     bd6:	8d 83       	std	Y+5, r24	; 0x05
     bd8:	a9 01       	movw	r20, r18
     bda:	bf 01       	movw	r22, r30
     bdc:	ce 01       	movw	r24, r28
     bde:	01 96       	adiw	r24, 0x01	; 1
     be0:	0e 94 20 06 	call	0xc40	; 0xc40 <vfprintf>
     be4:	4d 81       	ldd	r20, Y+5	; 0x05
     be6:	5e 81       	ldd	r21, Y+6	; 0x06
     be8:	57 fd       	sbrc	r21, 7
     bea:	0a c0       	rjmp	.+20     	; 0xc00 <vsnprintf+0x50>
     bec:	2f 81       	ldd	r18, Y+7	; 0x07
     bee:	38 85       	ldd	r19, Y+8	; 0x08
     bf0:	42 17       	cp	r20, r18
     bf2:	53 07       	cpc	r21, r19
     bf4:	0c f4       	brge	.+2      	; 0xbf8 <vsnprintf+0x48>
     bf6:	9a 01       	movw	r18, r20
     bf8:	f8 01       	movw	r30, r16
     bfa:	e2 0f       	add	r30, r18
     bfc:	f3 1f       	adc	r31, r19
     bfe:	10 82       	st	Z, r1
     c00:	2e 96       	adiw	r28, 0x0e	; 14
     c02:	e4 e0       	ldi	r30, 0x04	; 4
     c04:	0c 94 db 08 	jmp	0x11b6	; 0x11b6 <__epilogue_restores__+0x1c>

00000c08 <vsprintf>:
     c08:	ae e0       	ldi	r26, 0x0E	; 14
     c0a:	b0 e0       	ldi	r27, 0x00	; 0
     c0c:	ea e0       	ldi	r30, 0x0A	; 10
     c0e:	f6 e0       	ldi	r31, 0x06	; 6
     c10:	0c 94 bf 08 	jmp	0x117e	; 0x117e <__prologue_saves__+0x1c>
     c14:	8c 01       	movw	r16, r24
     c16:	86 e0       	ldi	r24, 0x06	; 6
     c18:	8c 83       	std	Y+4, r24	; 0x04
     c1a:	1a 83       	std	Y+2, r17	; 0x02
     c1c:	09 83       	std	Y+1, r16	; 0x01
     c1e:	8f ef       	ldi	r24, 0xFF	; 255
     c20:	9f e7       	ldi	r25, 0x7F	; 127
     c22:	9e 83       	std	Y+6, r25	; 0x06
     c24:	8d 83       	std	Y+5, r24	; 0x05
     c26:	ce 01       	movw	r24, r28
     c28:	01 96       	adiw	r24, 0x01	; 1
     c2a:	0e 94 20 06 	call	0xc40	; 0xc40 <vfprintf>
     c2e:	ef 81       	ldd	r30, Y+7	; 0x07
     c30:	f8 85       	ldd	r31, Y+8	; 0x08
     c32:	e0 0f       	add	r30, r16
     c34:	f1 1f       	adc	r31, r17
     c36:	10 82       	st	Z, r1
     c38:	2e 96       	adiw	r28, 0x0e	; 14
     c3a:	e4 e0       	ldi	r30, 0x04	; 4
     c3c:	0c 94 db 08 	jmp	0x11b6	; 0x11b6 <__epilogue_restores__+0x1c>

00000c40 <vfprintf>:
     c40:	ab e0       	ldi	r26, 0x0B	; 11
     c42:	b0 e0       	ldi	r27, 0x00	; 0
     c44:	e6 e2       	ldi	r30, 0x26	; 38
     c46:	f6 e0       	ldi	r31, 0x06	; 6
     c48:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <__prologue_saves__>
     c4c:	6c 01       	movw	r12, r24
     c4e:	7b 01       	movw	r14, r22
     c50:	8a 01       	movw	r16, r20
     c52:	fc 01       	movw	r30, r24
     c54:	17 82       	std	Z+7, r1	; 0x07
     c56:	16 82       	std	Z+6, r1	; 0x06
     c58:	83 81       	ldd	r24, Z+3	; 0x03
     c5a:	81 ff       	sbrs	r24, 1
     c5c:	cc c1       	rjmp	.+920    	; 0xff6 <vfprintf+0x3b6>
     c5e:	ce 01       	movw	r24, r28
     c60:	01 96       	adiw	r24, 0x01	; 1
     c62:	3c 01       	movw	r6, r24
     c64:	f6 01       	movw	r30, r12
     c66:	93 81       	ldd	r25, Z+3	; 0x03
     c68:	f7 01       	movw	r30, r14
     c6a:	93 fd       	sbrc	r25, 3
     c6c:	85 91       	lpm	r24, Z+
     c6e:	93 ff       	sbrs	r25, 3
     c70:	81 91       	ld	r24, Z+
     c72:	7f 01       	movw	r14, r30
     c74:	88 23       	and	r24, r24
     c76:	09 f4       	brne	.+2      	; 0xc7a <vfprintf+0x3a>
     c78:	ba c1       	rjmp	.+884    	; 0xfee <vfprintf+0x3ae>
     c7a:	85 32       	cpi	r24, 0x25	; 37
     c7c:	39 f4       	brne	.+14     	; 0xc8c <vfprintf+0x4c>
     c7e:	93 fd       	sbrc	r25, 3
     c80:	85 91       	lpm	r24, Z+
     c82:	93 ff       	sbrs	r25, 3
     c84:	81 91       	ld	r24, Z+
     c86:	7f 01       	movw	r14, r30
     c88:	85 32       	cpi	r24, 0x25	; 37
     c8a:	29 f4       	brne	.+10     	; 0xc96 <vfprintf+0x56>
     c8c:	b6 01       	movw	r22, r12
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	0e 94 17 08 	call	0x102e	; 0x102e <fputc>
     c94:	e7 cf       	rjmp	.-50     	; 0xc64 <vfprintf+0x24>
     c96:	91 2c       	mov	r9, r1
     c98:	21 2c       	mov	r2, r1
     c9a:	31 2c       	mov	r3, r1
     c9c:	ff e1       	ldi	r31, 0x1F	; 31
     c9e:	f3 15       	cp	r31, r3
     ca0:	d8 f0       	brcs	.+54     	; 0xcd8 <vfprintf+0x98>
     ca2:	8b 32       	cpi	r24, 0x2B	; 43
     ca4:	79 f0       	breq	.+30     	; 0xcc4 <vfprintf+0x84>
     ca6:	38 f4       	brcc	.+14     	; 0xcb6 <vfprintf+0x76>
     ca8:	80 32       	cpi	r24, 0x20	; 32
     caa:	79 f0       	breq	.+30     	; 0xcca <vfprintf+0x8a>
     cac:	83 32       	cpi	r24, 0x23	; 35
     cae:	a1 f4       	brne	.+40     	; 0xcd8 <vfprintf+0x98>
     cb0:	23 2d       	mov	r18, r3
     cb2:	20 61       	ori	r18, 0x10	; 16
     cb4:	1d c0       	rjmp	.+58     	; 0xcf0 <vfprintf+0xb0>
     cb6:	8d 32       	cpi	r24, 0x2D	; 45
     cb8:	61 f0       	breq	.+24     	; 0xcd2 <vfprintf+0x92>
     cba:	80 33       	cpi	r24, 0x30	; 48
     cbc:	69 f4       	brne	.+26     	; 0xcd8 <vfprintf+0x98>
     cbe:	23 2d       	mov	r18, r3
     cc0:	21 60       	ori	r18, 0x01	; 1
     cc2:	16 c0       	rjmp	.+44     	; 0xcf0 <vfprintf+0xb0>
     cc4:	83 2d       	mov	r24, r3
     cc6:	82 60       	ori	r24, 0x02	; 2
     cc8:	38 2e       	mov	r3, r24
     cca:	e3 2d       	mov	r30, r3
     ccc:	e4 60       	ori	r30, 0x04	; 4
     cce:	3e 2e       	mov	r3, r30
     cd0:	2a c0       	rjmp	.+84     	; 0xd26 <vfprintf+0xe6>
     cd2:	f3 2d       	mov	r31, r3
     cd4:	f8 60       	ori	r31, 0x08	; 8
     cd6:	1d c0       	rjmp	.+58     	; 0xd12 <vfprintf+0xd2>
     cd8:	37 fc       	sbrc	r3, 7
     cda:	2d c0       	rjmp	.+90     	; 0xd36 <vfprintf+0xf6>
     cdc:	20 ed       	ldi	r18, 0xD0	; 208
     cde:	28 0f       	add	r18, r24
     ce0:	2a 30       	cpi	r18, 0x0A	; 10
     ce2:	40 f0       	brcs	.+16     	; 0xcf4 <vfprintf+0xb4>
     ce4:	8e 32       	cpi	r24, 0x2E	; 46
     ce6:	b9 f4       	brne	.+46     	; 0xd16 <vfprintf+0xd6>
     ce8:	36 fc       	sbrc	r3, 6
     cea:	81 c1       	rjmp	.+770    	; 0xfee <vfprintf+0x3ae>
     cec:	23 2d       	mov	r18, r3
     cee:	20 64       	ori	r18, 0x40	; 64
     cf0:	32 2e       	mov	r3, r18
     cf2:	19 c0       	rjmp	.+50     	; 0xd26 <vfprintf+0xe6>
     cf4:	36 fe       	sbrs	r3, 6
     cf6:	06 c0       	rjmp	.+12     	; 0xd04 <vfprintf+0xc4>
     cf8:	8a e0       	ldi	r24, 0x0A	; 10
     cfa:	98 9e       	mul	r9, r24
     cfc:	20 0d       	add	r18, r0
     cfe:	11 24       	eor	r1, r1
     d00:	92 2e       	mov	r9, r18
     d02:	11 c0       	rjmp	.+34     	; 0xd26 <vfprintf+0xe6>
     d04:	ea e0       	ldi	r30, 0x0A	; 10
     d06:	2e 9e       	mul	r2, r30
     d08:	20 0d       	add	r18, r0
     d0a:	11 24       	eor	r1, r1
     d0c:	22 2e       	mov	r2, r18
     d0e:	f3 2d       	mov	r31, r3
     d10:	f0 62       	ori	r31, 0x20	; 32
     d12:	3f 2e       	mov	r3, r31
     d14:	08 c0       	rjmp	.+16     	; 0xd26 <vfprintf+0xe6>
     d16:	8c 36       	cpi	r24, 0x6C	; 108
     d18:	21 f4       	brne	.+8      	; 0xd22 <vfprintf+0xe2>
     d1a:	83 2d       	mov	r24, r3
     d1c:	80 68       	ori	r24, 0x80	; 128
     d1e:	38 2e       	mov	r3, r24
     d20:	02 c0       	rjmp	.+4      	; 0xd26 <vfprintf+0xe6>
     d22:	88 36       	cpi	r24, 0x68	; 104
     d24:	41 f4       	brne	.+16     	; 0xd36 <vfprintf+0xf6>
     d26:	f7 01       	movw	r30, r14
     d28:	93 fd       	sbrc	r25, 3
     d2a:	85 91       	lpm	r24, Z+
     d2c:	93 ff       	sbrs	r25, 3
     d2e:	81 91       	ld	r24, Z+
     d30:	7f 01       	movw	r14, r30
     d32:	81 11       	cpse	r24, r1
     d34:	b3 cf       	rjmp	.-154    	; 0xc9c <vfprintf+0x5c>
     d36:	98 2f       	mov	r25, r24
     d38:	9f 7d       	andi	r25, 0xDF	; 223
     d3a:	95 54       	subi	r25, 0x45	; 69
     d3c:	93 30       	cpi	r25, 0x03	; 3
     d3e:	28 f4       	brcc	.+10     	; 0xd4a <vfprintf+0x10a>
     d40:	0c 5f       	subi	r16, 0xFC	; 252
     d42:	1f 4f       	sbci	r17, 0xFF	; 255
     d44:	9f e3       	ldi	r25, 0x3F	; 63
     d46:	99 83       	std	Y+1, r25	; 0x01
     d48:	0d c0       	rjmp	.+26     	; 0xd64 <vfprintf+0x124>
     d4a:	83 36       	cpi	r24, 0x63	; 99
     d4c:	31 f0       	breq	.+12     	; 0xd5a <vfprintf+0x11a>
     d4e:	83 37       	cpi	r24, 0x73	; 115
     d50:	71 f0       	breq	.+28     	; 0xd6e <vfprintf+0x12e>
     d52:	83 35       	cpi	r24, 0x53	; 83
     d54:	09 f0       	breq	.+2      	; 0xd58 <vfprintf+0x118>
     d56:	59 c0       	rjmp	.+178    	; 0xe0a <vfprintf+0x1ca>
     d58:	21 c0       	rjmp	.+66     	; 0xd9c <vfprintf+0x15c>
     d5a:	f8 01       	movw	r30, r16
     d5c:	80 81       	ld	r24, Z
     d5e:	89 83       	std	Y+1, r24	; 0x01
     d60:	0e 5f       	subi	r16, 0xFE	; 254
     d62:	1f 4f       	sbci	r17, 0xFF	; 255
     d64:	88 24       	eor	r8, r8
     d66:	83 94       	inc	r8
     d68:	91 2c       	mov	r9, r1
     d6a:	53 01       	movw	r10, r6
     d6c:	13 c0       	rjmp	.+38     	; 0xd94 <vfprintf+0x154>
     d6e:	28 01       	movw	r4, r16
     d70:	f2 e0       	ldi	r31, 0x02	; 2
     d72:	4f 0e       	add	r4, r31
     d74:	51 1c       	adc	r5, r1
     d76:	f8 01       	movw	r30, r16
     d78:	a0 80       	ld	r10, Z
     d7a:	b1 80       	ldd	r11, Z+1	; 0x01
     d7c:	36 fe       	sbrs	r3, 6
     d7e:	03 c0       	rjmp	.+6      	; 0xd86 <vfprintf+0x146>
     d80:	69 2d       	mov	r22, r9
     d82:	70 e0       	ldi	r23, 0x00	; 0
     d84:	02 c0       	rjmp	.+4      	; 0xd8a <vfprintf+0x14a>
     d86:	6f ef       	ldi	r22, 0xFF	; 255
     d88:	7f ef       	ldi	r23, 0xFF	; 255
     d8a:	c5 01       	movw	r24, r10
     d8c:	0e 94 0c 08 	call	0x1018	; 0x1018 <strnlen>
     d90:	4c 01       	movw	r8, r24
     d92:	82 01       	movw	r16, r4
     d94:	f3 2d       	mov	r31, r3
     d96:	ff 77       	andi	r31, 0x7F	; 127
     d98:	3f 2e       	mov	r3, r31
     d9a:	16 c0       	rjmp	.+44     	; 0xdc8 <vfprintf+0x188>
     d9c:	28 01       	movw	r4, r16
     d9e:	22 e0       	ldi	r18, 0x02	; 2
     da0:	42 0e       	add	r4, r18
     da2:	51 1c       	adc	r5, r1
     da4:	f8 01       	movw	r30, r16
     da6:	a0 80       	ld	r10, Z
     da8:	b1 80       	ldd	r11, Z+1	; 0x01
     daa:	36 fe       	sbrs	r3, 6
     dac:	03 c0       	rjmp	.+6      	; 0xdb4 <vfprintf+0x174>
     dae:	69 2d       	mov	r22, r9
     db0:	70 e0       	ldi	r23, 0x00	; 0
     db2:	02 c0       	rjmp	.+4      	; 0xdb8 <vfprintf+0x178>
     db4:	6f ef       	ldi	r22, 0xFF	; 255
     db6:	7f ef       	ldi	r23, 0xFF	; 255
     db8:	c5 01       	movw	r24, r10
     dba:	0e 94 01 08 	call	0x1002	; 0x1002 <strnlen_P>
     dbe:	4c 01       	movw	r8, r24
     dc0:	f3 2d       	mov	r31, r3
     dc2:	f0 68       	ori	r31, 0x80	; 128
     dc4:	3f 2e       	mov	r3, r31
     dc6:	82 01       	movw	r16, r4
     dc8:	33 fc       	sbrc	r3, 3
     dca:	1b c0       	rjmp	.+54     	; 0xe02 <vfprintf+0x1c2>
     dcc:	82 2d       	mov	r24, r2
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	88 16       	cp	r8, r24
     dd2:	99 06       	cpc	r9, r25
     dd4:	b0 f4       	brcc	.+44     	; 0xe02 <vfprintf+0x1c2>
     dd6:	b6 01       	movw	r22, r12
     dd8:	80 e2       	ldi	r24, 0x20	; 32
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	0e 94 17 08 	call	0x102e	; 0x102e <fputc>
     de0:	2a 94       	dec	r2
     de2:	f4 cf       	rjmp	.-24     	; 0xdcc <vfprintf+0x18c>
     de4:	f5 01       	movw	r30, r10
     de6:	37 fc       	sbrc	r3, 7
     de8:	85 91       	lpm	r24, Z+
     dea:	37 fe       	sbrs	r3, 7
     dec:	81 91       	ld	r24, Z+
     dee:	5f 01       	movw	r10, r30
     df0:	b6 01       	movw	r22, r12
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	0e 94 17 08 	call	0x102e	; 0x102e <fputc>
     df8:	21 10       	cpse	r2, r1
     dfa:	2a 94       	dec	r2
     dfc:	21 e0       	ldi	r18, 0x01	; 1
     dfe:	82 1a       	sub	r8, r18
     e00:	91 08       	sbc	r9, r1
     e02:	81 14       	cp	r8, r1
     e04:	91 04       	cpc	r9, r1
     e06:	71 f7       	brne	.-36     	; 0xde4 <vfprintf+0x1a4>
     e08:	e8 c0       	rjmp	.+464    	; 0xfda <vfprintf+0x39a>
     e0a:	84 36       	cpi	r24, 0x64	; 100
     e0c:	11 f0       	breq	.+4      	; 0xe12 <vfprintf+0x1d2>
     e0e:	89 36       	cpi	r24, 0x69	; 105
     e10:	41 f5       	brne	.+80     	; 0xe62 <vfprintf+0x222>
     e12:	f8 01       	movw	r30, r16
     e14:	37 fe       	sbrs	r3, 7
     e16:	07 c0       	rjmp	.+14     	; 0xe26 <vfprintf+0x1e6>
     e18:	60 81       	ld	r22, Z
     e1a:	71 81       	ldd	r23, Z+1	; 0x01
     e1c:	82 81       	ldd	r24, Z+2	; 0x02
     e1e:	93 81       	ldd	r25, Z+3	; 0x03
     e20:	0c 5f       	subi	r16, 0xFC	; 252
     e22:	1f 4f       	sbci	r17, 0xFF	; 255
     e24:	08 c0       	rjmp	.+16     	; 0xe36 <vfprintf+0x1f6>
     e26:	60 81       	ld	r22, Z
     e28:	71 81       	ldd	r23, Z+1	; 0x01
     e2a:	07 2e       	mov	r0, r23
     e2c:	00 0c       	add	r0, r0
     e2e:	88 0b       	sbc	r24, r24
     e30:	99 0b       	sbc	r25, r25
     e32:	0e 5f       	subi	r16, 0xFE	; 254
     e34:	1f 4f       	sbci	r17, 0xFF	; 255
     e36:	f3 2d       	mov	r31, r3
     e38:	ff 76       	andi	r31, 0x6F	; 111
     e3a:	3f 2e       	mov	r3, r31
     e3c:	97 ff       	sbrs	r25, 7
     e3e:	09 c0       	rjmp	.+18     	; 0xe52 <vfprintf+0x212>
     e40:	90 95       	com	r25
     e42:	80 95       	com	r24
     e44:	70 95       	com	r23
     e46:	61 95       	neg	r22
     e48:	7f 4f       	sbci	r23, 0xFF	; 255
     e4a:	8f 4f       	sbci	r24, 0xFF	; 255
     e4c:	9f 4f       	sbci	r25, 0xFF	; 255
     e4e:	f0 68       	ori	r31, 0x80	; 128
     e50:	3f 2e       	mov	r3, r31
     e52:	2a e0       	ldi	r18, 0x0A	; 10
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	a3 01       	movw	r20, r6
     e58:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__ultoa_invert>
     e5c:	88 2e       	mov	r8, r24
     e5e:	86 18       	sub	r8, r6
     e60:	45 c0       	rjmp	.+138    	; 0xeec <vfprintf+0x2ac>
     e62:	85 37       	cpi	r24, 0x75	; 117
     e64:	31 f4       	brne	.+12     	; 0xe72 <vfprintf+0x232>
     e66:	23 2d       	mov	r18, r3
     e68:	2f 7e       	andi	r18, 0xEF	; 239
     e6a:	b2 2e       	mov	r11, r18
     e6c:	2a e0       	ldi	r18, 0x0A	; 10
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	25 c0       	rjmp	.+74     	; 0xebc <vfprintf+0x27c>
     e72:	93 2d       	mov	r25, r3
     e74:	99 7f       	andi	r25, 0xF9	; 249
     e76:	b9 2e       	mov	r11, r25
     e78:	8f 36       	cpi	r24, 0x6F	; 111
     e7a:	c1 f0       	breq	.+48     	; 0xeac <vfprintf+0x26c>
     e7c:	18 f4       	brcc	.+6      	; 0xe84 <vfprintf+0x244>
     e7e:	88 35       	cpi	r24, 0x58	; 88
     e80:	79 f0       	breq	.+30     	; 0xea0 <vfprintf+0x260>
     e82:	b5 c0       	rjmp	.+362    	; 0xfee <vfprintf+0x3ae>
     e84:	80 37       	cpi	r24, 0x70	; 112
     e86:	19 f0       	breq	.+6      	; 0xe8e <vfprintf+0x24e>
     e88:	88 37       	cpi	r24, 0x78	; 120
     e8a:	21 f0       	breq	.+8      	; 0xe94 <vfprintf+0x254>
     e8c:	b0 c0       	rjmp	.+352    	; 0xfee <vfprintf+0x3ae>
     e8e:	e9 2f       	mov	r30, r25
     e90:	e0 61       	ori	r30, 0x10	; 16
     e92:	be 2e       	mov	r11, r30
     e94:	b4 fe       	sbrs	r11, 4
     e96:	0d c0       	rjmp	.+26     	; 0xeb2 <vfprintf+0x272>
     e98:	fb 2d       	mov	r31, r11
     e9a:	f4 60       	ori	r31, 0x04	; 4
     e9c:	bf 2e       	mov	r11, r31
     e9e:	09 c0       	rjmp	.+18     	; 0xeb2 <vfprintf+0x272>
     ea0:	34 fe       	sbrs	r3, 4
     ea2:	0a c0       	rjmp	.+20     	; 0xeb8 <vfprintf+0x278>
     ea4:	29 2f       	mov	r18, r25
     ea6:	26 60       	ori	r18, 0x06	; 6
     ea8:	b2 2e       	mov	r11, r18
     eaa:	06 c0       	rjmp	.+12     	; 0xeb8 <vfprintf+0x278>
     eac:	28 e0       	ldi	r18, 0x08	; 8
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	05 c0       	rjmp	.+10     	; 0xebc <vfprintf+0x27c>
     eb2:	20 e1       	ldi	r18, 0x10	; 16
     eb4:	30 e0       	ldi	r19, 0x00	; 0
     eb6:	02 c0       	rjmp	.+4      	; 0xebc <vfprintf+0x27c>
     eb8:	20 e1       	ldi	r18, 0x10	; 16
     eba:	32 e0       	ldi	r19, 0x02	; 2
     ebc:	f8 01       	movw	r30, r16
     ebe:	b7 fe       	sbrs	r11, 7
     ec0:	07 c0       	rjmp	.+14     	; 0xed0 <vfprintf+0x290>
     ec2:	60 81       	ld	r22, Z
     ec4:	71 81       	ldd	r23, Z+1	; 0x01
     ec6:	82 81       	ldd	r24, Z+2	; 0x02
     ec8:	93 81       	ldd	r25, Z+3	; 0x03
     eca:	0c 5f       	subi	r16, 0xFC	; 252
     ecc:	1f 4f       	sbci	r17, 0xFF	; 255
     ece:	06 c0       	rjmp	.+12     	; 0xedc <vfprintf+0x29c>
     ed0:	60 81       	ld	r22, Z
     ed2:	71 81       	ldd	r23, Z+1	; 0x01
     ed4:	80 e0       	ldi	r24, 0x00	; 0
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	0e 5f       	subi	r16, 0xFE	; 254
     eda:	1f 4f       	sbci	r17, 0xFF	; 255
     edc:	a3 01       	movw	r20, r6
     ede:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__ultoa_invert>
     ee2:	88 2e       	mov	r8, r24
     ee4:	86 18       	sub	r8, r6
     ee6:	fb 2d       	mov	r31, r11
     ee8:	ff 77       	andi	r31, 0x7F	; 127
     eea:	3f 2e       	mov	r3, r31
     eec:	36 fe       	sbrs	r3, 6
     eee:	0d c0       	rjmp	.+26     	; 0xf0a <vfprintf+0x2ca>
     ef0:	23 2d       	mov	r18, r3
     ef2:	2e 7f       	andi	r18, 0xFE	; 254
     ef4:	a2 2e       	mov	r10, r18
     ef6:	89 14       	cp	r8, r9
     ef8:	58 f4       	brcc	.+22     	; 0xf10 <vfprintf+0x2d0>
     efa:	34 fe       	sbrs	r3, 4
     efc:	0b c0       	rjmp	.+22     	; 0xf14 <vfprintf+0x2d4>
     efe:	32 fc       	sbrc	r3, 2
     f00:	09 c0       	rjmp	.+18     	; 0xf14 <vfprintf+0x2d4>
     f02:	83 2d       	mov	r24, r3
     f04:	8e 7e       	andi	r24, 0xEE	; 238
     f06:	a8 2e       	mov	r10, r24
     f08:	05 c0       	rjmp	.+10     	; 0xf14 <vfprintf+0x2d4>
     f0a:	b8 2c       	mov	r11, r8
     f0c:	a3 2c       	mov	r10, r3
     f0e:	03 c0       	rjmp	.+6      	; 0xf16 <vfprintf+0x2d6>
     f10:	b8 2c       	mov	r11, r8
     f12:	01 c0       	rjmp	.+2      	; 0xf16 <vfprintf+0x2d6>
     f14:	b9 2c       	mov	r11, r9
     f16:	a4 fe       	sbrs	r10, 4
     f18:	0f c0       	rjmp	.+30     	; 0xf38 <vfprintf+0x2f8>
     f1a:	fe 01       	movw	r30, r28
     f1c:	e8 0d       	add	r30, r8
     f1e:	f1 1d       	adc	r31, r1
     f20:	80 81       	ld	r24, Z
     f22:	80 33       	cpi	r24, 0x30	; 48
     f24:	21 f4       	brne	.+8      	; 0xf2e <vfprintf+0x2ee>
     f26:	9a 2d       	mov	r25, r10
     f28:	99 7e       	andi	r25, 0xE9	; 233
     f2a:	a9 2e       	mov	r10, r25
     f2c:	09 c0       	rjmp	.+18     	; 0xf40 <vfprintf+0x300>
     f2e:	a2 fe       	sbrs	r10, 2
     f30:	06 c0       	rjmp	.+12     	; 0xf3e <vfprintf+0x2fe>
     f32:	b3 94       	inc	r11
     f34:	b3 94       	inc	r11
     f36:	04 c0       	rjmp	.+8      	; 0xf40 <vfprintf+0x300>
     f38:	8a 2d       	mov	r24, r10
     f3a:	86 78       	andi	r24, 0x86	; 134
     f3c:	09 f0       	breq	.+2      	; 0xf40 <vfprintf+0x300>
     f3e:	b3 94       	inc	r11
     f40:	a3 fc       	sbrc	r10, 3
     f42:	11 c0       	rjmp	.+34     	; 0xf66 <vfprintf+0x326>
     f44:	a0 fe       	sbrs	r10, 0
     f46:	06 c0       	rjmp	.+12     	; 0xf54 <vfprintf+0x314>
     f48:	b2 14       	cp	r11, r2
     f4a:	88 f4       	brcc	.+34     	; 0xf6e <vfprintf+0x32e>
     f4c:	28 0c       	add	r2, r8
     f4e:	92 2c       	mov	r9, r2
     f50:	9b 18       	sub	r9, r11
     f52:	0e c0       	rjmp	.+28     	; 0xf70 <vfprintf+0x330>
     f54:	b2 14       	cp	r11, r2
     f56:	60 f4       	brcc	.+24     	; 0xf70 <vfprintf+0x330>
     f58:	b6 01       	movw	r22, r12
     f5a:	80 e2       	ldi	r24, 0x20	; 32
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	0e 94 17 08 	call	0x102e	; 0x102e <fputc>
     f62:	b3 94       	inc	r11
     f64:	f7 cf       	rjmp	.-18     	; 0xf54 <vfprintf+0x314>
     f66:	b2 14       	cp	r11, r2
     f68:	18 f4       	brcc	.+6      	; 0xf70 <vfprintf+0x330>
     f6a:	2b 18       	sub	r2, r11
     f6c:	02 c0       	rjmp	.+4      	; 0xf72 <vfprintf+0x332>
     f6e:	98 2c       	mov	r9, r8
     f70:	21 2c       	mov	r2, r1
     f72:	a4 fe       	sbrs	r10, 4
     f74:	10 c0       	rjmp	.+32     	; 0xf96 <vfprintf+0x356>
     f76:	b6 01       	movw	r22, r12
     f78:	80 e3       	ldi	r24, 0x30	; 48
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	0e 94 17 08 	call	0x102e	; 0x102e <fputc>
     f80:	a2 fe       	sbrs	r10, 2
     f82:	17 c0       	rjmp	.+46     	; 0xfb2 <vfprintf+0x372>
     f84:	a1 fc       	sbrc	r10, 1
     f86:	03 c0       	rjmp	.+6      	; 0xf8e <vfprintf+0x34e>
     f88:	88 e7       	ldi	r24, 0x78	; 120
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	02 c0       	rjmp	.+4      	; 0xf92 <vfprintf+0x352>
     f8e:	88 e5       	ldi	r24, 0x58	; 88
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	b6 01       	movw	r22, r12
     f94:	0c c0       	rjmp	.+24     	; 0xfae <vfprintf+0x36e>
     f96:	8a 2d       	mov	r24, r10
     f98:	86 78       	andi	r24, 0x86	; 134
     f9a:	59 f0       	breq	.+22     	; 0xfb2 <vfprintf+0x372>
     f9c:	a1 fe       	sbrs	r10, 1
     f9e:	02 c0       	rjmp	.+4      	; 0xfa4 <vfprintf+0x364>
     fa0:	8b e2       	ldi	r24, 0x2B	; 43
     fa2:	01 c0       	rjmp	.+2      	; 0xfa6 <vfprintf+0x366>
     fa4:	80 e2       	ldi	r24, 0x20	; 32
     fa6:	a7 fc       	sbrc	r10, 7
     fa8:	8d e2       	ldi	r24, 0x2D	; 45
     faa:	b6 01       	movw	r22, r12
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	0e 94 17 08 	call	0x102e	; 0x102e <fputc>
     fb2:	89 14       	cp	r8, r9
     fb4:	38 f4       	brcc	.+14     	; 0xfc4 <vfprintf+0x384>
     fb6:	b6 01       	movw	r22, r12
     fb8:	80 e3       	ldi	r24, 0x30	; 48
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	0e 94 17 08 	call	0x102e	; 0x102e <fputc>
     fc0:	9a 94       	dec	r9
     fc2:	f7 cf       	rjmp	.-18     	; 0xfb2 <vfprintf+0x372>
     fc4:	8a 94       	dec	r8
     fc6:	f3 01       	movw	r30, r6
     fc8:	e8 0d       	add	r30, r8
     fca:	f1 1d       	adc	r31, r1
     fcc:	80 81       	ld	r24, Z
     fce:	b6 01       	movw	r22, r12
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	0e 94 17 08 	call	0x102e	; 0x102e <fputc>
     fd6:	81 10       	cpse	r8, r1
     fd8:	f5 cf       	rjmp	.-22     	; 0xfc4 <vfprintf+0x384>
     fda:	22 20       	and	r2, r2
     fdc:	09 f4       	brne	.+2      	; 0xfe0 <vfprintf+0x3a0>
     fde:	42 ce       	rjmp	.-892    	; 0xc64 <vfprintf+0x24>
     fe0:	b6 01       	movw	r22, r12
     fe2:	80 e2       	ldi	r24, 0x20	; 32
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	0e 94 17 08 	call	0x102e	; 0x102e <fputc>
     fea:	2a 94       	dec	r2
     fec:	f6 cf       	rjmp	.-20     	; 0xfda <vfprintf+0x39a>
     fee:	f6 01       	movw	r30, r12
     ff0:	86 81       	ldd	r24, Z+6	; 0x06
     ff2:	97 81       	ldd	r25, Z+7	; 0x07
     ff4:	02 c0       	rjmp	.+4      	; 0xffa <vfprintf+0x3ba>
     ff6:	8f ef       	ldi	r24, 0xFF	; 255
     ff8:	9f ef       	ldi	r25, 0xFF	; 255
     ffa:	2b 96       	adiw	r28, 0x0b	; 11
     ffc:	e2 e1       	ldi	r30, 0x12	; 18
     ffe:	0c 94 cd 08 	jmp	0x119a	; 0x119a <__epilogue_restores__>

00001002 <strnlen_P>:
    1002:	fc 01       	movw	r30, r24
    1004:	05 90       	lpm	r0, Z+
    1006:	61 50       	subi	r22, 0x01	; 1
    1008:	70 40       	sbci	r23, 0x00	; 0
    100a:	01 10       	cpse	r0, r1
    100c:	d8 f7       	brcc	.-10     	; 0x1004 <strnlen_P+0x2>
    100e:	80 95       	com	r24
    1010:	90 95       	com	r25
    1012:	8e 0f       	add	r24, r30
    1014:	9f 1f       	adc	r25, r31
    1016:	08 95       	ret

00001018 <strnlen>:
    1018:	fc 01       	movw	r30, r24
    101a:	61 50       	subi	r22, 0x01	; 1
    101c:	70 40       	sbci	r23, 0x00	; 0
    101e:	01 90       	ld	r0, Z+
    1020:	01 10       	cpse	r0, r1
    1022:	d8 f7       	brcc	.-10     	; 0x101a <strnlen+0x2>
    1024:	80 95       	com	r24
    1026:	90 95       	com	r25
    1028:	8e 0f       	add	r24, r30
    102a:	9f 1f       	adc	r25, r31
    102c:	08 95       	ret

0000102e <fputc>:
    102e:	0f 93       	push	r16
    1030:	1f 93       	push	r17
    1032:	cf 93       	push	r28
    1034:	df 93       	push	r29
    1036:	fb 01       	movw	r30, r22
    1038:	23 81       	ldd	r18, Z+3	; 0x03
    103a:	21 fd       	sbrc	r18, 1
    103c:	03 c0       	rjmp	.+6      	; 0x1044 <fputc+0x16>
    103e:	8f ef       	ldi	r24, 0xFF	; 255
    1040:	9f ef       	ldi	r25, 0xFF	; 255
    1042:	2c c0       	rjmp	.+88     	; 0x109c <fputc+0x6e>
    1044:	22 ff       	sbrs	r18, 2
    1046:	16 c0       	rjmp	.+44     	; 0x1074 <fputc+0x46>
    1048:	46 81       	ldd	r20, Z+6	; 0x06
    104a:	57 81       	ldd	r21, Z+7	; 0x07
    104c:	24 81       	ldd	r18, Z+4	; 0x04
    104e:	35 81       	ldd	r19, Z+5	; 0x05
    1050:	42 17       	cp	r20, r18
    1052:	53 07       	cpc	r21, r19
    1054:	44 f4       	brge	.+16     	; 0x1066 <fputc+0x38>
    1056:	a0 81       	ld	r26, Z
    1058:	b1 81       	ldd	r27, Z+1	; 0x01
    105a:	9d 01       	movw	r18, r26
    105c:	2f 5f       	subi	r18, 0xFF	; 255
    105e:	3f 4f       	sbci	r19, 0xFF	; 255
    1060:	31 83       	std	Z+1, r19	; 0x01
    1062:	20 83       	st	Z, r18
    1064:	8c 93       	st	X, r24
    1066:	26 81       	ldd	r18, Z+6	; 0x06
    1068:	37 81       	ldd	r19, Z+7	; 0x07
    106a:	2f 5f       	subi	r18, 0xFF	; 255
    106c:	3f 4f       	sbci	r19, 0xFF	; 255
    106e:	37 83       	std	Z+7, r19	; 0x07
    1070:	26 83       	std	Z+6, r18	; 0x06
    1072:	14 c0       	rjmp	.+40     	; 0x109c <fputc+0x6e>
    1074:	8b 01       	movw	r16, r22
    1076:	ec 01       	movw	r28, r24
    1078:	fb 01       	movw	r30, r22
    107a:	00 84       	ldd	r0, Z+8	; 0x08
    107c:	f1 85       	ldd	r31, Z+9	; 0x09
    107e:	e0 2d       	mov	r30, r0
    1080:	09 95       	icall
    1082:	89 2b       	or	r24, r25
    1084:	e1 f6       	brne	.-72     	; 0x103e <fputc+0x10>
    1086:	d8 01       	movw	r26, r16
    1088:	16 96       	adiw	r26, 0x06	; 6
    108a:	8d 91       	ld	r24, X+
    108c:	9c 91       	ld	r25, X
    108e:	17 97       	sbiw	r26, 0x07	; 7
    1090:	01 96       	adiw	r24, 0x01	; 1
    1092:	17 96       	adiw	r26, 0x07	; 7
    1094:	9c 93       	st	X, r25
    1096:	8e 93       	st	-X, r24
    1098:	16 97       	sbiw	r26, 0x06	; 6
    109a:	ce 01       	movw	r24, r28
    109c:	df 91       	pop	r29
    109e:	cf 91       	pop	r28
    10a0:	1f 91       	pop	r17
    10a2:	0f 91       	pop	r16
    10a4:	08 95       	ret

000010a6 <__ultoa_invert>:
    10a6:	fa 01       	movw	r30, r20
    10a8:	aa 27       	eor	r26, r26
    10aa:	28 30       	cpi	r18, 0x08	; 8
    10ac:	51 f1       	breq	.+84     	; 0x1102 <__ultoa_invert+0x5c>
    10ae:	20 31       	cpi	r18, 0x10	; 16
    10b0:	81 f1       	breq	.+96     	; 0x1112 <__ultoa_invert+0x6c>
    10b2:	e8 94       	clt
    10b4:	6f 93       	push	r22
    10b6:	6e 7f       	andi	r22, 0xFE	; 254
    10b8:	6e 5f       	subi	r22, 0xFE	; 254
    10ba:	7f 4f       	sbci	r23, 0xFF	; 255
    10bc:	8f 4f       	sbci	r24, 0xFF	; 255
    10be:	9f 4f       	sbci	r25, 0xFF	; 255
    10c0:	af 4f       	sbci	r26, 0xFF	; 255
    10c2:	b1 e0       	ldi	r27, 0x01	; 1
    10c4:	3e d0       	rcall	.+124    	; 0x1142 <__ultoa_invert+0x9c>
    10c6:	b4 e0       	ldi	r27, 0x04	; 4
    10c8:	3c d0       	rcall	.+120    	; 0x1142 <__ultoa_invert+0x9c>
    10ca:	67 0f       	add	r22, r23
    10cc:	78 1f       	adc	r23, r24
    10ce:	89 1f       	adc	r24, r25
    10d0:	9a 1f       	adc	r25, r26
    10d2:	a1 1d       	adc	r26, r1
    10d4:	68 0f       	add	r22, r24
    10d6:	79 1f       	adc	r23, r25
    10d8:	8a 1f       	adc	r24, r26
    10da:	91 1d       	adc	r25, r1
    10dc:	a1 1d       	adc	r26, r1
    10de:	6a 0f       	add	r22, r26
    10e0:	71 1d       	adc	r23, r1
    10e2:	81 1d       	adc	r24, r1
    10e4:	91 1d       	adc	r25, r1
    10e6:	a1 1d       	adc	r26, r1
    10e8:	20 d0       	rcall	.+64     	; 0x112a <__ultoa_invert+0x84>
    10ea:	09 f4       	brne	.+2      	; 0x10ee <__ultoa_invert+0x48>
    10ec:	68 94       	set
    10ee:	3f 91       	pop	r19
    10f0:	2a e0       	ldi	r18, 0x0A	; 10
    10f2:	26 9f       	mul	r18, r22
    10f4:	11 24       	eor	r1, r1
    10f6:	30 19       	sub	r19, r0
    10f8:	30 5d       	subi	r19, 0xD0	; 208
    10fa:	31 93       	st	Z+, r19
    10fc:	de f6       	brtc	.-74     	; 0x10b4 <__ultoa_invert+0xe>
    10fe:	cf 01       	movw	r24, r30
    1100:	08 95       	ret
    1102:	46 2f       	mov	r20, r22
    1104:	47 70       	andi	r20, 0x07	; 7
    1106:	40 5d       	subi	r20, 0xD0	; 208
    1108:	41 93       	st	Z+, r20
    110a:	b3 e0       	ldi	r27, 0x03	; 3
    110c:	0f d0       	rcall	.+30     	; 0x112c <__ultoa_invert+0x86>
    110e:	c9 f7       	brne	.-14     	; 0x1102 <__ultoa_invert+0x5c>
    1110:	f6 cf       	rjmp	.-20     	; 0x10fe <__ultoa_invert+0x58>
    1112:	46 2f       	mov	r20, r22
    1114:	4f 70       	andi	r20, 0x0F	; 15
    1116:	40 5d       	subi	r20, 0xD0	; 208
    1118:	4a 33       	cpi	r20, 0x3A	; 58
    111a:	18 f0       	brcs	.+6      	; 0x1122 <__ultoa_invert+0x7c>
    111c:	49 5d       	subi	r20, 0xD9	; 217
    111e:	31 fd       	sbrc	r19, 1
    1120:	40 52       	subi	r20, 0x20	; 32
    1122:	41 93       	st	Z+, r20
    1124:	02 d0       	rcall	.+4      	; 0x112a <__ultoa_invert+0x84>
    1126:	a9 f7       	brne	.-22     	; 0x1112 <__ultoa_invert+0x6c>
    1128:	ea cf       	rjmp	.-44     	; 0x10fe <__ultoa_invert+0x58>
    112a:	b4 e0       	ldi	r27, 0x04	; 4
    112c:	a6 95       	lsr	r26
    112e:	97 95       	ror	r25
    1130:	87 95       	ror	r24
    1132:	77 95       	ror	r23
    1134:	67 95       	ror	r22
    1136:	ba 95       	dec	r27
    1138:	c9 f7       	brne	.-14     	; 0x112c <__ultoa_invert+0x86>
    113a:	00 97       	sbiw	r24, 0x00	; 0
    113c:	61 05       	cpc	r22, r1
    113e:	71 05       	cpc	r23, r1
    1140:	08 95       	ret
    1142:	9b 01       	movw	r18, r22
    1144:	ac 01       	movw	r20, r24
    1146:	0a 2e       	mov	r0, r26
    1148:	06 94       	lsr	r0
    114a:	57 95       	ror	r21
    114c:	47 95       	ror	r20
    114e:	37 95       	ror	r19
    1150:	27 95       	ror	r18
    1152:	ba 95       	dec	r27
    1154:	c9 f7       	brne	.-14     	; 0x1148 <__ultoa_invert+0xa2>
    1156:	62 0f       	add	r22, r18
    1158:	73 1f       	adc	r23, r19
    115a:	84 1f       	adc	r24, r20
    115c:	95 1f       	adc	r25, r21
    115e:	a0 1d       	adc	r26, r0
    1160:	08 95       	ret

00001162 <__prologue_saves__>:
    1162:	2f 92       	push	r2
    1164:	3f 92       	push	r3
    1166:	4f 92       	push	r4
    1168:	5f 92       	push	r5
    116a:	6f 92       	push	r6
    116c:	7f 92       	push	r7
    116e:	8f 92       	push	r8
    1170:	9f 92       	push	r9
    1172:	af 92       	push	r10
    1174:	bf 92       	push	r11
    1176:	cf 92       	push	r12
    1178:	df 92       	push	r13
    117a:	ef 92       	push	r14
    117c:	ff 92       	push	r15
    117e:	0f 93       	push	r16
    1180:	1f 93       	push	r17
    1182:	cf 93       	push	r28
    1184:	df 93       	push	r29
    1186:	cd b7       	in	r28, 0x3d	; 61
    1188:	de b7       	in	r29, 0x3e	; 62
    118a:	ca 1b       	sub	r28, r26
    118c:	db 0b       	sbc	r29, r27
    118e:	0f b6       	in	r0, 0x3f	; 63
    1190:	f8 94       	cli
    1192:	de bf       	out	0x3e, r29	; 62
    1194:	0f be       	out	0x3f, r0	; 63
    1196:	cd bf       	out	0x3d, r28	; 61
    1198:	09 94       	ijmp

0000119a <__epilogue_restores__>:
    119a:	2a 88       	ldd	r2, Y+18	; 0x12
    119c:	39 88       	ldd	r3, Y+17	; 0x11
    119e:	48 88       	ldd	r4, Y+16	; 0x10
    11a0:	5f 84       	ldd	r5, Y+15	; 0x0f
    11a2:	6e 84       	ldd	r6, Y+14	; 0x0e
    11a4:	7d 84       	ldd	r7, Y+13	; 0x0d
    11a6:	8c 84       	ldd	r8, Y+12	; 0x0c
    11a8:	9b 84       	ldd	r9, Y+11	; 0x0b
    11aa:	aa 84       	ldd	r10, Y+10	; 0x0a
    11ac:	b9 84       	ldd	r11, Y+9	; 0x09
    11ae:	c8 84       	ldd	r12, Y+8	; 0x08
    11b0:	df 80       	ldd	r13, Y+7	; 0x07
    11b2:	ee 80       	ldd	r14, Y+6	; 0x06
    11b4:	fd 80       	ldd	r15, Y+5	; 0x05
    11b6:	0c 81       	ldd	r16, Y+4	; 0x04
    11b8:	1b 81       	ldd	r17, Y+3	; 0x03
    11ba:	aa 81       	ldd	r26, Y+2	; 0x02
    11bc:	b9 81       	ldd	r27, Y+1	; 0x01
    11be:	ce 0f       	add	r28, r30
    11c0:	d1 1d       	adc	r29, r1
    11c2:	0f b6       	in	r0, 0x3f	; 63
    11c4:	f8 94       	cli
    11c6:	de bf       	out	0x3e, r29	; 62
    11c8:	0f be       	out	0x3f, r0	; 63
    11ca:	cd bf       	out	0x3d, r28	; 61
    11cc:	ed 01       	movw	r28, r26
    11ce:	08 95       	ret

000011d0 <_exit>:
    11d0:	f8 94       	cli

000011d2 <__stop_program>:
    11d2:	ff cf       	rjmp	.-2      	; 0x11d2 <__stop_program>
